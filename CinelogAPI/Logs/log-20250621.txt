2025-06-21 01:41:13.291 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 01:41:13.457 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 01:41:13.457 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 01:41:13.523 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 01:41:13.524 +04:00 [INF] Hosting environment: Development
2025-06-21 01:41:13.524 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 01:41:14.090 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 01:41:14.224 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 01:41:14.242 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 01:41:14.242 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 153.3798ms
2025-06-21 01:41:14.260 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 01:41:14.265 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.6755ms
2025-06-21 01:41:14.269 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 01:41:14.477 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 01:41:14.510 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.0068ms
2025-06-21 01:41:14.850 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 01:41:14.882 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 31.9193ms
2025-06-21 01:41:15.506 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 01:41:15.761 +04:00 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 01:41:15.990 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 01:41:16.004 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1732.5862ms
2025-06-21 01:41:16.004 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 01:41:16.008 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1784.6508ms
2025-06-21 01:41:16.015 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 01:41:16.042 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 27.1805ms
2025-06-21 01:41:16.043 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 01:41:16.340 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-21 01:41:16.343 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-21 01:41:16.343 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-21 01:41:16.347 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-21 01:41:16.347 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-21 01:41:16.347 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-21 01:41:16.348 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 4.0832ms
2025-06-21 01:41:16.348 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 4.0661ms
2025-06-21 01:41:16.348 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 7.0835ms
2025-06-21 01:41:16.348 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-21 01:41:16.349 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-21 01:41:16.349 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-21 01:41:16.349 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-21 01:41:16.349 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-21 01:41:16.349 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-21 01:41:16.349 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-21 01:41:16.349 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-21 01:41:16.349 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-21 01:41:16.349 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-21 01:41:16.349 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-21 01:41:16.349 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 0.7223ms
2025-06-21 01:41:16.349 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 0.7238ms
2025-06-21 01:41:16.349 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 1.0459ms
2025-06-21 01:41:16.349 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 0.7555ms
2025-06-21 01:41:16.349 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.7694ms
2025-06-21 01:41:16.349 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-21 01:41:16.350 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-21 01:41:16.350 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 0.7648ms
2025-06-21 01:41:16.350 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-21 01:41:16.350 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 0.7242ms
2025-06-21 01:41:19.301 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 01:41:19.303 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:41:19.307 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 01:41:19.386 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 01:41:19.405 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 01:41:19.409 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 01:41:19.415 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 107.9663ms
2025-06-21 01:41:19.415 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:41:19.415 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 114.1769ms
2025-06-21 01:45:11.958 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 01:45:11.959 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:45:11.959 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 01:45:11.982 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 01:45:11.987 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 01:45:11.988 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 01:45:11.988 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 28.8736ms
2025-06-21 01:45:11.988 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:45:11.988 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 29.9316ms
2025-06-21 01:52:00.730 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 01:52:00.732 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:52:00.732 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 01:52:00.818 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 01:52:00.819 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 01:52:00.819 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 01:52:00.820 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 88.1371ms
2025-06-21 01:52:00.820 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:52:00.820 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 89.7454ms
2025-06-21 01:54:10.119 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/162ee907-af20-470b-b76f-6d68b3ae2cf1-Screenshot (7).png - null null
2025-06-21 01:54:10.139 +04:00 [INF] Sending file. Request path: '/images/162ee907-af20-470b-b76f-6d68b3ae2cf1-Screenshot (7).png'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\162ee907-af20-470b-b76f-6d68b3ae2cf1-Screenshot (7).png'
2025-06-21 01:54:10.139 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/162ee907-af20-470b-b76f-6d68b3ae2cf1-Screenshot (7).png - 200 1831371 image/png 20.0224ms
2025-06-21 01:55:38.917 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 01:55:38.919 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 01:55:38.919 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 01:55:38.968 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 01:55:38.973 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 01:55:38.973 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 53.9651ms
2025-06-21 01:55:38.973 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 01:55:38.973 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 56.0989ms
2025-06-21 01:55:38.976 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 01:55:38.976 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.4426ms
2025-06-21 01:55:38.976 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 01:56:23.572 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 01:56:23.572 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:56:23.572 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 01:56:23.591 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 01:56:23.593 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 01:56:23.593 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 01:56:23.593 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 20.8974ms
2025-06-21 01:56:23.593 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:56:23.593 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 21.8579ms
2025-06-21 01:57:10.428 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 01:57:10.429 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:57:10.429 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 01:57:10.430 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 01:57:10.431 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 01:57:10.431 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 01:57:10.431 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.7722ms
2025-06-21 01:57:10.432 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:57:10.432 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.4266ms
2025-06-21 01:57:16.612 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 01:57:16.616 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 01:57:16.617 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:57:16.617 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 01:57:16.618 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 6.3473ms
2025-06-21 01:57:16.618 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 01:57:16.620 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 01:57:16.620 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 01:57:16.620 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 3.15ms
2025-06-21 01:57:16.620 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:57:16.620 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.7713ms
2025-06-21 01:57:16.724 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 01:57:16.724 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.4106ms
2025-06-21 01:57:16.727 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 01:57:16.736 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 8.8853ms
2025-06-21 01:57:17.085 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 01:57:17.100 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 15.1844ms
2025-06-21 01:57:27.502 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 01:57:27.503 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:57:27.503 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 01:57:27.518 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 01:57:27.520 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 01:57:27.520 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 01:57:27.521 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 17.8324ms
2025-06-21 01:57:27.521 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 01:57:27.521 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 18.7039ms
2025-06-21 02:00:39.493 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:00:39.493 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:00:39.494 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:00:39.522 +04:00 [INF] Executed DbCommand (28ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:00:39.529 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:00:39.529 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:00:39.529 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 35.6112ms
2025-06-21 02:00:39.529 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:00:39.529 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 36.3367ms
2025-06-21 02:03:03.988 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 02:03:04.126 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 02:03:04.127 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 02:03:04.194 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 02:03:04.194 +04:00 [INF] Hosting environment: Development
2025-06-21 02:03:04.194 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 02:03:04.711 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 02:03:04.828 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:03:04.842 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:03:04.846 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 135.8173ms
2025-06-21 02:03:04.859 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 02:03:04.861 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:03:04.863 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.8757ms
2025-06-21 02:03:05.044 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 02:03:05.066 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.1394ms
2025-06-21 02:03:05.383 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 02:03:05.416 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 32.9539ms
2025-06-21 02:03:05.959 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 02:03:06.223 +04:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:03:06.447 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:03:06.461 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1597.0768ms
2025-06-21 02:03:06.461 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:03:06.465 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1636.6069ms
2025-06-21 02:03:06.471 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:03:06.499 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 27.7292ms
2025-06-21 02:03:06.499 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:03:08.981 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:03:08.985 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:03:08.989 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:03:09.074 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:03:09.096 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:03:09.100 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:03:09.105 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 115.6369ms
2025-06-21 02:03:09.105 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:03:09.106 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 124.1162ms
2025-06-21 02:03:11.968 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:03:11.969 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:03:11.969 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:03:11.981 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:03:11.984 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:03:11.985 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:03:11.985 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 16.2883ms
2025-06-21 02:03:11.985 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:03:11.985 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 17.3242ms
2025-06-21 02:04:25.994 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:04:25.995 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:04:25.995 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:04:26.010 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:04:26.012 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:04:26.013 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:04:26.013 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 18.1537ms
2025-06-21 02:04:26.013 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:04:26.013 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 19.119ms
2025-06-21 02:04:50.540 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:04:50.541 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:04:50.541 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:04:50.543 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:04:50.544 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:04:50.544 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:04:50.545 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 4.0759ms
2025-06-21 02:04:50.545 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:04:50.545 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 4.8689ms
2025-06-21 02:04:52.836 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:04:52.837 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:04:52.837 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:04:52.838 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:04:52.839 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:04:52.839 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:04:52.840 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.9421ms
2025-06-21 02:04:52.840 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:04:52.840 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.6671ms
2025-06-21 02:04:57.414 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:04:57.415 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:04:57.415 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:04:57.417 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:04:57.418 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:04:57.418 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:04:57.418 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 3.3265ms
2025-06-21 02:04:57.418 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:04:57.418 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.9823ms
2025-06-21 02:04:57.446 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/28f8373b-0a45-417e-90fe-6f8f01497dd7-Screenshot 2024-06-13 232226.png - null null
2025-06-21 02:04:57.446 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/162ee907-af20-470b-b76f-6d68b3ae2cf1-Screenshot (7).png - null null
2025-06-21 02:04:57.455 +04:00 [INF] Sending file. Request path: '/images/28f8373b-0a45-417e-90fe-6f8f01497dd7-Screenshot 2024-06-13 232226.png'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\28f8373b-0a45-417e-90fe-6f8f01497dd7-Screenshot 2024-06-13 232226.png'
2025-06-21 02:04:57.456 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/28f8373b-0a45-417e-90fe-6f8f01497dd7-Screenshot 2024-06-13 232226.png - 200 69828 image/png 9.6338ms
2025-06-21 02:04:57.493 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-21 02:04:57.493 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-21 02:04:57.493 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-21 02:04:57.493 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-21 02:04:57.494 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-21 02:04:57.494 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-21 02:04:57.510 +04:00 [INF] Sending file. Request path: '/images/162ee907-af20-470b-b76f-6d68b3ae2cf1-Screenshot (7).png'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\162ee907-af20-470b-b76f-6d68b3ae2cf1-Screenshot (7).png'
2025-06-21 02:04:57.511 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/162ee907-af20-470b-b76f-6d68b3ae2cf1-Screenshot (7).png - 200 1831371 image/png 64.7267ms
2025-06-21 02:04:57.523 +04:00 [INF] Sending file. Request path: '/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg'
2025-06-21 02:04:57.523 +04:00 [INF] Sending file. Request path: '/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg'
2025-06-21 02:04:57.523 +04:00 [INF] Sending file. Request path: '/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg'
2025-06-21 02:04:57.523 +04:00 [INF] Sending file. Request path: '/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg'
2025-06-21 02:04:57.523 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 200 279270 image/jpeg 29.7115ms
2025-06-21 02:04:57.523 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 200 279270 image/jpeg 29.8548ms
2025-06-21 02:04:57.523 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 200 279270 image/jpeg 30.0123ms
2025-06-21 02:04:57.523 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 200 279270 image/jpeg 29.8259ms
2025-06-21 02:04:57.523 +04:00 [INF] Sending file. Request path: '/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg'
2025-06-21 02:04:57.524 +04:00 [INF] Sending file. Request path: '/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg'
2025-06-21 02:04:57.524 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 200 279270 image/jpeg 30.0491ms
2025-06-21 02:04:57.524 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 200 279270 image/jpeg 30.1673ms
2025-06-21 02:05:51.198 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:05:51.198 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:05:51.198 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:05:51.212 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:05:51.214 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:05:51.214 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:05:51.214 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 15.952ms
2025-06-21 02:05:51.214 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:05:51.214 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 16.5625ms
2025-06-21 02:06:01.381 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 02:06:01.385 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:06:01.385 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:06:01.385 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:06:01.386 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 5.2587ms
2025-06-21 02:06:01.387 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:06:01.388 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:06:01.388 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:06:01.388 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 3.1231ms
2025-06-21 02:06:01.388 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:06:01.389 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.9326ms
2025-06-21 02:06:01.427 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 02:06:01.428 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.7432ms
2025-06-21 02:06:01.452 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 02:06:01.459 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 7.0299ms
2025-06-21 02:06:01.599 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 02:06:01.626 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 27.4509ms
2025-06-21 02:06:26.205 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:06:26.205 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:06:26.205 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:06:26.218 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:06:26.219 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:06:26.219 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:06:26.219 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 13.9358ms
2025-06-21 02:06:26.219 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:06:26.219 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 14.45ms
2025-06-21 02:06:29.970 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 02:06:29.972 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 1.9953ms
2025-06-21 02:06:29.975 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:06:29.975 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:06:29.975 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:06:29.977 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:06:29.978 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:06:29.979 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:06:29.979 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 3.6122ms
2025-06-21 02:06:29.979 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:06:29.979 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 4.3393ms
2025-06-21 02:06:29.995 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 02:06:29.997 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 02:06:29.997 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.2916ms
2025-06-21 02:06:29.999 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 3.9646ms
2025-06-21 02:06:30.195 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 02:06:30.207 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 12.0182ms
2025-06-21 02:10:45.894 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 54
2025-06-21 02:10:45.894 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-21 02:10:45.900 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-21 02:10:45.947 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-21 02:10:45.955 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-21 02:10:46.030 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-21 02:10:46.039 +04:00 [INF] User bdhcbahbc logged in successfully.
2025-06-21 02:10:46.040 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-21 02:10:46.041 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 141.0007ms
2025-06-21 02:10:46.041 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-21 02:10:46.042 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 148.3279ms
2025-06-21 02:10:46.051 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:10:46.053 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:10:46.053 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:10:46.080 +04:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:10:46.084 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:10:46.085 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 31.3974ms
2025-06-21 02:10:46.085 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:10:46.085 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 33.6209ms
2025-06-21 02:10:46.087 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:10:46.087 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.6122ms
2025-06-21 02:10:46.087 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:10:47.686 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:10:47.687 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:10:47.687 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:10:47.693 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:10:47.693 +04:00 [INF] No watchlists found for user 775b011f-96cf-4107-a1b9-df2f53a64253
2025-06-21 02:10:47.694 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.EmptyPartition`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:10:47.694 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 7.3802ms
2025-06-21 02:10:47.694 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:10:47.695 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 8.2373ms
2025-06-21 02:10:54.455 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:10:54.455 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:10:54.455 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:10:54.457 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:10:54.457 +04:00 [INF] No watchlists found for user 775b011f-96cf-4107-a1b9-df2f53a64253
2025-06-21 02:10:54.457 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.EmptyPartition`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:10:54.457 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.8745ms
2025-06-21 02:10:54.457 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:10:54.457 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.6001ms
2025-06-21 02:11:26.031 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 49
2025-06-21 02:11:26.033 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-21 02:11:26.033 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-21 02:11:26.038 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-21 02:11:26.038 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-21 02:11:26.098 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-21 02:11:26.098 +04:00 [INF] User test7 logged in successfully.
2025-06-21 02:11:26.098 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-21 02:11:26.099 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 65.5655ms
2025-06-21 02:11:26.099 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-21 02:11:26.099 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 67.7092ms
2025-06-21 02:11:26.104 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:11:26.104 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:26.104 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:11:26.106 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:11:26.108 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:11:26.109 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.6303ms
2025-06-21 02:11:26.109 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:26.109 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 5.002ms
2025-06-21 02:11:26.110 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:11:26.110 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.4502ms
2025-06-21 02:11:26.110 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:11:28.229 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:11:28.230 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:11:28.230 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:11:28.232 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:11:28.234 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:11:28.235 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:11:28.235 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 4.9444ms
2025-06-21 02:11:28.235 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:11:28.235 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 5.8497ms
2025-06-21 02:11:47.069 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 54
2025-06-21 02:11:47.069 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-21 02:11:47.069 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-21 02:11:47.091 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-21 02:11:47.093 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-21 02:11:47.165 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-21 02:11:47.165 +04:00 [INF] User bdhcbahbc logged in successfully.
2025-06-21 02:11:47.165 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-21 02:11:47.165 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 95.8712ms
2025-06-21 02:11:47.165 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-21 02:11:47.166 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 96.372ms
2025-06-21 02:11:47.172 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:11:47.172 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:47.172 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:11:47.203 +04:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:11:47.206 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:11:47.206 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 34.4492ms
2025-06-21 02:11:47.206 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:47.206 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 34.7979ms
2025-06-21 02:11:47.207 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:11:47.207 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3507ms
2025-06-21 02:11:47.207 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:11:48.797 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:11:48.797 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:48.800 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:11:48.900 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:11:48.918 +04:00 [INF] Watchlist created by user 775b011f-96cf-4107-a1b9-df2f53a64253 for Movie 3
2025-06-21 02:11:48.918 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:11:48.921 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 121.1187ms
2025-06-21 02:11:48.921 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:48.921 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 124.1984ms
2025-06-21 02:11:48.924 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:11:48.924 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:48.924 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:11:48.926 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:11:48.928 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:11:48.928 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.6979ms
2025-06-21 02:11:48.928 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:48.928 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.0019ms
2025-06-21 02:11:48.929 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:11:48.929 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.4157ms
2025-06-21 02:11:48.929 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:11:49.544 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:11:49.544 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:49.544 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:11:49.551 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:11:49.552 +04:00 [INF] Watchlist created by user 775b011f-96cf-4107-a1b9-df2f53a64253 for Movie 1
2025-06-21 02:11:49.552 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:11:49.552 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 7.7563ms
2025-06-21 02:11:49.552 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:49.552 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 8.2514ms
2025-06-21 02:11:49.555 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:11:49.555 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:49.555 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:11:49.557 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:11:49.559 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:11:49.559 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.8264ms
2025-06-21 02:11:49.559 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:49.559 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.151ms
2025-06-21 02:11:49.560 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:11:49.560 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3177ms
2025-06-21 02:11:49.560 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:11:51.861 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:11:51.861 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:51.861 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:11:51.866 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:11:51.866 +04:00 [INF] Watchlist created by user 775b011f-96cf-4107-a1b9-df2f53a64253 for Movie 3
2025-06-21 02:11:51.866 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:11:51.866 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 4.9437ms
2025-06-21 02:11:51.866 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:51.866 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 5.369ms
2025-06-21 02:11:51.870 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:11:51.870 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:51.870 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:11:51.871 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:11:51.874 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:11:51.874 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.8757ms
2025-06-21 02:11:51.874 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:51.874 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.2416ms
2025-06-21 02:11:51.875 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:11:51.875 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.6856ms
2025-06-21 02:11:51.875 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:11:52.996 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:11:52.997 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:52.997 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:11:53.002 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:11:53.003 +04:00 [INF] Watchlist created by user 775b011f-96cf-4107-a1b9-df2f53a64253 for Movie 3
2025-06-21 02:11:53.003 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:11:53.003 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 5.8136ms
2025-06-21 02:11:53.003 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:53.003 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.4063ms
2025-06-21 02:11:53.005 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:11:53.006 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:53.006 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:11:53.007 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:11:53.009 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:11:53.009 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.5099ms
2025-06-21 02:11:53.009 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:53.009 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.8178ms
2025-06-21 02:11:53.010 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:11:53.010 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2693ms
2025-06-21 02:11:53.010 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:11:53.796 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:11:53.796 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:53.796 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:11:53.798 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:11:53.799 +04:00 [INF] Watchlist created by user 775b011f-96cf-4107-a1b9-df2f53a64253 for Movie 6
2025-06-21 02:11:53.799 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:11:53.799 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.4253ms
2025-06-21 02:11:53.799 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:53.799 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 2.8251ms
2025-06-21 02:11:53.802 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:11:53.802 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:53.802 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:11:53.804 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:11:53.806 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:11:53.806 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.5995ms
2025-06-21 02:11:53.806 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:53.806 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.9283ms
2025-06-21 02:11:53.807 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:11:53.807 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3108ms
2025-06-21 02:11:53.807 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:11:54.541 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:11:54.541 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:54.541 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:11:54.548 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:11:54.548 +04:00 [INF] Watchlist created by user 775b011f-96cf-4107-a1b9-df2f53a64253 for Movie 7
2025-06-21 02:11:54.549 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:11:54.549 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 7.5636ms
2025-06-21 02:11:54.549 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:54.549 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 8.1834ms
2025-06-21 02:11:54.553 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:11:54.553 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:54.553 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:11:54.554 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:11:54.556 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:11:54.557 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.8646ms
2025-06-21 02:11:54.557 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:54.557 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.2385ms
2025-06-21 02:11:54.557 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:11:54.558 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2593ms
2025-06-21 02:11:54.558 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:11:55.317 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:11:55.317 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:55.317 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:11:55.323 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:11:55.323 +04:00 [INF] Watchlist created by user 775b011f-96cf-4107-a1b9-df2f53a64253 for Movie 8
2025-06-21 02:11:55.323 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:11:55.324 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 6.0417ms
2025-06-21 02:11:55.324 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:11:55.324 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.6166ms
2025-06-21 02:11:55.328 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:11:55.328 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:55.328 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:11:55.330 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:11:55.332 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:11:55.333 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.5974ms
2025-06-21 02:11:55.333 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:11:55.333 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.8893ms
2025-06-21 02:11:55.334 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:11:55.334 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5033ms
2025-06-21 02:11:55.334 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:11:56.796 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:11:56.796 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:11:56.796 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:11:56.801 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:11:56.802 +04:00 [INF] Retrieved 7 watchlists for user 775b011f-96cf-4107-a1b9-df2f53a64253
2025-06-21 02:11:56.802 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:11:56.802 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 5.8522ms
2025-06-21 02:11:56.802 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:11:56.802 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 6.4924ms
2025-06-21 02:17:04.856 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 49
2025-06-21 02:17:04.856 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-21 02:17:04.856 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-21 02:17:04.872 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-21 02:17:04.875 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-21 02:17:04.937 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-21 02:17:04.938 +04:00 [INF] User test7 logged in successfully.
2025-06-21 02:17:04.938 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-21 02:17:04.938 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 81.9771ms
2025-06-21 02:17:04.938 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-21 02:17:04.938 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 82.5151ms
2025-06-21 02:17:04.943 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:17:04.943 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:17:04.943 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:17:04.970 +04:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:17:04.973 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:17:04.974 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 30.7572ms
2025-06-21 02:17:04.974 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:17:04.974 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 31.0731ms
2025-06-21 02:17:04.974 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:17:04.975 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2902ms
2025-06-21 02:17:04.975 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:17:22.029 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:17:22.030 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:17:22.030 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:17:22.046 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:17:22.047 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:17:22.047 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:17:22.048 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 17.763ms
2025-06-21 02:17:22.048 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:17:22.048 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 18.2793ms
2025-06-21 02:19:54.635 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:19:54.635 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:19:54.635 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:19:54.651 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:19:54.653 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:19:54.653 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:19:54.653 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 17.4775ms
2025-06-21 02:19:54.653 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:19:54.653 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 18.1156ms
2025-06-21 02:20:16.855 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:20:16.856 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:20:16.856 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:20:16.857 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:20:16.858 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:20:16.858 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:20:16.858 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.3547ms
2025-06-21 02:20:16.858 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:20:16.858 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.8774ms
2025-06-21 02:22:54.352 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:22:54.352 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:22:54.352 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:22:54.364 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:22:54.365 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:22:54.365 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:22:54.366 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 13.5647ms
2025-06-21 02:22:54.366 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:22:54.366 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 14.0976ms
2025-06-21 02:23:05.714 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:23:05.715 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:23:05.715 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:23:05.716 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:23:05.717 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:23:05.717 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:23:05.718 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.7369ms
2025-06-21 02:23:05.718 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:23:05.718 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.3553ms
2025-06-21 02:23:09.138 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:23:09.139 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:23:09.139 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:23:09.140 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:23:09.148 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:23:09.149 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:23:09.149 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 9.7722ms
2025-06-21 02:23:09.149 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:23:09.149 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 10.4339ms
2025-06-21 02:23:09.150 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 02:23:09.153 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 3.7774ms
2025-06-21 02:23:09.262 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 02:23:09.262 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.3117ms
2025-06-21 02:23:09.265 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 02:23:09.268 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 2.9199ms
2025-06-21 02:23:09.617 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 02:23:09.625 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 8.7062ms
2025-06-21 02:23:14.463 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 02:23:14.465 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 1.1807ms
2025-06-21 02:23:14.465 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:23:14.465 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:23:14.465 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:23:14.466 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:23:14.467 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:23:14.467 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:23:14.468 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.3622ms
2025-06-21 02:23:14.468 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:23:14.468 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.6791ms
2025-06-21 02:23:14.502 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 02:23:14.505 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 02:23:14.505 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.2693ms
2025-06-21 02:23:14.506 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 3.7631ms
2025-06-21 02:23:14.733 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 02:23:14.743 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 10.1069ms
2025-06-21 02:35:48.279 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 02:35:48.283 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 3.3593ms
2025-06-21 02:35:48.371 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 02:35:48.372 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.3704ms
2025-06-21 02:35:48.375 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 02:35:48.378 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 3.2624ms
2025-06-21 02:35:48.634 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 02:35:48.643 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 9.122ms
2025-06-21 02:35:48.975 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:35:48.976 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:35:48.976 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:35:49.040 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:35:49.041 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:35:49.041 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:35:49.041 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 65.6751ms
2025-06-21 02:35:49.041 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:35:49.041 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 66.2334ms
2025-06-21 02:36:26.120 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - null null
2025-06-21 02:36:26.121 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:26.123 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:26.150 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:36:26.182 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:36:26.185 +04:00 [INF] Watchlist with Id 3 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:26.185 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:36:26.185 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 61.7699ms
2025-06-21 02:36:26.185 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:26.185 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - 200 null application/json; charset=utf-8 64.6587ms
2025-06-21 02:36:26.193 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:36:26.193 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:26.194 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:26.205 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:36:26.206 +04:00 [INF] Retrieved 31 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:26.206 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:36:26.206 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 12.8722ms
2025-06-21 02:36:26.206 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:26.207 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 13.2401ms
2025-06-21 02:36:29.881 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - null null
2025-06-21 02:36:29.881 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:29.881 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:29.884 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:36:29.884 +04:00 [WRN] Watchlist not found with Id: 3 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:29.884 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.2558ms
2025-06-21 02:36:29.884 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:29.886 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:29.922 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:29.928 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - 404 null application/json; charset=utf-8 47.3468ms
2025-06-21 02:36:29.936 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:36:29.936 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:29.936 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:29.937 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:36:29.938 +04:00 [INF] Retrieved 31 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:29.938 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:36:29.938 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.1705ms
2025-06-21 02:36:29.938 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:29.938 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.587ms
2025-06-21 02:36:33.351 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:36:33.351 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:33.351 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:33.352 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:36:33.353 +04:00 [INF] Retrieved 31 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:33.353 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:36:33.353 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.3357ms
2025-06-21 02:36:33.353 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:33.353 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.6893ms
2025-06-21 02:36:37.255 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=8 - null null
2025-06-21 02:36:37.255 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:37.256 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:37.257 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:36:37.258 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:36:37.259 +04:00 [INF] Watchlist with Id 8 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:37.259 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:36:37.259 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.3053ms
2025-06-21 02:36:37.259 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:37.259 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=8 - 200 null application/json; charset=utf-8 3.8621ms
2025-06-21 02:36:37.265 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:36:37.266 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:37.266 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:37.267 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:36:37.268 +04:00 [INF] Retrieved 30 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:37.268 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:36:37.268 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.0797ms
2025-06-21 02:36:37.268 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:37.268 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.3975ms
2025-06-21 02:36:43.214 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=1 - null null
2025-06-21 02:36:43.214 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:43.214 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:43.216 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:36:43.217 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:36:43.217 +04:00 [INF] Watchlist with Id 1 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:43.217 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:36:43.217 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.0504ms
2025-06-21 02:36:43.217 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:43.217 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=1 - 200 null application/json; charset=utf-8 3.3777ms
2025-06-21 02:36:43.223 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:36:43.223 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:43.223 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:43.224 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:36:43.225 +04:00 [INF] Retrieved 29 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:43.225 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:36:43.226 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.3164ms
2025-06-21 02:36:43.226 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:43.226 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.8982ms
2025-06-21 02:36:46.268 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - null null
2025-06-21 02:36:46.268 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:46.268 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:46.270 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:36:46.270 +04:00 [WRN] Watchlist not found with Id: 3 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:46.270 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.0679ms
2025-06-21 02:36:46.271 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:46.271 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:46.272 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:46.273 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - 404 null application/json; charset=utf-8 5.2702ms
2025-06-21 02:36:46.280 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:36:46.280 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:46.281 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:46.282 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:36:46.283 +04:00 [INF] Retrieved 29 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:46.283 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:36:46.283 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.6528ms
2025-06-21 02:36:46.283 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:46.283 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.2893ms
2025-06-21 02:36:48.664 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - null null
2025-06-21 02:36:48.664 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:48.664 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:48.665 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:36:48.666 +04:00 [WRN] Watchlist not found with Id: 3 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:48.666 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 1.712ms
2025-06-21 02:36:48.666 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:48.666 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:48.667 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:48.668 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - 404 null application/json; charset=utf-8 4.1177ms
2025-06-21 02:36:48.673 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:36:48.673 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:48.673 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:48.674 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:36:48.675 +04:00 [INF] Retrieved 29 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:48.675 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:36:48.675 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.1286ms
2025-06-21 02:36:48.675 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:48.675 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.4375ms
2025-06-21 02:36:51.440 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - null null
2025-06-21 02:36:51.440 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:51.440 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:51.442 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:36:51.442 +04:00 [WRN] Watchlist not found with Id: 3 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:51.442 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 1.5824ms
2025-06-21 02:36:51.442 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:51.442 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:51.443 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:51.443 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - 404 null application/json; charset=utf-8 3.2603ms
2025-06-21 02:36:51.448 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:36:51.448 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:51.448 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:51.449 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:36:51.451 +04:00 [INF] Retrieved 29 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:51.451 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:36:51.452 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 3.4327ms
2025-06-21 02:36:51.452 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:51.452 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.9881ms
2025-06-21 02:36:52.899 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - null null
2025-06-21 02:36:52.899 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:52.899 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:52.901 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:36:52.902 +04:00 [WRN] Watchlist not found with Id: 3 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:52.902 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.3342ms
2025-06-21 02:36:52.902 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:52.902 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:52.903 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:52.904 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - 404 null application/json; charset=utf-8 4.9339ms
2025-06-21 02:36:52.908 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:36:52.908 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:52.908 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:52.910 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:36:52.912 +04:00 [INF] Retrieved 29 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:52.912 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:36:52.912 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 3.5114ms
2025-06-21 02:36:52.912 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:52.912 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.8722ms
2025-06-21 02:36:54.723 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - null null
2025-06-21 02:36:54.723 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:54.723 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:54.724 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:36:54.724 +04:00 [WRN] Watchlist not found with Id: 3 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:54.725 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 1.6838ms
2025-06-21 02:36:54.725 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:54.725 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:54.725 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:54.726 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - 404 null application/json; charset=utf-8 3.1905ms
2025-06-21 02:36:54.731 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:36:54.731 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:54.731 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:54.732 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:36:54.733 +04:00 [INF] Retrieved 29 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:54.733 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:36:54.733 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.8359ms
2025-06-21 02:36:54.733 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:54.733 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.1397ms
2025-06-21 02:36:56.279 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - null null
2025-06-21 02:36:56.280 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:56.280 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:56.281 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:36:56.281 +04:00 [WRN] Watchlist not found with Id: 3 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:56.281 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 1.5153ms
2025-06-21 02:36:56.281 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:36:56.281 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:56.282 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:36:56.283 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - 404 null application/json; charset=utf-8 3.6458ms
2025-06-21 02:36:56.289 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:36:56.289 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:56.289 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:56.290 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:36:56.291 +04:00 [INF] Retrieved 29 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:56.292 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:36:56.292 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.4263ms
2025-06-21 02:36:56.292 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:56.292 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.9156ms
2025-06-21 02:36:57.334 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:36:57.334 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:57.334 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:36:57.335 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:36:57.336 +04:00 [INF] Retrieved 29 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:36:57.336 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:36:57.336 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.2847ms
2025-06-21 02:36:57.336 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:36:57.336 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.6386ms
2025-06-21 02:37:00.688 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=6 - null null
2025-06-21 02:37:00.688 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:00.688 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:00.705 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:37:00.708 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:37:00.709 +04:00 [INF] Watchlist with Id 6 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:00.709 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:37:00.709 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 20.8746ms
2025-06-21 02:37:00.709 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:00.709 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=6 - 200 null application/json; charset=utf-8 21.2775ms
2025-06-21 02:37:00.715 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:37:00.716 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:00.716 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:00.723 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:37:00.725 +04:00 [INF] Retrieved 28 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:00.725 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:37:00.726 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 9.87ms
2025-06-21 02:37:00.726 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:00.726 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 10.3915ms
2025-06-21 02:37:05.031 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=6 - null null
2025-06-21 02:37:05.031 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:05.032 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:05.047 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:37:05.047 +04:00 [WRN] Watchlist not found with Id: 6 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:05.047 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 15.6244ms
2025-06-21 02:37:05.047 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:05.047 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 6 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:05.048 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 6 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:05.049 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=6 - 404 null application/json; charset=utf-8 17.6438ms
2025-06-21 02:37:05.054 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:37:05.054 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:05.054 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:05.060 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:37:05.061 +04:00 [INF] Retrieved 28 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:05.061 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:37:05.062 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 7.7028ms
2025-06-21 02:37:05.062 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:05.062 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 8.0309ms
2025-06-21 02:37:07.956 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=6 - null null
2025-06-21 02:37:07.956 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:07.956 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:07.958 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:37:07.958 +04:00 [WRN] Watchlist not found with Id: 6 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:07.958 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 1.5858ms
2025-06-21 02:37:07.958 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:07.958 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 6 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:07.959 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 6 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:07.959 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=6 - 404 null application/json; charset=utf-8 3.0288ms
2025-06-21 02:37:07.964 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:37:07.964 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:07.964 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:07.965 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:37:07.966 +04:00 [INF] Retrieved 28 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:07.966 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:37:07.966 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.0817ms
2025-06-21 02:37:07.966 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:07.966 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.3564ms
2025-06-21 02:37:10.114 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - null null
2025-06-21 02:37:10.115 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:10.115 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:10.116 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:37:10.116 +04:00 [WRN] Watchlist not found with Id: 3 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:10.116 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 1.367ms
2025-06-21 02:37:10.116 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:10.116 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:10.117 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:10.117 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - 404 null application/json; charset=utf-8 2.8589ms
2025-06-21 02:37:10.123 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:37:10.123 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:10.123 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:10.124 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:37:10.125 +04:00 [INF] Retrieved 28 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:10.125 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:37:10.125 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.2805ms
2025-06-21 02:37:10.125 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:10.125 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.5829ms
2025-06-21 02:37:13.087 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=15 - null null
2025-06-21 02:37:13.087 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:13.087 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:13.089 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:37:13.091 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:37:13.091 +04:00 [INF] Watchlist with Id 15 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:13.091 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:37:13.091 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.8677ms
2025-06-21 02:37:13.091 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:13.091 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=15 - 200 null application/json; charset=utf-8 4.2553ms
2025-06-21 02:37:13.096 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:37:13.097 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:13.097 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:13.098 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:37:13.099 +04:00 [INF] Retrieved 27 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:13.099 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:37:13.099 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.1817ms
2025-06-21 02:37:13.099 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:13.099 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.5437ms
2025-06-21 02:37:16.629 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=15 - null null
2025-06-21 02:37:16.629 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:16.629 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:16.631 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:37:16.631 +04:00 [WRN] Watchlist not found with Id: 15 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:16.632 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.4587ms
2025-06-21 02:37:16.632 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:16.632 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 15 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:16.633 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 15 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:16.635 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=15 - 404 null application/json; charset=utf-8 5.5434ms
2025-06-21 02:37:16.640 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:37:16.640 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:16.640 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:16.641 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:37:16.641 +04:00 [INF] Retrieved 27 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:16.641 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:37:16.641 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.7204ms
2025-06-21 02:37:16.642 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:16.642 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.1322ms
2025-06-21 02:37:20.886 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=1 - null null
2025-06-21 02:37:20.886 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:20.886 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:20.888 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:37:20.888 +04:00 [WRN] Watchlist not found with Id: 1 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:20.888 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 1.6124ms
2025-06-21 02:37:20.888 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:20.888 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 1 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:20.889 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 1 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:20.890 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=1 - 404 null application/json; charset=utf-8 3.749ms
2025-06-21 02:37:20.894 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:37:20.894 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:20.894 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:20.895 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:37:20.896 +04:00 [INF] Retrieved 27 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:20.896 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:37:20.896 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.0119ms
2025-06-21 02:37:20.896 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:20.896 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.4906ms
2025-06-21 02:37:24.302 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:37:24.302 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:24.302 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:24.303 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:37:24.304 +04:00 [INF] Retrieved 27 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:24.304 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:37:24.304 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.1417ms
2025-06-21 02:37:24.304 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:24.304 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.4429ms
2025-06-21 02:37:31.070 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=1 - null null
2025-06-21 02:37:31.070 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:31.070 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:31.071 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:37:31.071 +04:00 [WRN] Watchlist not found with Id: 1 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:31.071 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 1.431ms
2025-06-21 02:37:31.072 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:31.072 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 1 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:31.073 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 1 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:31.073 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=1 - 404 null application/json; charset=utf-8 3.3992ms
2025-06-21 02:37:31.078 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:37:31.078 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:31.078 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:31.079 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:37:31.080 +04:00 [INF] Retrieved 27 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:31.081 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:37:31.081 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.1653ms
2025-06-21 02:37:31.081 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:31.081 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.4632ms
2025-06-21 02:37:35.753 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - null null
2025-06-21 02:37:35.753 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:35.753 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:35.755 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:37:35.755 +04:00 [WRN] Watchlist not found with Id: 3 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:35.755 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 1.4624ms
2025-06-21 02:37:35.755 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:35.755 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:35.756 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:35.756 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - 404 null application/json; charset=utf-8 3.3212ms
2025-06-21 02:37:35.761 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:37:35.761 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:35.761 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:35.762 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:37:35.763 +04:00 [INF] Retrieved 27 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:35.763 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:37:35.763 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.9949ms
2025-06-21 02:37:35.763 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:35.763 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.3016ms
2025-06-21 02:37:47.171 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - null null
2025-06-21 02:37:47.171 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:47.171 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:47.173 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:37:47.173 +04:00 [WRN] Watchlist not found with Id: 3 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:47.173 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 1.6034ms
2025-06-21 02:37:47.173 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:37:47.173 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:47.174 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:37:47.174 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - 404 null application/json; charset=utf-8 3.218ms
2025-06-21 02:37:47.181 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:37:47.181 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:47.181 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:37:47.182 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:37:47.183 +04:00 [INF] Retrieved 27 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:37:47.183 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:37:47.183 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.2008ms
2025-06-21 02:37:47.183 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:37:47.183 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.604ms
2025-06-21 02:38:33.312 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 02:38:33.490 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 02:38:33.491 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 02:38:33.566 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 02:38:33.566 +04:00 [INF] Hosting environment: Development
2025-06-21 02:38:33.566 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 02:38:33.784 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 02:38:33.835 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:38:33.888 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:38:33.908 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:38:33.946 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 165.5259ms
2025-06-21 02:38:33.957 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 02:38:33.968 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 11.9448ms
2025-06-21 02:38:34.136 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 02:38:34.176 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 39.8106ms
2025-06-21 02:38:34.481 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 02:38:34.526 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 44.6363ms
2025-06-21 02:38:35.287 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 02:38:35.682 +04:00 [INF] Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:38:35.925 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:38:35.947 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2036.2957ms
2025-06-21 02:38:35.947 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:38:35.952 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 2118.5277ms
2025-06-21 02:38:35.967 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:38:36.015 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 47.1273ms
2025-06-21 02:38:36.015 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:38:44.652 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:38:44.656 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:38:44.659 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:38:44.761 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:38:44.785 +04:00 [INF] Retrieved 27 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:38:44.789 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:38:44.795 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 135.098ms
2025-06-21 02:38:44.795 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:38:44.795 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 142.9311ms
2025-06-21 02:39:24.627 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - null null
2025-06-21 02:39:24.628 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:39:24.635 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:39:24.691 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:39:24.692 +04:00 [WRN] Watchlist not found with Id: 3 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:39:24.759 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 124.0967ms
2025-06-21 02:39:24.760 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:39:24.761 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:39:24.781 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 3 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:39:24.787 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=3 - 404 null application/json; charset=utf-8 160.1135ms
2025-06-21 02:40:55.301 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 02:40:55.453 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 02:40:55.453 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 02:40:55.527 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 02:40:55.527 +04:00 [INF] Hosting environment: Development
2025-06-21 02:40:55.527 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 02:40:56.127 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 02:40:56.240 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:40:56.265 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:40:56.276 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 150.2261ms
2025-06-21 02:40:56.283 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:40:56.360 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 02:40:56.365 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.8518ms
2025-06-21 02:40:56.552 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 02:40:56.575 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 23.0447ms
2025-06-21 02:40:56.877 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 02:40:56.932 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 55.2168ms
2025-06-21 02:40:57.448 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 02:40:57.682 +04:00 [INF] Executed DbCommand (53ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:40:57.911 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:40:57.925 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1639.4077ms
2025-06-21 02:40:57.925 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:40:57.930 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1690.3324ms
2025-06-21 02:40:57.935 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:40:57.962 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 27.048ms
2025-06-21 02:40:57.962 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:41:00.827 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:00.831 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:00.834 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:00.919 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:00.943 +04:00 [INF] Retrieved 27 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:00.949 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:00.954 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 118.9993ms
2025-06-21 02:41:00.954 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:00.954 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 126.7817ms
2025-06-21 02:41:06.870 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=32 - null null
2025-06-21 02:41:06.871 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:06.878 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:06.913 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:41:06.996 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:41:07.004 +04:00 [INF] Watchlist with Id 32 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:07.004 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:07.008 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 129.5366ms
2025-06-21 02:41:07.008 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:07.008 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=32 - 200 null application/json; charset=utf-8 138.4992ms
2025-06-21 02:41:07.015 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:07.016 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:07.016 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:07.022 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:07.025 +04:00 [INF] Retrieved 26 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:07.026 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:07.026 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 9.8282ms
2025-06-21 02:41:07.026 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:07.026 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 10.6588ms
2025-06-21 02:41:10.862 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=31 - null null
2025-06-21 02:41:10.863 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:10.863 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:10.865 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:41:10.867 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:41:10.868 +04:00 [INF] Watchlist with Id 31 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:10.868 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:10.868 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 5.3219ms
2025-06-21 02:41:10.868 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:10.868 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=31 - 200 null application/json; charset=utf-8 6.0292ms
2025-06-21 02:41:10.873 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:10.874 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:10.874 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:10.875 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:10.876 +04:00 [INF] Retrieved 25 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:10.876 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:10.876 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.4874ms
2025-06-21 02:41:10.876 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:10.876 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.1456ms
2025-06-21 02:41:15.648 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=2 - null null
2025-06-21 02:41:15.648 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:15.648 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:15.650 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:41:15.651 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:41:15.652 +04:00 [INF] Watchlist with Id 2 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:15.652 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:15.652 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.5809ms
2025-06-21 02:41:15.652 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:15.652 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=2 - 200 null application/json; charset=utf-8 4.3579ms
2025-06-21 02:41:15.657 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:15.657 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:15.657 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:15.659 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:15.659 +04:00 [INF] Retrieved 24 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:15.659 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:15.660 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.5739ms
2025-06-21 02:41:15.660 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:15.660 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.1411ms
2025-06-21 02:41:17.626 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=4 - null null
2025-06-21 02:41:17.626 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:17.626 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:17.628 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:41:17.629 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:41:17.630 +04:00 [INF] Watchlist with Id 4 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:17.630 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:17.630 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.7265ms
2025-06-21 02:41:17.630 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:17.630 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=4 - 200 null application/json; charset=utf-8 4.5636ms
2025-06-21 02:41:17.635 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:17.635 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:17.635 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:17.637 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:17.638 +04:00 [INF] Retrieved 23 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:17.638 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:17.638 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.8363ms
2025-06-21 02:41:17.638 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:17.639 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.3873ms
2025-06-21 02:41:19.450 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=5 - null null
2025-06-21 02:41:19.450 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:19.450 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:19.452 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:41:19.453 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:41:19.454 +04:00 [INF] Watchlist with Id 5 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:19.454 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:19.454 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.8039ms
2025-06-21 02:41:19.454 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:19.454 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=5 - 200 null application/json; charset=utf-8 4.5952ms
2025-06-21 02:41:19.459 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:19.459 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:19.459 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:19.460 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:19.461 +04:00 [INF] Retrieved 22 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:19.461 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:19.462 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.2522ms
2025-06-21 02:41:19.462 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:19.462 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.7456ms
2025-06-21 02:41:21.454 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=7 - null null
2025-06-21 02:41:21.455 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:21.455 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:21.457 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:41:21.458 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:41:21.458 +04:00 [INF] Watchlist with Id 7 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:21.459 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:21.459 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.9648ms
2025-06-21 02:41:21.459 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:21.459 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=7 - 200 null application/json; charset=utf-8 4.6352ms
2025-06-21 02:41:21.463 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:21.463 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:21.463 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:21.466 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:21.467 +04:00 [INF] Retrieved 21 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:21.467 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:21.467 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 3.4769ms
2025-06-21 02:41:21.467 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:21.467 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 4.3264ms
2025-06-21 02:41:24.834 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=30 - null null
2025-06-21 02:41:24.834 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:24.834 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:24.851 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:41:24.854 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:41:24.854 +04:00 [INF] Watchlist with Id 30 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:24.854 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:24.855 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 20.2532ms
2025-06-21 02:41:24.855 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:24.855 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=30 - 200 null application/json; charset=utf-8 20.8583ms
2025-06-21 02:41:24.860 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:24.860 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:24.860 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:24.864 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:24.865 +04:00 [INF] Retrieved 20 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:24.866 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:24.866 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 5.6388ms
2025-06-21 02:41:24.866 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:24.866 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 6.243ms
2025-06-21 02:41:26.690 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=9 - null null
2025-06-21 02:41:26.690 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:26.690 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:26.703 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:41:26.707 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:41:26.708 +04:00 [INF] Watchlist with Id 9 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:26.708 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:26.708 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 17.5894ms
2025-06-21 02:41:26.708 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:26.708 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=9 - 200 null application/json; charset=utf-8 18.1229ms
2025-06-21 02:41:26.712 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:26.712 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:26.712 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:26.717 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:26.718 +04:00 [INF] Retrieved 19 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:26.718 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:26.719 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 6.1042ms
2025-06-21 02:41:26.719 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:26.719 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 6.8436ms
2025-06-21 02:41:28.774 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=10 - null null
2025-06-21 02:41:28.774 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:28.774 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:28.776 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:41:28.777 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:41:28.777 +04:00 [INF] Watchlist with Id 10 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:28.777 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:28.777 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.3829ms
2025-06-21 02:41:28.777 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:28.777 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=10 - 200 null application/json; charset=utf-8 3.8836ms
2025-06-21 02:41:28.782 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:28.782 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:28.782 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:28.784 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:28.784 +04:00 [INF] Retrieved 18 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:28.784 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:28.784 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.8512ms
2025-06-21 02:41:28.784 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:28.784 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.3197ms
2025-06-21 02:41:31.674 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=11 - null null
2025-06-21 02:41:31.674 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:31.674 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:31.676 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:41:31.677 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:41:31.677 +04:00 [INF] Watchlist with Id 11 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:31.677 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:31.677 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.1944ms
2025-06-21 02:41:31.678 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:31.678 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=11 - 200 null application/json; charset=utf-8 3.6711ms
2025-06-21 02:41:31.683 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:31.684 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:31.684 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:31.685 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:31.686 +04:00 [INF] Retrieved 17 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:31.686 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:31.686 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.2494ms
2025-06-21 02:41:31.686 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:31.686 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.7365ms
2025-06-21 02:41:33.407 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=12 - null null
2025-06-21 02:41:33.408 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:33.408 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:33.410 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:41:33.412 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:41:33.412 +04:00 [INF] Watchlist with Id 12 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:33.412 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:33.413 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 4.8296ms
2025-06-21 02:41:33.413 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:33.413 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=12 - 200 null application/json; charset=utf-8 5.5408ms
2025-06-21 02:41:33.418 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:33.419 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:33.419 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:33.420 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:33.420 +04:00 [INF] Retrieved 16 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:33.421 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:33.421 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.145ms
2025-06-21 02:41:33.421 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:33.421 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.5957ms
2025-06-21 02:41:35.473 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=13 - null null
2025-06-21 02:41:35.474 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:35.474 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:35.475 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:41:35.477 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:41:35.477 +04:00 [INF] Watchlist with Id 13 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:35.477 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:35.477 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.3226ms
2025-06-21 02:41:35.477 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:41:35.477 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=13 - 200 null application/json; charset=utf-8 3.7692ms
2025-06-21 02:41:35.482 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:35.483 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:35.483 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:35.484 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:35.484 +04:00 [INF] Retrieved 15 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:35.484 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:35.484 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.687ms
2025-06-21 02:41:35.484 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:35.484 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.163ms
2025-06-21 02:41:43.463 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:41:43.464 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:43.464 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:43.465 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:41:43.466 +04:00 [INF] Retrieved 15 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:41:43.466 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:43.466 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.2972ms
2025-06-21 02:41:43.466 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:41:43.466 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.9014ms
2025-06-21 02:41:49.319 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:41:49.320 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:41:49.321 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:41:49.350 +04:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:41:49.352 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:49.353 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 31.9686ms
2025-06-21 02:41:49.353 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:41:49.353 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 33.8251ms
2025-06-21 02:41:49.353 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:41:49.354 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.4641ms
2025-06-21 02:41:49.354 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:41:52.098 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:41:52.098 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:41:52.101 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:52.139 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:41:52.151 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 1
2025-06-21 02:41:52.152 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:52.152 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 51.3781ms
2025-06-21 02:41:52.152 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:41:52.152 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 54.1383ms
2025-06-21 02:41:52.156 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:41:52.156 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:41:52.156 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:41:52.158 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:41:52.161 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:52.161 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 5.153ms
2025-06-21 02:41:52.161 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:41:52.161 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 5.5218ms
2025-06-21 02:41:52.162 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:41:52.162 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.4225ms
2025-06-21 02:41:52.163 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:41:53.748 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:41:53.749 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:41:53.749 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:53.751 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:41:53.752 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-21 02:41:53.752 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:53.752 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 3.102ms
2025-06-21 02:41:53.752 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:41:53.752 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 3.749ms
2025-06-21 02:41:53.755 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:41:53.756 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:41:53.756 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:41:53.757 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:41:53.759 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:53.759 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.6629ms
2025-06-21 02:41:53.759 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:41:53.759 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.9748ms
2025-06-21 02:41:53.760 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:41:53.760 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2248ms
2025-06-21 02:41:53.760 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:41:54.739 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:41:54.739 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:41:54.739 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:54.741 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:41:54.741 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 6
2025-06-21 02:41:54.741 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:54.741 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.3624ms
2025-06-21 02:41:54.741 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:41:54.741 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 2.8387ms
2025-06-21 02:41:54.744 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:41:54.744 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:41:54.745 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:41:54.746 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:41:54.748 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:54.748 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.2802ms
2025-06-21 02:41:54.748 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:41:54.748 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.516ms
2025-06-21 02:41:54.748 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:41:54.749 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.24ms
2025-06-21 02:41:54.749 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:41:56.963 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:41:56.963 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:41:56.963 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:56.965 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:41:56.966 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 7
2025-06-21 02:41:56.966 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:56.966 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.5107ms
2025-06-21 02:41:56.966 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:41:56.966 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 3.0043ms
2025-06-21 02:41:56.968 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:41:56.969 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:41:56.969 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:41:56.970 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:41:56.973 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:56.973 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.214ms
2025-06-21 02:41:56.973 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:41:56.973 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.4662ms
2025-06-21 02:41:56.973 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:41:56.974 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2316ms
2025-06-21 02:41:56.974 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:41:57.739 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:41:57.739 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:41:57.739 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:41:57.744 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:41:57.745 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 8
2025-06-21 02:41:57.745 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:41:57.745 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 5.7697ms
2025-06-21 02:41:57.745 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:41:57.745 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.1247ms
2025-06-21 02:41:57.748 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:41:57.748 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:41:57.748 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:41:57.749 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:41:57.751 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:41:57.751 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.2421ms
2025-06-21 02:41:57.751 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:41:57.751 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.4905ms
2025-06-21 02:41:57.752 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:41:57.752 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.1895ms
2025-06-21 02:41:57.752 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:42:01.442 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:42:01.442 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:01.442 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:01.444 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:42:01.445 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 9
2025-06-21 02:42:01.445 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:01.445 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.291ms
2025-06-21 02:42:01.445 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:01.445 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 2.7359ms
2025-06-21 02:42:01.449 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:42:01.449 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:01.449 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:42:01.450 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:42:01.452 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:01.452 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.0235ms
2025-06-21 02:42:01.452 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:01.452 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.2805ms
2025-06-21 02:42:01.452 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:42:01.453 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2001ms
2025-06-21 02:42:01.453 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:42:03.195 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 02:42:03.195 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:03.195 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:03.201 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:42:03.202 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 10
2025-06-21 02:42:03.202 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:03.202 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 6.4654ms
2025-06-21 02:42:03.202 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:03.202 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 7.0069ms
2025-06-21 02:42:03.205 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:42:03.205 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:03.205 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:42:03.206 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:42:03.208 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:03.208 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.1734ms
2025-06-21 02:42:03.208 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:03.208 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.4804ms
2025-06-21 02:42:03.209 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:42:03.209 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2279ms
2025-06-21 02:42:03.209 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:42:04.738 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 02:42:04.739 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:04.739 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:04.744 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:42:04.744 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 11
2025-06-21 02:42:04.745 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:04.745 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 5.8986ms
2025-06-21 02:42:04.745 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:04.745 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.2659ms
2025-06-21 02:42:04.748 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:42:04.748 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:04.748 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:42:04.749 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:42:04.752 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:04.752 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.073ms
2025-06-21 02:42:04.752 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:04.752 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.396ms
2025-06-21 02:42:04.753 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:42:04.753 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2205ms
2025-06-21 02:42:04.753 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:42:06.642 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 02:42:06.642 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:06.642 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:06.654 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:42:06.654 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 12
2025-06-21 02:42:06.655 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:06.655 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 12.162ms
2025-06-21 02:42:06.655 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:06.655 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 12.5318ms
2025-06-21 02:42:06.657 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:42:06.658 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:06.658 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:42:06.659 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:42:06.660 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:06.660 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2.8308ms
2025-06-21 02:42:06.661 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:06.661 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.203ms
2025-06-21 02:42:06.661 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:42:06.662 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.326ms
2025-06-21 02:42:06.662 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:42:08.387 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 02:42:08.387 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:08.387 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:08.389 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:42:08.389 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 13
2025-06-21 02:42:08.389 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:08.389 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 1.9729ms
2025-06-21 02:42:08.389 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:08.389 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 2.3013ms
2025-06-21 02:42:08.393 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:42:08.393 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:08.393 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:42:08.394 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:42:08.396 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:08.397 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.7423ms
2025-06-21 02:42:08.397 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:08.397 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.0335ms
2025-06-21 02:42:08.397 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:42:08.398 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.261ms
2025-06-21 02:42:08.398 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:42:10.051 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 02:42:10.051 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:10.051 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:10.062 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:42:10.062 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 14
2025-06-21 02:42:10.062 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:10.063 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 11.725ms
2025-06-21 02:42:10.063 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:10.063 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 12.1081ms
2025-06-21 02:42:10.066 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:42:10.066 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:10.066 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:42:10.067 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:42:10.069 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:10.069 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.4141ms
2025-06-21 02:42:10.069 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:10.069 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.6802ms
2025-06-21 02:42:10.070 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:42:10.071 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3649ms
2025-06-21 02:42:10.071 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:42:12.139 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 02:42:12.139 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:12.139 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:12.141 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:42:12.141 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 15
2025-06-21 02:42:12.141 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:12.142 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.5162ms
2025-06-21 02:42:12.142 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:42:12.142 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 2.8334ms
2025-06-21 02:42:12.144 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:42:12.144 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:12.145 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:42:12.146 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:42:12.147 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:12.148 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.0586ms
2025-06-21 02:42:12.148 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:42:12.148 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.5428ms
2025-06-21 02:42:12.148 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:42:12.149 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.212ms
2025-06-21 02:42:12.149 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:42:13.558 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:13.558 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:13.558 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:13.559 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:13.560 +04:00 [INF] Retrieved 27 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:13.560 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:13.560 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.0417ms
2025-06-21 02:42:13.560 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:13.560 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.3802ms
2025-06-21 02:42:18.266 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=14 - null null
2025-06-21 02:42:18.266 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:18.266 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:18.268 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:18.270 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:18.270 +04:00 [INF] Watchlist with Id 14 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:18.271 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:18.271 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 4.2571ms
2025-06-21 02:42:18.271 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:18.271 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=14 - 200 null application/json; charset=utf-8 4.5917ms
2025-06-21 02:42:18.276 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:18.276 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:18.276 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:18.277 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:18.278 +04:00 [INF] Retrieved 26 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:18.278 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:18.279 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.595ms
2025-06-21 02:42:18.279 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:18.279 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.123ms
2025-06-21 02:42:19.725 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=16 - null null
2025-06-21 02:42:19.725 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:19.725 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:19.727 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:19.728 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:19.729 +04:00 [INF] Watchlist with Id 16 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:19.729 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:19.729 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.4419ms
2025-06-21 02:42:19.729 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:19.729 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=16 - 200 null application/json; charset=utf-8 3.8022ms
2025-06-21 02:42:19.734 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:19.734 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:19.734 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:19.735 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:19.736 +04:00 [INF] Retrieved 25 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:19.736 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:19.736 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.0773ms
2025-06-21 02:42:19.736 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:19.736 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.4295ms
2025-06-21 02:42:22.237 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=17 - null null
2025-06-21 02:42:22.237 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:22.237 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:22.239 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:22.240 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:22.241 +04:00 [INF] Watchlist with Id 17 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:22.241 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:22.243 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 5.7932ms
2025-06-21 02:42:22.244 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:22.245 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=17 - 200 null application/json; charset=utf-8 7.868ms
2025-06-21 02:42:22.252 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:22.252 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:22.252 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:22.254 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:22.254 +04:00 [INF] Retrieved 24 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:22.254 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:22.255 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.1354ms
2025-06-21 02:42:22.255 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:22.255 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.4606ms
2025-06-21 02:42:24.614 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=18 - null null
2025-06-21 02:42:24.614 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:24.614 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:24.616 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:24.617 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:24.617 +04:00 [INF] Watchlist with Id 18 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:24.617 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:24.617 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.2316ms
2025-06-21 02:42:24.617 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:24.617 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=18 - 200 null application/json; charset=utf-8 3.6709ms
2025-06-21 02:42:24.622 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:24.623 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:24.623 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:24.624 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:24.625 +04:00 [INF] Retrieved 23 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:24.625 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:24.625 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.0827ms
2025-06-21 02:42:24.625 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:24.625 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.4326ms
2025-06-21 02:42:25.886 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=19 - null null
2025-06-21 02:42:25.886 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:25.887 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:25.889 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:25.890 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:25.890 +04:00 [INF] Watchlist with Id 19 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:25.891 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:25.891 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.9937ms
2025-06-21 02:42:25.891 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:25.891 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=19 - 200 null application/json; charset=utf-8 4.6254ms
2025-06-21 02:42:25.895 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:25.895 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:25.895 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:25.897 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:25.898 +04:00 [INF] Retrieved 22 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:25.898 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:25.898 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.7504ms
2025-06-21 02:42:25.898 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:25.898 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.4586ms
2025-06-21 02:42:28.014 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=20 - null null
2025-06-21 02:42:28.014 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:28.014 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:28.026 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:28.028 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:28.028 +04:00 [INF] Watchlist with Id 20 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:28.029 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:28.029 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 14.948ms
2025-06-21 02:42:28.029 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:28.029 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=20 - 200 null application/json; charset=utf-8 15.27ms
2025-06-21 02:42:28.034 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:28.034 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:28.034 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:28.039 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:28.040 +04:00 [INF] Retrieved 21 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:28.040 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:28.040 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 5.809ms
2025-06-21 02:42:28.040 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:28.040 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 6.1234ms
2025-06-21 02:42:29.530 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=21 - null null
2025-06-21 02:42:29.530 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:29.530 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:29.543 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:29.547 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:29.547 +04:00 [INF] Watchlist with Id 21 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:29.547 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:29.547 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 16.678ms
2025-06-21 02:42:29.547 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:29.547 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=21 - 200 null application/json; charset=utf-8 16.9503ms
2025-06-21 02:42:29.551 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:29.552 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:29.552 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:29.556 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:29.557 +04:00 [INF] Retrieved 20 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:29.557 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:29.557 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 5.5767ms
2025-06-21 02:42:29.557 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:29.557 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 5.9497ms
2025-06-21 02:42:31.322 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=22 - null null
2025-06-21 02:42:31.322 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:31.322 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:31.344 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:31.348 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:31.348 +04:00 [INF] Watchlist with Id 22 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:31.348 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:31.348 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 25.9643ms
2025-06-21 02:42:31.348 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:31.348 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=22 - 200 null application/json; charset=utf-8 26.2337ms
2025-06-21 02:42:31.352 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:31.353 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:31.353 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:31.361 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:31.362 +04:00 [INF] Retrieved 19 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:31.363 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:31.363 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 10.0349ms
2025-06-21 02:42:31.363 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:31.363 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 10.349ms
2025-06-21 02:42:32.854 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=23 - null null
2025-06-21 02:42:32.854 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:32.854 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:32.866 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:32.869 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:32.869 +04:00 [INF] Watchlist with Id 23 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:32.869 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:32.869 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 14.7694ms
2025-06-21 02:42:32.869 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:32.869 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=23 - 200 null application/json; charset=utf-8 15.0569ms
2025-06-21 02:42:32.874 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:32.874 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:32.874 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:32.879 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:32.880 +04:00 [INF] Retrieved 18 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:32.880 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:32.880 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 5.6156ms
2025-06-21 02:42:32.880 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:32.880 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 5.8932ms
2025-06-21 02:42:35.437 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=24 - null null
2025-06-21 02:42:35.437 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:35.437 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:35.439 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:35.440 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:35.440 +04:00 [INF] Watchlist with Id 24 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:35.440 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:35.440 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.7461ms
2025-06-21 02:42:35.440 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:35.440 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=24 - 200 null application/json; charset=utf-8 3.145ms
2025-06-21 02:42:35.446 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:35.446 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:35.446 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:35.447 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:35.448 +04:00 [INF] Retrieved 17 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:35.448 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:35.448 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.0039ms
2025-06-21 02:42:35.448 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:35.448 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.337ms
2025-06-21 02:42:37.039 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=25 - null null
2025-06-21 02:42:37.039 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:37.039 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:37.040 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:37.041 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:37.042 +04:00 [INF] Watchlist with Id 25 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:37.042 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:37.042 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.5448ms
2025-06-21 02:42:37.042 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:37.042 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=25 - 200 null application/json; charset=utf-8 2.9064ms
2025-06-21 02:42:37.047 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:37.047 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:37.047 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:37.048 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:37.049 +04:00 [INF] Retrieved 16 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:37.049 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:37.049 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.7744ms
2025-06-21 02:42:37.049 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:37.049 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.0414ms
2025-06-21 02:42:39.069 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=26 - null null
2025-06-21 02:42:39.070 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:39.070 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:39.071 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:39.073 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:39.073 +04:00 [INF] Watchlist with Id 26 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:39.073 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:39.073 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.1909ms
2025-06-21 02:42:39.073 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:39.073 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=26 - 200 null application/json; charset=utf-8 3.6644ms
2025-06-21 02:42:39.077 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:39.077 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:39.077 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:39.079 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:39.079 +04:00 [INF] Retrieved 15 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:39.079 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:39.079 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.022ms
2025-06-21 02:42:39.079 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:39.079 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.3932ms
2025-06-21 02:42:42.464 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=27 - null null
2025-06-21 02:42:42.464 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:42.465 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:42.466 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:42.467 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:42.467 +04:00 [INF] Watchlist with Id 27 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:42.467 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:42.467 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.2299ms
2025-06-21 02:42:42.467 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:42.467 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=27 - 200 null application/json; charset=utf-8 2.5121ms
2025-06-21 02:42:42.471 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:42.471 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:42.471 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:42.472 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:42.473 +04:00 [INF] Retrieved 14 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:42.473 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:42.473 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.8303ms
2025-06-21 02:42:42.473 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:42.473 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.1655ms
2025-06-21 02:42:44.316 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=28 - null null
2025-06-21 02:42:44.316 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:44.316 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:44.317 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:44.318 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:44.318 +04:00 [INF] Watchlist with Id 28 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:44.318 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:44.318 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.4463ms
2025-06-21 02:42:44.318 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:44.318 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=28 - 200 null application/json; charset=utf-8 2.7293ms
2025-06-21 02:42:44.323 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:44.323 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:44.323 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:44.324 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:44.326 +04:00 [INF] Retrieved 13 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:44.326 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:44.327 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 3.0816ms
2025-06-21 02:42:44.327 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:44.327 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.377ms
2025-06-21 02:42:45.988 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=29 - null null
2025-06-21 02:42:45.988 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:45.988 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:45.990 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:45.990 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:45.991 +04:00 [INF] Watchlist with Id 29 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:45.991 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:45.991 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.2689ms
2025-06-21 02:42:45.991 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:45.991 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=29 - 200 null application/json; charset=utf-8 2.6932ms
2025-06-21 02:42:45.997 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:45.997 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:45.997 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:45.998 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:46.003 +04:00 [INF] Retrieved 12 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:46.003 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:46.003 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 6.3978ms
2025-06-21 02:42:46.003 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:46.003 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 6.7463ms
2025-06-21 02:42:47.780 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=40 - null null
2025-06-21 02:42:47.780 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:47.780 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:47.781 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:47.782 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:47.782 +04:00 [INF] Watchlist with Id 40 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:47.783 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:47.783 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.1426ms
2025-06-21 02:42:47.783 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:47.783 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=40 - 200 null application/json; charset=utf-8 2.4233ms
2025-06-21 02:42:47.788 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:47.788 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:47.788 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:47.789 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:47.789 +04:00 [INF] Retrieved 11 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:47.790 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:47.790 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.8658ms
2025-06-21 02:42:47.790 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:47.790 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.1584ms
2025-06-21 02:42:50.423 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=41 - null null
2025-06-21 02:42:50.423 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:50.424 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:50.425 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:50.426 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:50.426 +04:00 [INF] Watchlist with Id 41 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:50.426 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:50.426 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.3624ms
2025-06-21 02:42:50.426 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:50.426 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=41 - 200 null application/json; charset=utf-8 2.6491ms
2025-06-21 02:42:50.430 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:50.431 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:50.431 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:50.432 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:50.432 +04:00 [INF] Retrieved 10 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:50.432 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:50.432 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.7951ms
2025-06-21 02:42:50.432 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:50.432 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.0765ms
2025-06-21 02:42:51.966 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=42 - null null
2025-06-21 02:42:51.966 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:51.966 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:51.969 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:51.971 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:51.971 +04:00 [INF] Watchlist with Id 42 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:51.971 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:51.971 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 4.8383ms
2025-06-21 02:42:51.971 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:51.971 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=42 - 200 null application/json; charset=utf-8 5.1662ms
2025-06-21 02:42:51.975 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:51.975 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:51.975 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:51.976 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:51.977 +04:00 [INF] Retrieved 9 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:51.977 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:51.977 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.5503ms
2025-06-21 02:42:51.977 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:51.977 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.0764ms
2025-06-21 02:42:54.394 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=43 - null null
2025-06-21 02:42:54.394 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:54.394 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:54.395 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:54.397 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:54.397 +04:00 [INF] Watchlist with Id 43 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:54.397 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:54.397 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.8521ms
2025-06-21 02:42:54.397 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:54.397 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=43 - 200 null application/json; charset=utf-8 3.1761ms
2025-06-21 02:42:54.402 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:54.402 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:54.402 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:54.404 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:54.404 +04:00 [INF] Retrieved 8 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:54.404 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:54.404 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.1961ms
2025-06-21 02:42:54.404 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:54.404 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.6028ms
2025-06-21 02:42:56.380 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=44 - null null
2025-06-21 02:42:56.380 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:56.380 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:56.381 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:56.382 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:56.382 +04:00 [INF] Watchlist with Id 44 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:56.382 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:56.382 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 1.8568ms
2025-06-21 02:42:56.382 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:56.382 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=44 - 200 null application/json; charset=utf-8 2.1666ms
2025-06-21 02:42:56.387 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:56.387 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:56.388 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:56.388 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:56.389 +04:00 [INF] Retrieved 7 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:56.389 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:56.389 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.4964ms
2025-06-21 02:42:56.389 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:56.389 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 1.7946ms
2025-06-21 02:42:58.004 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=45 - null null
2025-06-21 02:42:58.004 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:58.004 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:58.006 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:58.007 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:58.007 +04:00 [INF] Watchlist with Id 45 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:58.007 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:58.007 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.8322ms
2025-06-21 02:42:58.007 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:58.007 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=45 - 200 null application/json; charset=utf-8 3.101ms
2025-06-21 02:42:58.011 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:58.011 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:58.011 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:58.012 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:58.012 +04:00 [INF] Retrieved 6 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:58.012 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:58.012 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.5066ms
2025-06-21 02:42:58.012 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:58.013 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 1.837ms
2025-06-21 02:42:59.615 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=46 - null null
2025-06-21 02:42:59.616 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:59.616 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:59.617 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:42:59.618 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:42:59.618 +04:00 [INF] Watchlist with Id 46 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:59.618 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:42:59.618 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.1804ms
2025-06-21 02:42:59.618 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:42:59.618 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=46 - 200 null application/json; charset=utf-8 2.5325ms
2025-06-21 02:42:59.622 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:42:59.622 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:59.622 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:42:59.623 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:42:59.624 +04:00 [INF] Retrieved 5 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:42:59.624 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:42:59.624 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.2202ms
2025-06-21 02:42:59.624 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:42:59.624 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 1.4589ms
2025-06-21 02:43:01.228 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=47 - null null
2025-06-21 02:43:01.228 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:43:01.228 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:01.229 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:43:01.230 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:43:01.231 +04:00 [INF] Watchlist with Id 47 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:01.231 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:43:01.231 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.326ms
2025-06-21 02:43:01.231 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:43:01.231 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=47 - 200 null application/json; charset=utf-8 2.7083ms
2025-06-21 02:43:01.234 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:43:01.235 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:01.235 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:01.236 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:43:01.236 +04:00 [INF] Retrieved 4 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:01.236 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:43:01.236 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.6613ms
2025-06-21 02:43:01.236 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:01.236 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 1.9382ms
2025-06-21 02:43:03.146 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=48 - null null
2025-06-21 02:43:03.146 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:43:03.146 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:03.147 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:43:03.148 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:43:03.148 +04:00 [INF] Watchlist with Id 48 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:03.148 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:43:03.148 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.2377ms
2025-06-21 02:43:03.148 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:43:03.148 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=48 - 200 null application/json; charset=utf-8 2.5224ms
2025-06-21 02:43:03.152 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:43:03.153 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:03.153 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:03.154 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:43:03.154 +04:00 [INF] Retrieved 3 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:03.154 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:43:03.154 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.4769ms
2025-06-21 02:43:03.154 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:03.154 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 1.8131ms
2025-06-21 02:43:05.189 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=49 - null null
2025-06-21 02:43:05.189 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:43:05.189 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:05.190 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:43:05.191 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:43:05.191 +04:00 [INF] Watchlist with Id 49 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:05.191 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:43:05.191 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.1645ms
2025-06-21 02:43:05.191 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:43:05.191 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=49 - 200 null application/json; charset=utf-8 2.4661ms
2025-06-21 02:43:05.195 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:43:05.196 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:05.196 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:05.197 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:43:05.197 +04:00 [INF] Retrieved 2 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:05.197 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:43:05.197 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.3176ms
2025-06-21 02:43:05.197 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:05.197 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 1.6328ms
2025-06-21 02:43:06.805 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=50 - null null
2025-06-21 02:43:06.805 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:43:06.805 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:06.807 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:43:06.808 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:43:06.808 +04:00 [INF] Watchlist with Id 50 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:06.808 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:43:06.808 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.4172ms
2025-06-21 02:43:06.808 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:43:06.808 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=50 - 200 null application/json; charset=utf-8 2.6939ms
2025-06-21 02:43:06.813 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:43:06.813 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:06.813 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:06.814 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:43:06.814 +04:00 [INF] Retrieved 1 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:06.814 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:43:06.814 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.087ms
2025-06-21 02:43:06.814 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:06.814 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 1.3521ms
2025-06-21 02:43:08.780 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=51 - null null
2025-06-21 02:43:08.781 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:43:08.781 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:08.782 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:43:08.783 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:43:08.783 +04:00 [INF] Watchlist with Id 51 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:08.783 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:43:08.784 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.8768ms
2025-06-21 02:43:08.784 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:43:08.784 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=51 - 200 null application/json; charset=utf-8 3.2193ms
2025-06-21 02:43:08.788 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:43:08.788 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:08.788 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:08.789 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:43:08.789 +04:00 [INF] No watchlists found for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:08.789 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.EmptyPartition`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:43:08.790 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.8597ms
2025-06-21 02:43:08.790 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:08.790 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.1681ms
2025-06-21 02:43:11.575 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:43:11.575 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:11.575 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:11.576 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:43:11.576 +04:00 [INF] No watchlists found for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:11.576 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.EmptyPartition`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:43:11.576 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.1227ms
2025-06-21 02:43:11.576 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:11.576 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 1.4526ms
2025-06-21 02:43:12.983 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:43:12.983 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:12.984 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:12.985 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:43:12.985 +04:00 [INF] No watchlists found for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:12.985 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.EmptyPartition`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:43:12.985 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.1504ms
2025-06-21 02:43:12.985 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:12.985 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 1.4319ms
2025-06-21 02:43:22.077 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:43:22.077 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:22.077 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:43:22.078 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:43:22.079 +04:00 [INF] No watchlists found for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:43:22.079 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.EmptyPartition`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:43:22.079 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.3582ms
2025-06-21 02:43:22.079 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:43:22.079 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 1.7446ms
2025-06-21 02:49:19.989 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:49:19.989 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:49:19.989 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:20.043 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:49:20.043 +04:00 [INF] No watchlists found for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:49:20.043 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.EmptyPartition`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:20.043 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 54.225ms
2025-06-21 02:49:20.043 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:49:20.043 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 54.5827ms
2025-06-21 02:49:22.338 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:49:22.339 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:49:22.339 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:22.340 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 02:49:22.340 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:49:22.340 +04:00 [INF] No watchlists found for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:49:22.340 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.EmptyPartition`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:22.340 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.7402ms
2025-06-21 02:49:22.340 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:49:22.340 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.1711ms
2025-06-21 02:49:22.346 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 5.7863ms
2025-06-21 02:49:22.451 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 02:49:22.451 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.3668ms
2025-06-21 02:49:22.454 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 02:49:22.464 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 9.2662ms
2025-06-21 02:49:22.766 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 02:49:22.783 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 16.8021ms
2025-06-21 02:49:36.906 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:36.906 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:36.906 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:36.932 +04:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:36.935 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:36.935 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 28.9291ms
2025-06-21 02:49:36.935 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:36.935 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 29.2047ms
2025-06-21 02:49:36.938 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:36.939 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.1857ms
2025-06-21 02:49:36.939 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:37.003 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-21 02:49:37.003 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-21 02:49:37.004 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-21 02:49:37.004 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-21 02:49:37.009 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-21 02:49:37.009 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-21 02:49:37.009 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-21 02:49:37.009 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-21 02:49:37.009 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 5.7776ms
2025-06-21 02:49:37.009 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 5.7977ms
2025-06-21 02:49:37.009 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 5.7024ms
2025-06-21 02:49:37.009 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 5.3756ms
2025-06-21 02:49:38.849 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:49:38.849 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:38.849 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:38.854 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:49:38.855 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 1
2025-06-21 02:49:38.855 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:49:38.855 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 5.727ms
2025-06-21 02:49:38.855 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:38.855 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.1274ms
2025-06-21 02:49:38.861 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:38.861 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:38.861 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:38.862 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:38.869 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:38.869 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 8.1815ms
2025-06-21 02:49:38.869 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:38.869 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 8.4165ms
2025-06-21 02:49:38.870 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:38.871 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.22ms
2025-06-21 02:49:38.871 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:39.779 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:49:39.780 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:39.780 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:39.784 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:49:39.784 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-21 02:49:39.784 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:49:39.784 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 4.5231ms
2025-06-21 02:49:39.784 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:39.784 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 4.8939ms
2025-06-21 02:49:39.788 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:39.788 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:39.788 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:39.789 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:39.791 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:39.791 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2.9106ms
2025-06-21 02:49:39.791 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:39.791 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.1157ms
2025-06-21 02:49:39.792 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:39.792 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2549ms
2025-06-21 02:49:39.792 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:40.627 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:49:40.627 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:40.627 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:40.632 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:49:40.633 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 6
2025-06-21 02:49:40.633 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:49:40.633 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 6.068ms
2025-06-21 02:49:40.633 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:40.633 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.4888ms
2025-06-21 02:49:40.639 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:40.639 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:40.639 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:40.640 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:40.642 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:40.642 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.0909ms
2025-06-21 02:49:40.642 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:40.642 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.3624ms
2025-06-21 02:49:40.643 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:40.644 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.4448ms
2025-06-21 02:49:40.644 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:41.466 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:49:41.466 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:41.466 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:41.468 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:49:41.468 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 7
2025-06-21 02:49:41.468 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:49:41.468 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.4229ms
2025-06-21 02:49:41.468 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:41.468 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 2.7481ms
2025-06-21 02:49:41.473 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:41.473 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:41.473 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:41.474 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:41.476 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:41.476 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.4193ms
2025-06-21 02:49:41.476 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:41.476 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.6914ms
2025-06-21 02:49:41.478 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:41.478 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2427ms
2025-06-21 02:49:41.478 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:42.258 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:49:42.258 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:42.258 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:42.263 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:49:42.264 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 8
2025-06-21 02:49:42.270 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:49:42.270 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 11.8811ms
2025-06-21 02:49:42.270 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:42.270 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 12.2366ms
2025-06-21 02:49:42.274 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:42.274 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:42.274 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:42.275 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:42.277 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:42.277 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.2511ms
2025-06-21 02:49:42.277 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:42.277 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.4995ms
2025-06-21 02:49:42.278 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:42.278 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2265ms
2025-06-21 02:49:42.278 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:44.755 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 02:49:44.755 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:44.755 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:44.760 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:49:44.760 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 9
2025-06-21 02:49:44.760 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:49:44.761 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 5.7359ms
2025-06-21 02:49:44.761 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:44.761 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.0878ms
2025-06-21 02:49:44.764 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:44.764 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:44.764 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:44.765 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:44.768 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:44.768 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.0972ms
2025-06-21 02:49:44.768 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:44.768 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.3499ms
2025-06-21 02:49:44.769 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:44.769 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2234ms
2025-06-21 02:49:44.769 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:46.642 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 02:49:46.642 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:46.642 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:46.644 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:49:46.644 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 10
2025-06-21 02:49:46.644 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:49:46.644 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.0936ms
2025-06-21 02:49:46.644 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:46.644 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 2.4259ms
2025-06-21 02:49:46.647 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:46.647 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:46.648 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:46.649 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:46.650 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:46.650 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2.87ms
2025-06-21 02:49:46.650 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:46.650 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.167ms
2025-06-21 02:49:46.651 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:46.651 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2797ms
2025-06-21 02:49:46.651 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:48.379 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 02:49:48.379 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:48.379 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:48.385 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:49:48.385 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 11
2025-06-21 02:49:48.385 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:49:48.386 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 6.0678ms
2025-06-21 02:49:48.386 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:48.386 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.4917ms
2025-06-21 02:49:48.389 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:48.389 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:48.389 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:48.390 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:48.392 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:48.392 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.1415ms
2025-06-21 02:49:48.392 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:48.392 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.3824ms
2025-06-21 02:49:48.393 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:48.394 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.237ms
2025-06-21 02:49:48.394 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:50.195 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 02:49:50.195 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:50.195 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:50.201 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:49:50.201 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 12
2025-06-21 02:49:50.201 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:49:50.201 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 5.6736ms
2025-06-21 02:49:50.201 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:50.201 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 5.963ms
2025-06-21 02:49:50.205 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:50.205 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:50.205 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:50.206 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:50.207 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:50.208 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2.8724ms
2025-06-21 02:49:50.208 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:50.208 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.0991ms
2025-06-21 02:49:50.208 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:50.209 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2171ms
2025-06-21 02:49:50.209 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:51.890 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 02:49:51.890 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:51.891 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:51.892 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:49:51.893 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 13
2025-06-21 02:49:51.893 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:49:51.893 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.1525ms
2025-06-21 02:49:51.893 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:51.893 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 2.4241ms
2025-06-21 02:49:51.896 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:51.897 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:51.897 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:51.898 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:51.899 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:51.899 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2.6711ms
2025-06-21 02:49:51.899 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:51.899 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 2.9226ms
2025-06-21 02:49:51.900 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:51.900 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3434ms
2025-06-21 02:49:51.900 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:54.194 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 02:49:54.194 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:54.194 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:54.199 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:49:54.199 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 14
2025-06-21 02:49:54.199 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:49:54.200 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 5.3257ms
2025-06-21 02:49:54.200 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:54.200 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 5.6088ms
2025-06-21 02:49:54.203 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:54.204 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:54.204 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:54.205 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:54.207 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:54.207 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2.9792ms
2025-06-21 02:49:54.207 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:54.207 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.3341ms
2025-06-21 02:49:54.207 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:54.208 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2074ms
2025-06-21 02:49:54.208 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:56.162 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 02:49:56.162 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:56.162 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:56.168 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 02:49:56.168 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 15
2025-06-21 02:49:56.168 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:49:56.168 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 5.4119ms
2025-06-21 02:49:56.168 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 02:49:56.168 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 5.7456ms
2025-06-21 02:49:56.171 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 02:49:56.171 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:56.171 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 02:49:56.172 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 02:49:56.174 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:56.174 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2.8991ms
2025-06-21 02:49:56.174 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 02:49:56.174 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.2138ms
2025-06-21 02:49:56.175 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 02:49:56.175 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.1898ms
2025-06-21 02:49:56.175 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 02:49:57.583 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:49:57.583 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:49:57.583 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:49:57.585 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:49:57.586 +04:00 [INF] Retrieved 12 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:49:57.586 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:49:57.586 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.7144ms
2025-06-21 02:49:57.586 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:49:57.586 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.1738ms
2025-06-21 02:50:01.949 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=52 - null null
2025-06-21 02:50:01.950 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:50:01.950 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:50:01.954 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:50:01.957 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:50:01.957 +04:00 [INF] Watchlist with Id 52 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:50:01.957 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:50:01.957 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 7.2346ms
2025-06-21 02:50:01.957 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:50:01.957 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=52 - 200 null application/json; charset=utf-8 7.5011ms
2025-06-21 02:50:06.246 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=53 - null null
2025-06-21 02:50:06.246 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:50:06.246 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:50:06.247 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:50:06.248 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:50:06.249 +04:00 [INF] Watchlist with Id 53 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:50:06.249 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:50:06.249 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.8131ms
2025-06-21 02:50:06.249 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:50:06.249 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=53 - 200 null application/json; charset=utf-8 3.1023ms
2025-06-21 02:50:08.072 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=55 - null null
2025-06-21 02:50:08.072 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:50:08.072 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:50:08.073 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:50:08.075 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:50:08.075 +04:00 [INF] Watchlist with Id 55 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:50:08.075 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:50:08.075 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.3677ms
2025-06-21 02:50:08.075 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:50:08.075 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=55 - 200 null application/json; charset=utf-8 3.7511ms
2025-06-21 02:50:11.183 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=59 - null null
2025-06-21 02:50:11.183 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:50:11.183 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:50:11.211 +04:00 [INF] Executed DbCommand (27ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:50:11.215 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:50:11.215 +04:00 [INF] Watchlist with Id 59 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:50:11.215 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:50:11.215 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 32.2566ms
2025-06-21 02:50:11.215 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:50:11.215 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=59 - 200 null application/json; charset=utf-8 32.593ms
2025-06-21 02:50:14.148 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=63 - null null
2025-06-21 02:50:14.149 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:50:14.149 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:50:14.163 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:50:14.165 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:50:14.166 +04:00 [INF] Watchlist with Id 63 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:50:14.166 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:50:14.166 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 16.8856ms
2025-06-21 02:50:14.166 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:50:14.166 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=63 - 200 null application/json; charset=utf-8 17.2452ms
2025-06-21 02:50:25.242 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:50:25.242 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:50:25.242 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:50:25.247 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:50:25.248 +04:00 [INF] Retrieved 7 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:50:25.248 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:50:25.248 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 5.7457ms
2025-06-21 02:50:25.248 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:50:25.248 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 6.0254ms
2025-06-21 02:50:38.586 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:50:38.586 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:50:38.586 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:50:38.587 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:50:38.588 +04:00 [INF] Retrieved 7 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:50:38.588 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:50:38.588 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.9391ms
2025-06-21 02:50:38.588 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:50:38.588 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.2746ms
2025-06-21 02:51:06.698 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:51:06.698 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:51:06.698 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:51:06.699 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:51:06.699 +04:00 [INF] Retrieved 7 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:51:06.699 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:51:06.699 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.4748ms
2025-06-21 02:51:06.699 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:51:06.699 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 1.7637ms
2025-06-21 02:51:09.428 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 02:51:09.431 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:51:09.431 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:51:09.431 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:51:09.431 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 2.9594ms
2025-06-21 02:51:09.432 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:51:09.432 +04:00 [INF] Retrieved 7 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:51:09.432 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:51:09.432 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.6099ms
2025-06-21 02:51:09.432 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:51:09.433 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 1.9517ms
2025-06-21 02:51:09.449 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 02:51:09.451 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 02:51:09.451 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.2041ms
2025-06-21 02:51:09.453 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 4.2577ms
2025-06-21 02:51:09.712 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 02:51:09.725 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 13.0969ms
2025-06-21 02:51:18.450 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=54 - null null
2025-06-21 02:51:18.450 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:51:18.450 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:51:18.461 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:51:18.464 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:51:18.464 +04:00 [INF] Watchlist with Id 54 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:51:18.464 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:51:18.464 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 14.3823ms
2025-06-21 02:51:18.464 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:51:18.464 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=54 - 200 null application/json; charset=utf-8 14.8248ms
2025-06-21 02:51:23.617 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=54 - null null
2025-06-21 02:51:23.617 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:51:23.617 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:51:23.630 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:51:23.630 +04:00 [WRN] Watchlist not found with Id: 54 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:51:23.630 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 12.7175ms
2025-06-21 02:51:23.630 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:51:23.631 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 54 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:51:23.644 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 54 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 02:51:23.649 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=54 - 404 null application/json; charset=utf-8 32.2533ms
2025-06-21 02:51:27.102 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:51:27.102 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:51:27.102 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:51:27.107 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:51:27.108 +04:00 [INF] Retrieved 6 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:51:27.108 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:51:27.108 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 5.4175ms
2025-06-21 02:51:27.108 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:51:27.108 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 5.7158ms
2025-06-21 02:55:43.113 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=56 - null null
2025-06-21 02:55:43.113 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:55:43.113 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:55:43.125 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:55:43.128 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:55:43.128 +04:00 [INF] Watchlist with Id 56 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:55:43.128 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:55:43.128 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 15.1193ms
2025-06-21 02:55:43.128 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:55:43.128 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=56 - 200 null application/json; charset=utf-8 15.4741ms
2025-06-21 02:55:46.867 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=61 - null null
2025-06-21 02:55:46.868 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:55:46.868 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:55:46.869 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:55:46.870 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:55:46.870 +04:00 [INF] Watchlist with Id 61 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:55:46.870 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:55:46.870 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.4568ms
2025-06-21 02:55:46.870 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:55:46.870 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=61 - 200 null application/json; charset=utf-8 2.8688ms
2025-06-21 02:55:49.714 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 02:55:49.714 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:55:49.714 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:55:49.719 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 02:55:49.719 +04:00 [INF] Retrieved 4 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:55:49.719 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 02:55:49.719 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 4.5061ms
2025-06-21 02:55:49.719 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 02:55:49.719 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 4.8403ms
2025-06-21 02:59:29.276 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=57 - null null
2025-06-21 02:59:29.277 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:59:29.277 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 02:59:29.289 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 02:59:29.293 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 02:59:29.293 +04:00 [INF] Watchlist with Id 57 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 02:59:29.293 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 02:59:29.293 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 16.4464ms
2025-06-21 02:59:29.293 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 02:59:29.293 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=57 - 200 null application/json; charset=utf-8 16.8207ms
2025-06-21 03:15:49.062 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:15:49.063 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:15:49.063 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:15:49.116 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:15:49.116 +04:00 [INF] Retrieved 3 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:15:49.116 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:15:49.117 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 53.598ms
2025-06-21 03:15:49.117 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:15:49.117 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 54.8574ms
2025-06-21 03:25:05.319 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:25:05.319 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:25:05.319 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:25:05.376 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:25:05.377 +04:00 [INF] Retrieved 3 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:25:05.377 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:25:05.377 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 57.8564ms
2025-06-21 03:25:05.377 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:25:05.377 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 58.2188ms
2025-06-21 03:25:05.527 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-21 03:25:05.528 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-21 03:25:05.528 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 0.5854ms
2025-06-21 03:25:09.363 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:25:09.363 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:25:09.363 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:25:09.365 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:25:09.366 +04:00 [INF] Retrieved 3 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:25:09.366 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:25:09.366 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.2669ms
2025-06-21 03:25:09.366 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:25:09.366 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.5472ms
2025-06-21 03:25:09.372 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 03:25:09.377 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 4.6415ms
2025-06-21 03:25:09.467 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 03:25:09.467 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.6505ms
2025-06-21 03:25:09.469 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 03:25:09.473 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 3.5117ms
2025-06-21 03:25:09.747 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 03:25:09.758 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 10.3964ms
2025-06-21 03:25:19.154 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=58 - null null
2025-06-21 03:25:19.155 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:25:19.155 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:25:19.160 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:25:19.163 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 03:25:19.163 +04:00 [INF] Watchlist with Id 58 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:25:19.163 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:25:19.163 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 8.2854ms
2025-06-21 03:25:19.163 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:25:19.163 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=58 - 200 null application/json; charset=utf-8 8.5648ms
2025-06-21 03:25:43.961 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 03:25:44.082 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 03:25:44.083 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 03:25:44.142 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 03:25:44.142 +04:00 [INF] Hosting environment: Development
2025-06-21 03:25:44.142 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 03:25:44.680 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 03:25:44.781 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:25:44.796 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 116.9419ms
2025-06-21 03:25:44.796 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:25:44.810 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 03:25:44.815 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.1964ms
2025-06-21 03:25:44.820 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:25:45.001 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 03:25:45.024 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 23.4274ms
2025-06-21 03:25:45.340 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 03:25:45.381 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 40.7755ms
2025-06-21 03:25:45.896 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 03:25:46.146 +04:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:25:46.372 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:25:46.387 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1564.1558ms
2025-06-21 03:25:46.387 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:25:46.392 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1611.0024ms
2025-06-21 03:25:46.397 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:25:46.425 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 27.6067ms
2025-06-21 03:25:46.425 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:25:46.703 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-21 03:25:46.704 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-21 03:25:46.708 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-21 03:25:46.708 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-21 03:25:46.709 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 4.8945ms
2025-06-21 03:25:46.709 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 5.366ms
2025-06-21 03:25:46.720 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-21 03:25:46.721 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-21 03:25:46.721 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 0.735ms
2025-06-21 03:25:46.740 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-21 03:25:46.741 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-21 03:25:46.741 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 0.6653ms
2025-06-21 03:25:46.930 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-21 03:25:46.930 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-21 03:25:46.930 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.7201ms
2025-06-21 03:25:51.263 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:25:51.266 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:25:51.269 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:25:51.348 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:25:51.367 +04:00 [INF] Retrieved 2 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:25:51.371 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:25:51.376 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 106.6204ms
2025-06-21 03:25:51.376 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:25:51.376 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 113.4889ms
2025-06-21 03:25:53.683 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=62 - null null
2025-06-21 03:25:53.683 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:25:53.689 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:25:53.725 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:25:53.807 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 03:25:53.817 +04:00 [INF] Watchlist with Id 62 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:25:53.817 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:25:53.819 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 130.1457ms
2025-06-21 03:25:53.819 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:25:53.820 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=62 - 200 null application/json; charset=utf-8 136.7831ms
2025-06-21 03:25:57.046 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:25:57.047 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:25:57.047 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:25:57.053 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:25:57.053 +04:00 [INF] Retrieved 1 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:25:57.054 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:25:57.054 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 6.903ms
2025-06-21 03:25:57.054 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:25:57.054 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 7.867ms
2025-06-21 03:26:11.754 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=60 - null null
2025-06-21 03:26:11.755 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:26:11.755 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:26:11.758 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:26:11.761 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 03:26:11.762 +04:00 [INF] Watchlist with Id 60 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:26:11.762 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:26:11.762 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 6.8382ms
2025-06-21 03:26:11.762 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:26:11.762 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=60 - 200 null application/json; charset=utf-8 7.5975ms
2025-06-21 03:26:18.454 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=60 - null null
2025-06-21 03:26:18.455 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:26:18.455 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:26:18.458 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:26:18.458 +04:00 [WRN] Watchlist not found with Id: 60 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:26:18.458 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.1823ms
2025-06-21 03:26:18.458 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:26:18.460 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 60 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 03:26:18.470 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 60 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 03:26:18.476 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=60 - 404 null application/json; charset=utf-8 21.3483ms
2025-06-21 03:26:21.691 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=60 - null null
2025-06-21 03:26:21.691 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:26:21.691 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:26:21.693 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:26:21.693 +04:00 [WRN] Watchlist not found with Id: 60 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:26:21.694 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.4152ms
2025-06-21 03:26:21.694 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:26:21.694 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 60 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 03:26:21.695 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 60 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 03:26:21.696 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=60 - 404 null application/json; charset=utf-8 4.7569ms
2025-06-21 03:26:50.453 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:26:50.453 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:26:50.453 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:26:50.476 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:26:50.477 +04:00 [INF] No watchlists found for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:26:50.477 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.EmptyPartition`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:26:50.478 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 24.274ms
2025-06-21 03:26:50.478 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:26:50.478 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 24.8865ms
2025-06-21 03:26:55.511 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 03:26:55.515 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:26:55.516 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:26:55.516 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:26:55.517 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 5.3998ms
2025-06-21 03:26:55.518 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:26:55.518 +04:00 [INF] No watchlists found for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:26:55.518 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.EmptyPartition`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:26:55.518 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.8956ms
2025-06-21 03:26:55.518 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:26:55.518 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.7914ms
2025-06-21 03:26:55.547 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 03:26:55.548 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 03:26:55.549 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.988ms
2025-06-21 03:26:55.559 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 12.0622ms
2025-06-21 03:26:55.806 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 03:26:55.824 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 17.8851ms
2025-06-21 03:27:03.875 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:03.877 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:03.877 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:03.914 +04:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:03.918 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:03.918 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 41.2022ms
2025-06-21 03:27:03.918 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:03.918 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 43.422ms
2025-06-21 03:27:03.922 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:03.922 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5583ms
2025-06-21 03:27:03.922 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:06.454 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 03:27:06.455 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:06.458 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:06.498 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 03:27:06.508 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 1
2025-06-21 03:27:06.508 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:06.508 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 50.229ms
2025-06-21 03:27:06.508 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:06.509 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 54.5275ms
2025-06-21 03:27:06.516 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:06.516 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:06.516 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:06.518 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:06.521 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:06.522 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 5.8898ms
2025-06-21 03:27:06.522 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:06.522 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 6.4698ms
2025-06-21 03:27:06.523 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:06.523 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3378ms
2025-06-21 03:27:06.523 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:07.376 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 03:27:07.376 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:07.376 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:07.380 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 03:27:07.381 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-21 03:27:07.381 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:07.381 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 4.5651ms
2025-06-21 03:27:07.381 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:07.381 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 5.2853ms
2025-06-21 03:27:07.384 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:07.384 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:07.384 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:07.386 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:07.388 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:07.389 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.4945ms
2025-06-21 03:27:07.389 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:07.389 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.9558ms
2025-06-21 03:27:07.390 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:07.390 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.4328ms
2025-06-21 03:27:07.390 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:08.176 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 03:27:08.177 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:08.177 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:08.183 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 03:27:08.183 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 6
2025-06-21 03:27:08.183 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:08.183 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 6.4572ms
2025-06-21 03:27:08.183 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:08.183 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 7.2194ms
2025-06-21 03:27:08.187 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:08.187 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:08.187 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:08.189 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:08.192 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:08.192 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 5.0339ms
2025-06-21 03:27:08.192 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:08.193 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 5.4559ms
2025-06-21 03:27:08.193 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:08.194 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3941ms
2025-06-21 03:27:08.194 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:09.016 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 03:27:09.017 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:09.017 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:09.022 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 03:27:09.023 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 7
2025-06-21 03:27:09.023 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:09.023 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 6.3032ms
2025-06-21 03:27:09.023 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:09.023 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.8356ms
2025-06-21 03:27:09.026 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:09.026 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:09.026 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:09.028 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:09.031 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:09.032 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 5.1292ms
2025-06-21 03:27:09.032 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:09.032 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 5.6582ms
2025-06-21 03:27:09.033 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:09.033 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3273ms
2025-06-21 03:27:09.033 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:09.728 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 03:27:09.728 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:09.728 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:09.734 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 03:27:09.735 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 8
2025-06-21 03:27:09.735 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:09.735 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 6.8126ms
2025-06-21 03:27:09.735 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:09.735 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 7.5889ms
2025-06-21 03:27:09.739 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:09.739 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:09.739 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:09.740 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:09.743 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:09.743 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.2538ms
2025-06-21 03:27:09.743 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:09.743 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.8914ms
2025-06-21 03:27:09.744 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:09.745 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5696ms
2025-06-21 03:27:09.745 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:15.679 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 03:27:15.680 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:15.680 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:15.683 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 03:27:15.683 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 9
2025-06-21 03:27:15.683 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:15.683 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 3.173ms
2025-06-21 03:27:15.683 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:15.683 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 3.8754ms
2025-06-21 03:27:15.687 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:15.687 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:15.687 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:15.688 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:15.691 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:15.691 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.3923ms
2025-06-21 03:27:15.691 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:15.691 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.7177ms
2025-06-21 03:27:15.692 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:15.692 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5101ms
2025-06-21 03:27:15.693 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:16.487 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 03:27:16.487 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:16.488 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:16.500 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 03:27:16.500 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 10
2025-06-21 03:27:16.500 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:16.500 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 12.4082ms
2025-06-21 03:27:16.500 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:16.500 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 12.8812ms
2025-06-21 03:27:16.503 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:16.503 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:16.503 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:16.505 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:16.508 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:16.508 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.359ms
2025-06-21 03:27:16.508 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:16.508 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.6746ms
2025-06-21 03:27:16.509 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:16.510 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2778ms
2025-06-21 03:27:16.510 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:17.248 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 03:27:17.249 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:17.249 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:17.251 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 03:27:17.251 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 11
2025-06-21 03:27:17.251 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:17.252 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.7623ms
2025-06-21 03:27:17.252 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:17.252 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 3.3052ms
2025-06-21 03:27:17.255 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:17.255 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:17.255 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:17.257 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:17.259 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:17.259 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.8026ms
2025-06-21 03:27:17.259 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:17.259 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.3546ms
2025-06-21 03:27:17.260 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:17.260 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3145ms
2025-06-21 03:27:17.260 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:17.935 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 03:27:17.935 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:17.935 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:17.938 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 03:27:17.939 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 12
2025-06-21 03:27:17.939 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:17.939 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 3.4914ms
2025-06-21 03:27:17.939 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:17.939 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 4.0018ms
2025-06-21 03:27:17.942 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:17.942 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:17.942 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:17.944 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:17.945 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:17.946 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.168ms
2025-06-21 03:27:17.946 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:17.946 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.4793ms
2025-06-21 03:27:17.947 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:17.947 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3252ms
2025-06-21 03:27:17.947 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:18.600 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 03:27:18.600 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:18.600 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:18.606 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 03:27:18.607 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 13
2025-06-21 03:27:18.607 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:18.607 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 6.2873ms
2025-06-21 03:27:18.607 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:18.607 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.7233ms
2025-06-21 03:27:18.610 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:18.610 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:18.610 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:18.611 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:18.613 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:18.613 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.6711ms
2025-06-21 03:27:18.614 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:18.614 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.0595ms
2025-06-21 03:27:18.614 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:18.615 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3126ms
2025-06-21 03:27:18.615 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:21.048 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 03:27:21.048 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:21.048 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:21.052 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 03:27:21.052 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 15
2025-06-21 03:27:21.052 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:21.052 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 3.8657ms
2025-06-21 03:27:21.052 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:21.052 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 4.537ms
2025-06-21 03:27:21.055 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:21.055 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:21.055 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:21.057 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:21.059 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:21.059 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.9098ms
2025-06-21 03:27:21.059 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:21.059 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.2299ms
2025-06-21 03:27:21.060 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:21.061 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.6371ms
2025-06-21 03:27:21.061 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:21.759 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 03:27:21.760 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:21.760 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:21.771 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 03:27:21.771 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 14
2025-06-21 03:27:21.771 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:21.772 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 11.8396ms
2025-06-21 03:27:21.772 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 03:27:21.772 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 12.4708ms
2025-06-21 03:27:21.775 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:27:21.775 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:21.775 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:27:21.776 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:27:21.778 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:21.778 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.2137ms
2025-06-21 03:27:21.778 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:27:21.778 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.5075ms
2025-06-21 03:27:21.779 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:27:21.779 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2026ms
2025-06-21 03:27:21.779 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:27:23.928 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:27:23.928 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:27:23.929 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:23.931 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:27:23.932 +04:00 [INF] Retrieved 12 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:27:23.932 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:23.932 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 3.8901ms
2025-06-21 03:27:23.932 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:27:23.933 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 4.4074ms
2025-06-21 03:27:29.758 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=64 - null null
2025-06-21 03:27:29.759 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:27:29.759 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:29.763 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:27:29.766 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 03:27:29.767 +04:00 [INF] Watchlist with Id 64 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:27:29.767 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:29.767 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 8.2223ms
2025-06-21 03:27:29.767 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:27:29.767 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=64 - 200 null application/json; charset=utf-8 8.6746ms
2025-06-21 03:27:33.971 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:27:33.972 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:27:33.972 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:33.973 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:27:33.974 +04:00 [INF] Retrieved 11 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:27:33.974 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:27:33.974 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 2.4841ms
2025-06-21 03:27:33.974 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:27:33.974 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.112ms
2025-06-21 03:27:44.911 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=66 - null null
2025-06-21 03:27:44.911 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:27:44.911 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:27:44.925 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:27:44.932 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 03:27:44.932 +04:00 [INF] Watchlist with Id 66 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:27:44.933 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:27:44.933 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 21.3303ms
2025-06-21 03:27:44.933 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:27:44.933 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=66 - 200 null application/json; charset=utf-8 21.7933ms
2025-06-21 03:29:40.837 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:29:40.837 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:29:40.837 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:29:40.850 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:29:40.851 +04:00 [INF] Retrieved 10 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:29:40.851 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:29:40.851 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 13.5249ms
2025-06-21 03:29:40.851 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:29:40.851 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 13.9025ms
2025-06-21 03:29:51.080 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:29:51.080 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:29:51.080 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:29:51.104 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:29:51.105 +04:00 [INF] Retrieved 10 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:29:51.105 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:29:51.106 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 25.4602ms
2025-06-21 03:29:51.106 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:29:51.106 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 26.2043ms
2025-06-21 03:29:54.267 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=65 - null null
2025-06-21 03:29:54.268 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:29:54.268 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:29:54.285 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:29:54.290 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 03:29:54.290 +04:00 [INF] Watchlist with Id 65 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:29:54.290 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:29:54.290 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 22.3784ms
2025-06-21 03:29:54.290 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:29:54.290 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=65 - 200 null application/json; charset=utf-8 23.0645ms
2025-06-21 03:30:00.450 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=65 - null null
2025-06-21 03:30:00.450 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:30:00.451 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:30:00.452 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:30:00.452 +04:00 [WRN] Watchlist not found with Id: 65 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:30:00.453 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 2.1129ms
2025-06-21 03:30:00.453 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:30:00.453 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 65 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 03:30:00.454 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 65 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 03:30:00.457 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=65 - 404 null application/json; charset=utf-8 7.1419ms
2025-06-21 03:30:05.094 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:30:05.095 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:30:05.095 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:30:05.099 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:30:05.100 +04:00 [INF] Retrieved 9 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:30:05.100 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:30:05.100 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 5.1849ms
2025-06-21 03:30:05.100 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:30:05.100 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 5.8108ms
2025-06-21 03:30:21.019 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=67 - null null
2025-06-21 03:30:21.019 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:30:21.019 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:30:21.020 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:30:21.022 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 03:30:21.022 +04:00 [INF] Watchlist with Id 67 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:30:21.022 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:30:21.022 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.1395ms
2025-06-21 03:30:21.022 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:30:21.022 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=67 - 200 null application/json; charset=utf-8 3.5325ms
2025-06-21 03:33:14.945 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:33:14.945 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:33:14.945 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:33:14.960 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:33:14.961 +04:00 [INF] Retrieved 8 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:33:14.961 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:33:14.961 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 16.2952ms
2025-06-21 03:33:14.961 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:33:14.962 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 16.7216ms
2025-06-21 03:33:18.450 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 03:33:18.452 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:33:18.452 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:33:18.452 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:33:18.453 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:33:18.454 +04:00 [INF] Retrieved 8 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:33:18.454 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:33:18.454 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.8097ms
2025-06-21 03:33:18.454 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:33:18.454 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.1798ms
2025-06-21 03:33:18.454 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 4.2416ms
2025-06-21 03:33:18.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 03:33:18.559 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.3172ms
2025-06-21 03:33:18.561 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 03:33:18.565 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 3.6544ms
2025-06-21 03:33:18.895 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 03:33:18.906 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 10.7361ms
2025-06-21 03:33:28.323 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:33:28.323 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:33:28.323 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:33:28.324 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:33:28.324 +04:00 [INF] Retrieved 8 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:33:28.325 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:33:28.325 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 1.8436ms
2025-06-21 03:33:28.325 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:33:28.325 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 2.1827ms
2025-06-21 03:33:33.087 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=68 - null null
2025-06-21 03:33:33.087 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:33:33.087 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:33:33.091 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:33:33.095 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 03:33:33.095 +04:00 [INF] Watchlist with Id 68 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:33:33.095 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:33:33.095 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 8.1351ms
2025-06-21 03:33:33.095 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:33:33.095 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=68 - 200 null application/json; charset=utf-8 8.6914ms
2025-06-21 03:33:47.678 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 03:33:47.810 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 03:33:47.810 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 03:33:47.866 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 03:33:47.866 +04:00 [INF] Hosting environment: Development
2025-06-21 03:33:47.866 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 03:33:48.343 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 03:33:48.459 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 117.3982ms
2025-06-21 03:33:48.476 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 03:33:48.480 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.4829ms
2025-06-21 03:33:48.657 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 03:33:48.678 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.8718ms
2025-06-21 03:33:48.975 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 03:33:49.001 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 25.598ms
2025-06-21 03:34:00.436 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 03:34:00.441 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 4.8452ms
2025-06-21 03:34:00.462 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 03:34:00.464 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 1.9459ms
2025-06-21 03:34:00.591 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:34:00.609 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:34:00.625 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:34:00.655 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 03:34:00.665 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 9.3603ms
2025-06-21 03:34:01.001 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 03:34:01.023 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 21.8193ms
2025-06-21 03:34:01.664 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 03:34:01.903 +04:00 [INF] Executed DbCommand (53ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:34:02.126 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:34:02.140 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1512.2753ms
2025-06-21 03:34:02.141 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:34:02.144 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1553.3163ms
2025-06-21 03:34:02.150 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:34:02.179 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 29.3657ms
2025-06-21 03:34:02.179 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:34:04.949 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:34:04.952 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:34:04.955 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:34:05.035 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:34:05.054 +04:00 [INF] Retrieved 7 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:34:05.059 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:34:05.063 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 107.4842ms
2025-06-21 03:34:05.063 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:34:05.063 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 114.4339ms
2025-06-21 03:34:09.122 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=69 - null null
2025-06-21 03:34:09.123 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:34:09.128 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:34:09.163 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:34:09.246 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 03:34:09.256 +04:00 [INF] Watchlist with Id 69 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:34:09.256 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:34:09.259 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 130.9253ms
2025-06-21 03:34:09.259 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:34:09.260 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=69 - 200 null application/json; charset=utf-8 137.3831ms
2025-06-21 03:34:14.630 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=69 - null null
2025-06-21 03:34:14.631 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:34:14.631 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:34:14.654 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:34:14.654 +04:00 [WRN] Watchlist not found with Id: 69 for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:34:14.655 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 23.569ms
2025-06-21 03:34:14.655 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:34:14.656 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 69 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 03:34:14.667 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Watchlist with Id 69 not found.
   at Service.Services.WatchlistService.DeleteAsync(Int32 id, String userId) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\WatchlistService.cs:line 93
   at CinelogAPI.Controllers.UI.WatchlistController.Delete(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\UI\WatchlistController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 03:34:14.672 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=69 - 404 null application/json; charset=utf-8 42.0486ms
2025-06-21 03:34:18.932 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:34:18.932 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:34:18.932 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:34:18.947 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:34:18.948 +04:00 [INF] Retrieved 6 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:34:18.949 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:34:18.949 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 16.244ms
2025-06-21 03:34:18.949 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:34:18.949 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 17.009ms
2025-06-21 03:40:25.667 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:40:25.668 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:40:25.668 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:40:25.730 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:40:25.732 +04:00 [INF] Retrieved 6 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:40:25.732 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:40:25.732 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 64.1411ms
2025-06-21 03:40:25.732 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:40:25.732 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 64.8457ms
2025-06-21 03:40:41.779 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 03:40:41.917 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 03:40:41.917 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 03:40:41.974 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 03:40:41.975 +04:00 [INF] Hosting environment: Development
2025-06-21 03:40:41.975 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 03:40:42.541 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 03:40:42.649 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 109.4233ms
2025-06-21 03:40:42.662 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 03:40:42.667 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.5603ms
2025-06-21 03:40:42.858 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 03:40:42.879 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.0614ms
2025-06-21 03:40:43.220 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 03:40:43.252 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 31.3748ms
2025-06-21 03:40:51.971 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 03:40:52.136 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 03:40:52.137 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 03:40:52.214 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 03:40:52.215 +04:00 [INF] Hosting environment: Development
2025-06-21 03:40:52.215 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 03:40:52.614 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 03:40:52.709 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 03:40:52.721 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:40:52.725 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 112.4485ms
2025-06-21 03:40:52.740 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 03:40:52.741 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 03:40:52.744 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.4446ms
2025-06-21 03:40:52.931 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 03:40:52.951 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.2574ms
2025-06-21 03:40:53.267 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 03:40:53.293 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 26.0608ms
2025-06-21 03:40:53.864 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 03:40:54.120 +04:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 03:40:54.340 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:40:54.353 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1610.3224ms
2025-06-21 03:40:54.353 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 03:40:54.357 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1648.3978ms
2025-06-21 03:40:54.364 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 03:40:54.392 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 27.8269ms
2025-06-21 03:40:54.392 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 03:40:57.294 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 03:40:57.297 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:40:57.301 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:40:57.383 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 03:40:57.403 +04:00 [INF] Retrieved 6 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:40:57.408 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 03:40:57.412 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 111.237ms
2025-06-21 03:40:57.412 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 03:40:57.412 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 118.268ms
2025-06-21 03:41:00.202 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=71 - null null
2025-06-21 03:41:00.202 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:41:00.209 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:41:00.243 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:41:00.325 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 03:41:00.334 +04:00 [INF] Watchlist with Id 71 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:41:00.334 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:41:00.337 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 127.9362ms
2025-06-21 03:41:00.337 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:41:00.337 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=71 - 200 null application/json; charset=utf-8 135.2332ms
2025-06-21 03:41:04.110 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=72 - null null
2025-06-21 03:41:04.111 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:41:04.111 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:41:04.116 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:41:04.118 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 03:41:04.119 +04:00 [INF] Watchlist with Id 72 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:41:04.119 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:41:04.119 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 8.2226ms
2025-06-21 03:41:04.119 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:41:04.119 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=72 - 200 null application/json; charset=utf-8 9.1231ms
2025-06-21 03:41:09.313 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=75 - null null
2025-06-21 03:41:09.313 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:41:09.314 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 03:41:09.315 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 03:41:09.317 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 03:41:09.317 +04:00 [INF] Watchlist with Id 75 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 03:41:09.317 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 03:41:09.317 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.8966ms
2025-06-21 03:41:09.318 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 03:41:09.318 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=75 - 200 null application/json; charset=utf-8 4.8069ms
2025-06-21 14:18:59.670 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 14:18:59.797 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 14:18:59.798 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 14:18:59.852 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 14:18:59.852 +04:00 [INF] Hosting environment: Development
2025-06-21 14:18:59.852 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 14:19:00.118 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 14:19:00.231 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 114.797ms
2025-06-21 14:19:00.270 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 14:19:00.288 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 14:19:00.302 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 14:19:00.481 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 14:19:00.481 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 14:19:00.484 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.1232ms
2025-06-21 14:19:00.499 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 18.4998ms
2025-06-21 14:19:00.748 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 14:19:00.772 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 23.7117ms
2025-06-21 14:19:01.425 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 14:19:01.725 +04:00 [INF] Executed DbCommand (64ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 14:19:01.940 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 14:19:01.955 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1650.1874ms
2025-06-21 14:19:01.955 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 14:19:01.959 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1689.5823ms
2025-06-21 14:19:01.966 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 14:19:01.996 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 29.9795ms
2025-06-21 14:19:01.996 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 14:19:02.261 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-21 14:19:02.261 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-21 14:19:02.267 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-21 14:19:02.267 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-21 14:19:02.267 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 6.0729ms
2025-06-21 14:19:02.267 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 6.0679ms
2025-06-21 14:19:02.270 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-21 14:19:02.271 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-21 14:19:02.271 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 0.6369ms
2025-06-21 14:19:02.281 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-21 14:19:02.282 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-21 14:19:02.282 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 0.5479ms
2025-06-21 14:19:02.286 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-21 14:19:02.286 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-21 14:19:02.287 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-21 14:19:02.287 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-21 14:19:02.287 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 0.6249ms
2025-06-21 14:19:02.287 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 0.631ms
2025-06-21 14:19:02.298 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-21 14:19:02.298 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-21 14:19:02.298 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-21 14:19:02.298 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-21 14:19:02.299 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 0.4941ms
2025-06-21 14:19:02.299 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 0.5278ms
2025-06-21 14:19:02.454 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-21 14:19:02.454 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-21 14:19:02.455 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-21 14:19:02.455 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-21 14:19:02.455 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 0.5831ms
2025-06-21 14:19:02.455 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.4908ms
2025-06-21 14:19:18.707 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 14:19:18.710 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 14:19:18.715 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 14:19:18.825 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 14:19:18.850 +04:00 [INF] Retrieved 3 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 14:19:18.855 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 14:19:18.861 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 146.0183ms
2025-06-21 14:19:18.861 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 14:19:18.861 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 153.8715ms
2025-06-21 14:19:28.561 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=70 - null null
2025-06-21 14:19:28.562 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 14:19:28.570 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 14:19:28.612 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 14:19:28.705 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 14:19:28.714 +04:00 [INF] Watchlist with Id 70 successfully deleted by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 14:19:28.714 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 14:19:28.717 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 146.6512ms
2025-06-21 14:19:28.717 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 14:19:28.717 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=70 - 200 null application/json; charset=utf-8 155.4342ms
2025-06-21 14:28:36.357 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 14:28:36.358 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 14:28:36.358 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 14:28:36.418 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 14:28:36.419 +04:00 [INF] Retrieved 2 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-21 14:28:36.419 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 14:28:36.420 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 62.0031ms
2025-06-21 14:28:36.420 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 14:28:36.420 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 62.9022ms
2025-06-21 15:20:14.392 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/register - application/json; charset=utf-8 112
2025-06-21 15:20:14.396 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Register (CinelogAPI)'
2025-06-21 15:20:14.406 +04:00 [INF] Route matched with {action = "Register", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Service.DTOs.Account.RegisterDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-21 15:20:14.627 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-21 15:20:14.663 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [Age], [ConcurrencyStamp], [Email], [EmailConfirmed], [FullName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-06-21 15:20:14.666 +04:00 [INF] User created successfully: fe6c9a5a-f5de-4136-97a2-0a4db1d26911, tapep68029@ihnpo.com
2025-06-21 15:20:14.678 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-06-21 15:20:14.703 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-06-21 15:20:14.706 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-06-21 15:20:14.714 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-21 15:20:14.749 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (Size = 4000), @p19='?' (Size = 4000), @p5='?' (Size = 256), @p6='?' (DbType = Boolean), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [Age] = @p3, [ConcurrencyStamp] = @p4, [Email] = @p5, [EmailConfirmed] = @p6, [FullName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-06-21 15:20:17.605 +04:00 [INF] Confirmation email sent to tapep68029@ihnpo.com
2025-06-21 15:20:17.606 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.RegisterResponse'.
2025-06-21 15:20:17.607 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Register (CinelogAPI) in 3200.6118ms
2025-06-21 15:20:17.607 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Register (CinelogAPI)'
2025-06-21 15:20:17.608 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/register - 200 null application/json; charset=utf-8 3216.9062ms
2025-06-21 15:20:39.819 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 52
2025-06-21 15:20:39.821 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-21 15:20:39.824 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-21 15:20:39.841 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-21 15:20:39.845 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-21 15:20:39.923 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-21 15:20:39.931 +04:00 [INF] User trnmrdv logged in successfully.
2025-06-21 15:20:39.932 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-21 15:20:39.933 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 108.193ms
2025-06-21 15:20:39.933 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-21 15:20:39.933 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 113.4607ms
2025-06-21 15:20:39.947 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:20:39.949 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:20:39.949 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:20:39.981 +04:00 [INF] Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:20:39.986 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:20:39.986 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 36.6378ms
2025-06-21 15:20:39.986 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:20:39.986 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 38.7965ms
2025-06-21 15:20:39.988 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:20:39.989 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5925ms
2025-06-21 15:20:39.989 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 15:20:42.551 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 15:20:42.551 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 15:20:42.551 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:20:42.563 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 15:20:42.563 +04:00 [INF] No watchlists found for user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 15:20:42.563 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.EmptyPartition`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:20:42.564 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 12.9625ms
2025-06-21 15:20:42.564 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 15:20:42.565 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 13.9192ms
2025-06-21 15:20:57.340 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:20:57.341 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:20:57.341 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:20:57.344 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:20:57.354 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:20:57.355 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 14.0849ms
2025-06-21 15:20:57.355 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:20:57.355 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 14.8339ms
2025-06-21 15:20:57.356 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:20:57.357 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.7743ms
2025-06-21 15:20:57.357 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 15:21:01.166 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 15:21:01.166 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:01.170 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:01.207 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 15:21:01.219 +04:00 [INF] Watchlist created by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911 for Movie 1
2025-06-21 15:21:01.219 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:01.219 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 48.7938ms
2025-06-21 15:21:01.219 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:01.219 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 53.5675ms
2025-06-21 15:21:01.222 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:21:01.222 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:01.222 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:21:01.224 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:21:01.228 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:21:01.228 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 5.535ms
2025-06-21 15:21:01.228 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:01.228 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 5.9471ms
2025-06-21 15:21:01.229 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:21:01.229 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3942ms
2025-06-21 15:21:01.229 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 15:21:02.283 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 15:21:02.284 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:02.284 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:02.287 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 15:21:02.288 +04:00 [INF] Watchlist created by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911 for Movie 3
2025-06-21 15:21:02.288 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:02.288 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 3.9765ms
2025-06-21 15:21:02.288 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:02.288 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 4.9677ms
2025-06-21 15:21:02.291 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:21:02.291 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:02.292 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:21:02.294 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:21:02.297 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:21:02.298 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 5.9855ms
2025-06-21 15:21:02.298 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:02.298 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 6.9488ms
2025-06-21 15:21:02.302 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:21:02.303 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5467ms
2025-06-21 15:21:02.303 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 15:21:03.331 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 15:21:03.331 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:03.332 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:03.342 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 15:21:03.343 +04:00 [INF] Watchlist created by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911 for Movie 6
2025-06-21 15:21:03.343 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:03.343 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 11.2814ms
2025-06-21 15:21:03.343 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:03.343 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 12.0443ms
2025-06-21 15:21:03.347 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:21:03.347 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:03.347 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:21:03.349 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:21:03.352 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:21:03.353 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 5.568ms
2025-06-21 15:21:03.353 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:03.353 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 6.0251ms
2025-06-21 15:21:03.354 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:21:03.354 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5147ms
2025-06-21 15:21:03.355 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 15:21:04.211 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 15:21:04.212 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:04.212 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:04.214 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 15:21:04.215 +04:00 [INF] Watchlist created by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911 for Movie 7
2025-06-21 15:21:04.215 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:04.215 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.8627ms
2025-06-21 15:21:04.215 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:04.215 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 4.0264ms
2025-06-21 15:21:04.219 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:21:04.219 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:04.219 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:21:04.221 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:21:04.223 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:21:04.224 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.7712ms
2025-06-21 15:21:04.224 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:04.224 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 5.1776ms
2025-06-21 15:21:04.225 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:21:04.225 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3842ms
2025-06-21 15:21:04.225 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 15:21:05.052 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 15:21:05.053 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:05.053 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:05.064 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 15:21:05.065 +04:00 [INF] Watchlist created by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911 for Movie 8
2025-06-21 15:21:05.065 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:05.065 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 11.8637ms
2025-06-21 15:21:05.065 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:05.065 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 12.9029ms
2025-06-21 15:21:05.069 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:21:05.069 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:05.069 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:21:05.070 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:21:05.073 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:21:05.073 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.1268ms
2025-06-21 15:21:05.073 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:05.073 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.4418ms
2025-06-21 15:21:05.074 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:21:05.074 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3371ms
2025-06-21 15:21:05.074 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 15:21:10.579 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-21 15:21:10.580 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:10.580 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:10.583 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 15:21:10.583 +04:00 [INF] Watchlist created by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911 for Movie 9
2025-06-21 15:21:10.583 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:10.583 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 3.7885ms
2025-06-21 15:21:10.583 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:10.584 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 4.4166ms
2025-06-21 15:21:10.587 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:21:10.588 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:10.588 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:21:10.590 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:21:10.595 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:21:10.595 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 7.372ms
2025-06-21 15:21:10.595 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:10.596 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 8.4083ms
2025-06-21 15:21:10.596 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:21:10.597 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.9268ms
2025-06-21 15:21:10.597 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 15:21:12.795 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 15:21:12.795 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:12.795 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:12.798 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 15:21:12.798 +04:00 [INF] Watchlist created by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911 for Movie 10
2025-06-21 15:21:12.798 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:12.798 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 3.1331ms
2025-06-21 15:21:12.798 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:12.799 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 3.5777ms
2025-06-21 15:21:12.802 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:21:12.802 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:12.802 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:21:12.803 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:21:12.805 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:21:12.805 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.2781ms
2025-06-21 15:21:12.806 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:12.806 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.6724ms
2025-06-21 15:21:12.806 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:21:12.807 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5297ms
2025-06-21 15:21:12.807 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 15:21:14.555 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 15:21:14.555 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:14.555 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:14.567 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 15:21:14.567 +04:00 [INF] Watchlist created by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911 for Movie 11
2025-06-21 15:21:14.568 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:14.568 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 12.554ms
2025-06-21 15:21:14.568 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:14.568 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 13.0764ms
2025-06-21 15:21:14.571 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:21:14.572 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:14.572 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:21:14.573 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:21:14.577 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:21:14.577 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 5.2828ms
2025-06-21 15:21:14.577 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:14.577 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 5.7702ms
2025-06-21 15:21:14.578 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:21:14.578 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2362ms
2025-06-21 15:21:14.578 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 15:21:16.475 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 15:21:16.476 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:16.476 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:16.479 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 15:21:16.479 +04:00 [INF] Watchlist created by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911 for Movie 12
2025-06-21 15:21:16.479 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:16.479 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 3.5295ms
2025-06-21 15:21:16.479 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:16.479 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 4.1222ms
2025-06-21 15:21:16.482 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:21:16.482 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:16.482 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:21:16.484 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:21:16.486 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:21:16.487 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.2964ms
2025-06-21 15:21:16.487 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:16.487 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.7608ms
2025-06-21 15:21:16.487 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:21:16.488 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3901ms
2025-06-21 15:21:16.488 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 15:21:18.299 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-21 15:21:18.299 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:18.299 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:18.310 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-21 15:21:18.310 +04:00 [INF] Watchlist created by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911 for Movie 13
2025-06-21 15:21:18.310 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:18.310 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 11.3017ms
2025-06-21 15:21:18.310 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-21 15:21:18.310 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 11.7631ms
2025-06-21 15:21:18.314 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:21:18.314 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:18.314 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:21:18.316 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:21:18.321 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:21:18.321 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 7.1059ms
2025-06-21 15:21:18.321 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:21:18.321 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 7.5879ms
2025-06-21 15:21:18.322 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:21:18.322 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2893ms
2025-06-21 15:21:18.322 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 15:21:23.280 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 15:21:23.280 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 15:21:23.280 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:23.284 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 15:21:23.285 +04:00 [INF] Retrieved 10 watchlists for user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 15:21:23.285 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:21:23.286 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 5.5363ms
2025-06-21 15:21:23.286 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 15:21:23.286 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 6.2405ms
2025-06-21 15:21:26.919 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=76 - null null
2025-06-21 15:21:26.919 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 15:21:26.919 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:26.925 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 15:21:26.928 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 15:21:26.929 +04:00 [INF] Watchlist with Id 76 successfully deleted by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 15:21:26.929 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:26.929 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 9.8904ms
2025-06-21 15:21:26.929 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 15:21:26.929 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=76 - 200 null application/json; charset=utf-8 10.5767ms
2025-06-21 15:21:30.141 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=85 - null null
2025-06-21 15:21:30.142 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 15:21:30.142 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:30.144 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 15:21:30.145 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 15:21:30.145 +04:00 [INF] Watchlist with Id 85 successfully deleted by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 15:21:30.145 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:30.145 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.4807ms
2025-06-21 15:21:30.145 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 15:21:30.145 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=85 - 200 null application/json; charset=utf-8 4.0393ms
2025-06-21 15:21:33.250 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=79 - null null
2025-06-21 15:21:33.250 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 15:21:33.250 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:33.252 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 15:21:33.254 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 15:21:33.254 +04:00 [INF] Watchlist with Id 79 successfully deleted by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 15:21:33.254 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:33.254 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.4976ms
2025-06-21 15:21:33.254 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 15:21:33.254 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=79 - 200 null application/json; charset=utf-8 4.092ms
2025-06-21 15:21:38.264 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=82 - null null
2025-06-21 15:21:38.264 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 15:21:38.265 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 15:21:38.267 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 15:21:38.269 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 15:21:38.269 +04:00 [INF] Watchlist with Id 82 successfully deleted by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 15:21:38.269 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 15:21:38.269 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 4.5702ms
2025-06-21 15:21:38.269 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 15:21:38.269 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=82 - 200 null application/json; charset=utf-8 5.5539ms
2025-06-21 15:23:03.991 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/api/account/ConfirmEmail?userId=fe6c9a5a-f5de-4136-97a2-0a4db1d26911&token=CfDJ8NF6%2bLRN1u5CkzaWnaq0AwUgJk0%2b6jaloVeF9KetWgUVRtBgJKUjpMx7Fmk4DyKemEtGOGtkzg81ImVGxu4aha0yEUKni%2f7JKxfvMAVUNsIJHomObZQzz04qf%2f3yYXLHG%2f9vh3jpTHcwQKnUmf%2flV0PUPBMJMS9upX%2frcWHSEMWNm4IRUuuf3qsvxRSABz6TQXVNGO0uGE%2fnfAIwjFsdWf8gytVThf4PHtBE%2b%2fNMP6ScJtDW%2fwDGeLJmXXVNH4D6sQ%3d%3d - null null
2025-06-21 15:23:03.999 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.ConfirmEmail (CinelogAPI)'
2025-06-21 15:23:04.005 +04:00 [INF] Route matched with {action = "ConfirmEmail", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ConfirmEmail(System.String, System.String) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-21 15:23:04.043 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-06-21 15:23:04.050 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-21 15:23:04.055 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p17='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [Age] = @p1, [ConcurrencyStamp] = @p2, [Email] = @p3, [EmailConfirmed] = @p4, [FullName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
2025-06-21 15:23:04.056 +04:00 [INF] User fe6c9a5a-f5de-4136-97a2-0a4db1d26911 successfully confirmed their email.
2025-06-21 15:23:04.062 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-06-21 15:23:04.063 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.ConfirmEmail (CinelogAPI) in 57.7287ms
2025-06-21 15:23:04.063 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.ConfirmEmail (CinelogAPI)'
2025-06-21 15:23:04.063 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/api/account/ConfirmEmail?userId=fe6c9a5a-f5de-4136-97a2-0a4db1d26911&token=CfDJ8NF6%2bLRN1u5CkzaWnaq0AwUgJk0%2b6jaloVeF9KetWgUVRtBgJKUjpMx7Fmk4DyKemEtGOGtkzg81ImVGxu4aha0yEUKni%2f7JKxfvMAVUNsIJHomObZQzz04qf%2f3yYXLHG%2f9vh3jpTHcwQKnUmf%2flV0PUPBMJMS9upX%2frcWHSEMWNm4IRUuuf3qsvxRSABz6TQXVNGO0uGE%2fnfAIwjFsdWf8gytVThf4PHtBE%2b%2fNMP6ScJtDW%2fwDGeLJmXXVNH4D6sQ%3d%3d - 200 null text/plain; charset=utf-8 71.9491ms
2025-06-21 15:23:04.544 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/favicon.ico - null null
2025-06-21 15:23:04.547 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/favicon.ico - 404 0 null 2.3838ms
2025-06-21 15:23:04.547 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/favicon.ico, Response status code: 404
2025-06-21 15:43:22.652 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 15:43:22.653 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:43:22.653 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 15:43:22.741 +04:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 15:43:22.745 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 15:43:22.745 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 92.2448ms
2025-06-21 15:43:22.745 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 15:43:22.745 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 92.7043ms
2025-06-21 15:43:22.747 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 15:43:22.747 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3063ms
2025-06-21 15:43:22.747 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 17:59:17.293 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 17:59:17.396 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 102.6251ms
2025-06-21 17:59:17.897 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 17:59:17.904 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 6.6673ms
2025-06-21 17:59:17.905 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 17:59:17.927 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.6593ms
2025-06-21 17:59:18.257 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 17:59:18.385 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 127.4402ms
2025-06-21 17:59:18.989 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 17:59:18.992 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 17:59:18.992 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 17:59:19.253 +04:00 [INF] Executed DbCommand (87ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 17:59:19.287 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 17:59:19.290 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 297.0709ms
2025-06-21 17:59:19.290 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 17:59:19.290 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 301.1075ms
2025-06-21 17:59:19.314 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 17:59:19.319 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 4.783ms
2025-06-21 17:59:19.319 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 17:59:19.531 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-21 17:59:19.532 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-21 17:59:19.534 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-21 17:59:19.535 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 2.4513ms
2025-06-21 17:59:19.535 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-21 17:59:19.535 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 4.1408ms
2025-06-21 17:59:19.841 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-21 17:59:19.841 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-21 17:59:19.841 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-21 17:59:19.842 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-21 17:59:19.842 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-21 17:59:19.842 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 0.6857ms
2025-06-21 17:59:19.842 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 0.7409ms
2025-06-21 17:59:19.843 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-21 17:59:19.843 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 1.4216ms
2025-06-21 17:59:19.940 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-21 17:59:19.940 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-21 17:59:19.940 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 0.4975ms
2025-06-21 17:59:19.943 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-21 17:59:19.943 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-21 17:59:19.943 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 0.5921ms
2025-06-21 17:59:20.025 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-21 17:59:20.025 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-21 17:59:20.026 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-21 17:59:20.026 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-21 17:59:20.026 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-21 17:59:20.026 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 0.5399ms
2025-06-21 17:59:20.026 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 0.3164ms
2025-06-21 17:59:20.026 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-21 17:59:20.026 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.4184ms
2025-06-21 18:00:02.676 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 18:00:02.802 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 18:00:02.803 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 18:00:02.865 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 18:00:02.865 +04:00 [INF] Hosting environment: Development
2025-06-21 18:00:02.865 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 18:00:02.908 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 18:00:02.956 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 18:00:02.973 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:00:03.150 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 18:00:03.251 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 101.0204ms
2025-06-21 18:00:03.283 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 18:00:03.288 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 5.0154ms
2025-06-21 18:00:03.480 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 18:00:03.501 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.0591ms
2025-06-21 18:00:03.839 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 18:00:03.873 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.4309ms
2025-06-21 18:00:04.294 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 18:00:04.597 +04:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 18:00:04.844 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:00:04.864 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1887.6054ms
2025-06-21 18:00:04.864 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 18:00:04.869 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1961.9822ms
2025-06-21 18:00:04.874 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 18:00:04.911 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 36.3985ms
2025-06-21 18:00:04.911 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 18:00:26.260 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:00:26.264 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:00:26.273 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:00:26.335 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 18:00:26.336 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 18:00:26.374 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 18:00:26.435 +04:00 [INF] Executed DbCommand (49ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:00:26.474 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:00:26.476 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:00:26.479 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 206.1507ms
2025-06-21 18:00:26.479 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:00:26.480 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 219.4313ms
2025-06-21 18:18:05.612 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 18:18:05.776 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 18:18:05.776 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 18:18:05.854 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 18:18:05.854 +04:00 [INF] Hosting environment: Development
2025-06-21 18:18:05.854 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 18:18:06.450 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 18:18:06.590 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 18:18:06.611 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 161.9551ms
2025-06-21 18:18:06.613 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 18:18:06.634 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 18:18:06.645 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 11.2022ms
2025-06-21 18:18:06.647 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:18:06.917 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 18:18:06.965 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 48.5495ms
2025-06-21 18:18:07.329 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 18:18:07.371 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 41.1503ms
2025-06-21 18:18:08.067 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 18:18:08.416 +04:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 18:18:08.677 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:18:08.693 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2043.1176ms
2025-06-21 18:18:08.693 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 18:18:08.697 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 2107.8793ms
2025-06-21 18:18:08.704 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 18:18:08.733 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 29.4122ms
2025-06-21 18:18:08.734 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 18:18:22.978 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:18:22.982 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:18:22.989 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:18:23.048 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 18:18:23.048 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 18:18:23.085 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 18:18:23.131 +04:00 [INF] Executed DbCommand (34ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:18:23.163 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:18:23.164 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:18:23.167 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 177.5913ms
2025-06-21 18:18:23.167 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:18:23.168 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 189.3093ms
2025-06-21 18:18:31.168 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=2 - null null
2025-06-21 18:18:31.168 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:18:31.168 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:18:31.186 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 18:18:31.186 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 18:18:31.216 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 18:18:31.250 +04:00 [INF] Executed DbCommand (28ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:18:31.255 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:18:31.255 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:18:31.255 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 87.2865ms
2025-06-21 18:18:31.256 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:18:31.256 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=2 - 200 null application/json; charset=utf-8 88.1721ms
2025-06-21 18:18:32.755 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=3 - null null
2025-06-21 18:18:32.755 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:18:32.756 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:18:32.790 +04:00 [INF] Executed DbCommand (30ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:18:32.793 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:18:32.794 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:18:32.794 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 37.9723ms
2025-06-21 18:18:32.794 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:18:32.794 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=3 - 200 null application/json; charset=utf-8 39.2451ms
2025-06-21 18:18:34.013 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=4 - null null
2025-06-21 18:18:34.014 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:18:34.014 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:18:34.053 +04:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:18:34.058 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:18:34.058 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:18:34.059 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 44.4465ms
2025-06-21 18:18:34.059 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:18:34.059 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=4 - 200 null application/json; charset=utf-8 46.4174ms
2025-06-21 18:18:35.809 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:18:35.810 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:18:35.810 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:18:35.842 +04:00 [INF] Executed DbCommand (29ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:18:35.844 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:18:35.845 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:18:35.845 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 35.5484ms
2025-06-21 18:18:35.845 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:18:35.846 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 36.6419ms
2025-06-21 18:19:18.938 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:19:18.939 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:19:18.939 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:19:18.978 +04:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:19:18.982 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:19:18.982 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:19:18.983 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 43.679ms
2025-06-21 18:19:18.983 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:19:18.983 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 44.7204ms
2025-06-21 18:20:55.247 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:20:55.247 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:20:55.247 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:20:55.284 +04:00 [INF] Executed DbCommand (35ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:20:55.288 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:20:55.289 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:20:55.289 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 41.3198ms
2025-06-21 18:20:55.289 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:20:55.289 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 42.025ms
2025-06-21 18:21:25.731 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=2 - null null
2025-06-21 18:21:25.731 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:21:25.731 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:21:25.793 +04:00 [INF] Executed DbCommand (59ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:21:25.796 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:21:25.796 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:21:25.797 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 65.1873ms
2025-06-21 18:21:25.797 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:21:25.797 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=2 - 200 null application/json; charset=utf-8 66.1331ms
2025-06-21 18:21:27.444 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=3 - null null
2025-06-21 18:21:27.444 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:21:27.444 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:21:27.475 +04:00 [INF] Executed DbCommand (29ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:21:27.477 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:21:27.478 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:21:27.478 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 33.3015ms
2025-06-21 18:21:27.478 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:21:27.478 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=3 - 200 null application/json; charset=utf-8 34.0809ms
2025-06-21 18:21:28.520 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=4 - null null
2025-06-21 18:21:28.520 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:21:28.520 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:21:28.548 +04:00 [INF] Executed DbCommand (26ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:21:28.550 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:21:28.550 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:21:28.550 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 30.1547ms
2025-06-21 18:21:28.550 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:21:28.550 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=4 - 200 null application/json; charset=utf-8 30.8801ms
2025-06-21 18:21:29.921 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:21:29.921 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:21:29.921 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:21:29.975 +04:00 [INF] Executed DbCommand (53ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:21:29.977 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:21:29.977 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:21:29.977 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 56.362ms
2025-06-21 18:21:29.978 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:21:29.978 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 56.9548ms
2025-06-21 18:24:37.818 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:24:37.819 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:24:37.819 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:24:37.855 +04:00 [INF] Executed DbCommand (34ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:24:37.857 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:24:37.857 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:24:37.857 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 38.6068ms
2025-06-21 18:24:37.857 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:24:37.857 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 39.3618ms
2025-06-21 18:24:48.268 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:24:48.269 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:24:48.269 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:24:48.298 +04:00 [INF] Executed DbCommand (28ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:24:48.301 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:24:48.301 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:24:48.301 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 31.9643ms
2025-06-21 18:24:48.301 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:24:48.301 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 32.7123ms
2025-06-21 18:25:07.533 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=2 - null null
2025-06-21 18:25:07.534 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:25:07.534 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:25:07.792 +04:00 [INF] Executed DbCommand (256ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:25:07.796 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:25:07.796 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:25:07.796 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 262.4198ms
2025-06-21 18:25:07.796 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:25:07.796 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=2 - 200 null application/json; charset=utf-8 263.2904ms
2025-06-21 18:25:10.123 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=3 - null null
2025-06-21 18:25:10.124 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:25:10.124 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:25:10.949 +04:00 [INF] Executed DbCommand (823ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:25:10.952 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:25:10.953 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:25:10.953 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 828.977ms
2025-06-21 18:25:10.953 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:25:10.953 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=3 - 200 null application/json; charset=utf-8 830.194ms
2025-06-21 18:29:31.971 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=2 - null null
2025-06-21 18:29:31.971 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:29:31.971 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:29:32.014 +04:00 [INF] Executed DbCommand (40ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:29:32.016 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:29:32.017 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:29:32.017 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 45.331ms
2025-06-21 18:29:32.017 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:29:32.017 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=2 - 200 null application/json; charset=utf-8 46.1112ms
2025-06-21 18:29:33.507 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=4 - null null
2025-06-21 18:29:33.508 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:29:33.508 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:29:33.543 +04:00 [INF] Executed DbCommand (32ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:29:33.545 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:29:33.546 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:29:33.546 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 37.732ms
2025-06-21 18:29:33.546 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:29:33.546 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=4 - 200 null application/json; charset=utf-8 38.4999ms
2025-06-21 18:29:34.769 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:29:34.769 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:29:34.769 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:29:34.772 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:29:34.774 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:29:34.774 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:29:34.774 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 4.9985ms
2025-06-21 18:29:34.774 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:29:34.774 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 5.5563ms
2025-06-21 18:38:42.190 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:38:42.191 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:38:42.191 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:38:42.298 +04:00 [INF] Executed DbCommand (50ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:38:42.302 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:38:42.302 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:38:42.303 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 111.8835ms
2025-06-21 18:38:42.303 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:38:42.303 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 112.7009ms
2025-06-21 18:38:53.419 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:38:53.420 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:38:53.420 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:38:53.423 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:38:53.425 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:38:53.425 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:38:53.425 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 5.5163ms
2025-06-21 18:38:53.425 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:38:53.425 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 6.1627ms
2025-06-21 18:38:57.640 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:38:57.641 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:38:57.641 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:38:57.642 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 18:38:57.644 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:38:57.646 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:38:57.646 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:38:57.647 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 5.803ms
2025-06-21 18:38:57.647 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:38:57.647 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 6.5807ms
2025-06-21 18:38:57.653 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 11.257ms
2025-06-21 18:38:57.808 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 18:38:57.809 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.8217ms
2025-06-21 18:38:57.813 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 18:38:57.828 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 15.0378ms
2025-06-21 18:38:58.240 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 18:38:58.262 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 22.4307ms
2025-06-21 18:39:03.370 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:39:03.370 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:39:03.370 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:39:03.373 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 18:39:03.375 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 2.5789ms
2025-06-21 18:39:03.399 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 18:39:03.402 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 18:39:03.403 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.9413ms
2025-06-21 18:39:03.405 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 5.8882ms
2025-06-21 18:39:03.431 +04:00 [INF] Executed DbCommand (59ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:39:03.433 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:39:03.433 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:39:03.433 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 63.0041ms
2025-06-21 18:39:03.433 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:39:03.433 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 63.7766ms
2025-06-21 18:39:03.686 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 18:39:03.705 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 18.726ms
2025-06-21 18:39:35.779 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 18:39:35.913 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 18:39:35.913 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 18:39:35.978 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 18:39:35.979 +04:00 [INF] Hosting environment: Development
2025-06-21 18:39:35.979 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 18:39:36.508 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 18:39:36.626 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 18:39:36.641 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 134.4565ms
2025-06-21 18:39:36.644 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 18:39:36.672 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:39:36.875 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 18:39:36.877 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 18:39:36.879 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.5216ms
2025-06-21 18:39:36.899 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.244ms
2025-06-21 18:39:37.288 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 18:39:37.329 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 41.3138ms
2025-06-21 18:39:37.822 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 18:39:38.081 +04:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 18:39:38.306 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:39:38.323 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1648.2251ms
2025-06-21 18:39:38.323 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 18:39:38.328 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1701.436ms
2025-06-21 18:39:38.334 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 18:39:38.364 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 29.2385ms
2025-06-21 18:39:38.364 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 18:39:48.036 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 18:39:48.040 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:39:48.047 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 18:39:48.104 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 18:39:48.104 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 18:39:48.138 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 18:39:48.185 +04:00 [INF] Executed DbCommand (35ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 18:39:48.215 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 18:39:48.218 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 18:39:48.221 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 174.0918ms
2025-06-21 18:39:48.221 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 18:39:48.222 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 185.9658ms
2025-06-21 21:08:05.948 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 21:08:06.076 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 21:08:06.076 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 21:08:06.133 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 21:08:06.133 +04:00 [INF] Hosting environment: Development
2025-06-21 21:08:06.133 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 21:08:06.633 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 21:08:06.754 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 21:08:06.772 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 139.7272ms
2025-06-21 21:08:06.778 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 21:08:06.788 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 21:08:06.792 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.3353ms
2025-06-21 21:08:06.803 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:08:06.988 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 21:08:07.014 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 25.6195ms
2025-06-21 21:08:07.337 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 21:08:07.376 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 38.6619ms
2025-06-21 21:08:08.032 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 21:08:08.408 +04:00 [INF] Executed DbCommand (82ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 21:08:08.638 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:08:08.655 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1848.8089ms
2025-06-21 21:08:08.655 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 21:08:08.659 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1905.5037ms
2025-06-21 21:08:08.664 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 21:08:08.695 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 30.7521ms
2025-06-21 21:08:08.695 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 21:08:08.960 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-21 21:08:08.962 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-21 21:08:08.962 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-21 21:08:08.963 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-21 21:08:08.963 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-21 21:08:08.963 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-21 21:08:08.964 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-21 21:08:08.969 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-21 21:08:08.969 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-21 21:08:08.969 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-21 21:08:08.969 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-21 21:08:08.969 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-21 21:08:08.969 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-21 21:08:08.969 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 8.928ms
2025-06-21 21:08:08.969 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 5.3649ms
2025-06-21 21:08:08.969 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-21 21:08:08.969 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 6.1753ms
2025-06-21 21:08:08.969 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 6.4947ms
2025-06-21 21:08:08.969 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 6.44ms
2025-06-21 21:08:08.969 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 7.058ms
2025-06-21 21:08:08.970 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 8.0288ms
2025-06-21 21:08:08.976 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-21 21:08:08.976 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-21 21:08:08.976 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-21 21:08:08.976 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-21 21:08:08.976 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 0.8412ms
2025-06-21 21:08:08.976 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.6842ms
2025-06-21 21:08:08.976 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-21 21:08:08.977 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-21 21:08:08.977 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 1.0754ms
2025-06-21 21:08:15.177 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:08:15.180 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:08:15.191 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:08:15.265 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 21:08:15.265 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 21:08:15.306 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 21:08:15.363 +04:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:08:15.404 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:08:15.406 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:08:15.409 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 218.375ms
2025-06-21 21:08:15.409 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:08:15.409 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 232.6443ms
2025-06-21 21:11:49.135 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:11:49.136 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:11:49.136 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:11:49.187 +04:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:11:49.191 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:11:49.191 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:11:49.192 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 55.3865ms
2025-06-21 21:11:49.192 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:11:49.192 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 56.3873ms
2025-06-21 21:14:07.691 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=2 - null null
2025-06-21 21:14:07.691 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:14:07.691 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:14:07.695 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 21:14:07.695 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 21:14:07.723 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 21:14:07.763 +04:00 [INF] Executed DbCommand (35ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:14:07.766 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:14:07.767 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:14:07.767 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 75.7499ms
2025-06-21 21:14:07.767 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:14:07.767 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=2 - 200 null application/json; charset=utf-8 76.7049ms
2025-06-21 21:14:08.400 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=3 - null null
2025-06-21 21:14:08.401 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:14:08.401 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:14:08.425 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:14:08.428 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:14:08.428 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:14:08.428 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 26.9026ms
2025-06-21 21:14:08.428 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:14:08.428 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=3 - 200 null application/json; charset=utf-8 27.814ms
2025-06-21 21:14:08.981 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=4 - null null
2025-06-21 21:14:08.981 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:14:08.982 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:14:08.985 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:14:08.986 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:14:08.987 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:14:08.987 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 5.0907ms
2025-06-21 21:14:08.987 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:14:08.987 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=4 - 200 null application/json; charset=utf-8 6.2802ms
2025-06-21 21:14:10.143 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:14:10.143 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:14:10.143 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:14:10.147 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:14:10.149 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:14:10.149 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:14:10.149 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 5.8368ms
2025-06-21 21:14:10.149 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:14:10.149 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 6.5729ms
2025-06-21 21:17:15.283 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:17:15.283 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:17:15.283 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:17:15.363 +04:00 [INF] Executed DbCommand (78ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:17:15.370 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:17:15.371 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:17:15.371 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 87.6316ms
2025-06-21 21:17:15.371 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:17:15.371 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 88.5492ms
2025-06-21 21:17:25.237 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 21:17:25.239 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 21:17:25.242 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 21:17:25.281 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 21:17:25.298 +04:00 [INF] Retrieved 6 watchlists for user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 21:17:25.302 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:17:25.308 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 65.8226ms
2025-06-21 21:17:25.308 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 21:17:25.308 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 70.7528ms
2025-06-21 21:17:28.955 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=77 - null null
2025-06-21 21:17:28.956 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 21:17:28.958 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 21:17:28.979 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 21:17:29.066 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 21:17:29.075 +04:00 [INF] Watchlist with Id 77 successfully deleted by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 21:17:29.075 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 21:17:29.077 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 118.2861ms
2025-06-21 21:17:29.077 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 21:17:29.077 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=77 - 200 null application/json; charset=utf-8 121.8731ms
2025-06-21 21:17:30.504 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=78 - null null
2025-06-21 21:17:30.505 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 21:17:30.505 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 21:17:30.507 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 21:17:30.510 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 21:17:30.510 +04:00 [INF] Watchlist with Id 78 successfully deleted by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 21:17:30.510 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 21:17:30.510 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 5.7816ms
2025-06-21 21:17:30.511 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 21:17:30.511 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=78 - 200 null application/json; charset=utf-8 6.7372ms
2025-06-21 21:17:32.488 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=80 - null null
2025-06-21 21:17:32.489 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 21:17:32.489 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 21:17:32.491 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 21:17:32.492 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 21:17:32.493 +04:00 [INF] Watchlist with Id 80 successfully deleted by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 21:17:32.493 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 21:17:32.493 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 4.4099ms
2025-06-21 21:17:32.493 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 21:17:32.494 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=80 - 200 null application/json; charset=utf-8 5.3345ms
2025-06-21 21:17:34.441 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=81 - null null
2025-06-21 21:17:34.441 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 21:17:34.441 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 21:17:34.443 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 21:17:34.444 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 21:17:34.445 +04:00 [INF] Watchlist with Id 81 successfully deleted by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 21:17:34.445 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 21:17:34.445 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.8041ms
2025-06-21 21:17:34.445 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 21:17:34.445 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=81 - 200 null application/json; charset=utf-8 4.4997ms
2025-06-21 21:17:36.649 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=83 - null null
2025-06-21 21:17:36.650 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 21:17:36.650 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 21:17:36.652 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 21:17:36.653 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 21:17:36.654 +04:00 [INF] Watchlist with Id 83 successfully deleted by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 21:17:36.654 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 21:17:36.654 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 4.7268ms
2025-06-21 21:17:36.654 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 21:17:36.655 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=83 - 200 null application/json; charset=utf-8 5.3631ms
2025-06-21 21:17:39.563 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=84 - null null
2025-06-21 21:17:39.564 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 21:17:39.564 +04:00 [INF] Route matched with {action = "Delete", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 21:17:39.566 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[Id] = @__id_0
2025-06-21 21:17:39.567 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Watchlists]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-21 21:17:39.567 +04:00 [INF] Watchlist with Id 84 successfully deleted by user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 21:17:39.567 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-21 21:17:39.567 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI) in 3.4638ms
2025-06-21 21:17:39.567 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Delete (CinelogAPI)'
2025-06-21 21:17:39.568 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Watchlist/Delete?id=84 - 200 null application/json; charset=utf-8 4.2636ms
2025-06-21 21:18:01.591 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:18:01.592 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:18:01.592 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:18:01.632 +04:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:18:01.635 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:18:01.635 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:18:01.635 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 43.3624ms
2025-06-21 21:18:01.635 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:18:01.635 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 44.5182ms
2025-06-21 21:18:07.854 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-21 21:18:07.854 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 21:18:07.854 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-21 21:18:07.858 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-21 21:18:07.858 +04:00 [INF] No watchlists found for user fe6c9a5a-f5de-4136-97a2-0a4db1d26911
2025-06-21 21:18:07.858 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.EmptyPartition`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:18:07.859 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 4.7981ms
2025-06-21 21:18:07.859 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-21 21:18:07.859 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 5.6399ms
2025-06-21 21:18:14.346 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=2 - null null
2025-06-21 21:18:14.347 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:18:14.347 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:18:14.371 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:18:14.373 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:18:14.373 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:18:14.374 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 26.6157ms
2025-06-21 21:18:14.374 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:18:14.374 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=2 - 200 null application/json; charset=utf-8 27.4488ms
2025-06-21 21:18:15.573 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:18:15.574 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:18:15.574 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:18:15.577 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:18:15.579 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:18:15.579 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:18:15.579 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 5.3517ms
2025-06-21 21:18:15.579 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:18:15.579 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 5.9877ms
2025-06-21 21:19:21.403 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:19:21.403 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:19:21.403 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:19:21.440 +04:00 [INF] Executed DbCommand (35ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:19:21.442 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:19:21.442 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:19:21.443 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 39.1281ms
2025-06-21 21:19:21.443 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:19:21.443 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 39.7755ms
2025-06-21 21:19:34.694 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 21:19:34.812 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 21:19:34.812 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 21:19:34.866 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 21:19:34.866 +04:00 [INF] Hosting environment: Development
2025-06-21 21:19:34.867 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 21:19:35.141 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 21:19:35.235 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 21:19:35.248 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 21:19:35.261 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 120.0023ms
2025-06-21 21:19:35.265 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:19:35.272 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 21:19:35.276 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.8609ms
2025-06-21 21:19:35.462 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 21:19:35.483 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.1369ms
2025-06-21 21:19:35.793 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 21:19:35.840 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 46.671ms
2025-06-21 21:19:36.372 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 21:19:36.611 +04:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 21:19:36.820 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:19:36.834 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1566.3648ms
2025-06-21 21:19:36.834 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 21:19:36.839 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1604.5934ms
2025-06-21 21:19:36.845 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 21:19:36.873 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 27.8253ms
2025-06-21 21:19:36.873 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 21:19:43.439 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:19:43.444 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:19:43.450 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:19:43.504 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 21:19:43.504 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 21:19:43.537 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 21:19:43.581 +04:00 [INF] Executed DbCommand (32ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:19:43.613 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:19:43.615 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:19:43.617 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 166.9623ms
2025-06-21 21:19:43.617 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:19:43.617 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 177.9023ms
2025-06-21 21:19:50.012 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:19:50.012 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:19:50.013 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:19:50.030 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:19:50.039 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:19:50.039 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:19:50.040 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 27.2575ms
2025-06-21 21:19:50.040 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:19:50.040 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 28.6988ms
2025-06-21 21:20:57.551 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:20:57.551 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:20:57.551 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:20:57.602 +04:00 [INF] Executed DbCommand (49ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:20:57.611 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:20:57.611 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:20:57.612 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 60.2373ms
2025-06-21 21:20:57.612 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:20:57.612 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 61.3136ms
2025-06-21 21:21:58.002 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:21:58.002 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:21:58.002 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:21:58.040 +04:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:21:58.045 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:21:58.045 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:21:58.045 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 43.1659ms
2025-06-21 21:21:58.045 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:21:58.046 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 43.9829ms
2025-06-21 21:22:00.437 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:22:00.437 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:22:00.437 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:22:00.440 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:22:00.442 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:22:00.442 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:22:00.443 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 5.3027ms
2025-06-21 21:22:00.443 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:22:00.443 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 6.0744ms
2025-06-21 21:22:07.958 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:22:07.959 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:22:07.959 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:22:07.963 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:22:07.967 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:22:07.967 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:22:07.967 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 8.0452ms
2025-06-21 21:22:07.967 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:22:07.967 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 8.8522ms
2025-06-21 21:25:07.408 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:25:07.408 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:25:07.408 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:25:07.453 +04:00 [INF] Executed DbCommand (44ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:25:07.457 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:25:07.457 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:25:07.458 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 49.4852ms
2025-06-21 21:25:07.458 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:25:07.458 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 50.3639ms
2025-06-21 21:25:14.267 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:25:14.268 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:25:14.268 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:25:14.271 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:25:14.274 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:25:14.274 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:25:14.274 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 6.1109ms
2025-06-21 21:25:14.274 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:25:14.274 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 6.8164ms
2025-06-21 21:26:19.491 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 21:26:19.634 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 21:26:19.635 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 21:26:19.695 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 21:26:19.695 +04:00 [INF] Hosting environment: Development
2025-06-21 21:26:19.695 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 21:26:20.316 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 21:26:20.414 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 21:26:20.427 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 21:26:20.441 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 126.942ms
2025-06-21 21:26:20.443 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:26:20.456 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 21:26:20.460 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.8174ms
2025-06-21 21:26:20.644 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 21:26:20.666 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.5697ms
2025-06-21 21:26:20.957 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 21:26:20.992 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.803ms
2025-06-21 21:26:21.486 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 21:26:21.735 +04:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 21:26:21.951 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:26:21.964 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1519.1046ms
2025-06-21 21:26:21.965 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 21:26:21.969 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1554.7438ms
2025-06-21 21:26:21.975 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 21:26:22.003 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 28.5766ms
2025-06-21 21:26:22.004 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 21:26:29.021 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:26:29.025 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:26:29.032 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:26:29.085 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 21:26:29.085 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 21:26:29.119 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 21:26:29.160 +04:00 [INF] Executed DbCommand (30ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:26:29.194 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:26:29.196 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:26:29.198 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 166.5031ms
2025-06-21 21:26:29.199 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:26:29.199 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 177.9651ms
2025-06-21 21:29:52.023 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:29:52.024 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:29:52.024 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:29:52.073 +04:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:29:52.080 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:29:52.080 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:29:52.081 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 56.9944ms
2025-06-21 21:29:52.081 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:29:52.081 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 58.0128ms
2025-06-21 21:38:38.482 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 21:38:38.618 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 21:38:38.618 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 21:38:38.679 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 21:38:38.680 +04:00 [INF] Hosting environment: Development
2025-06-21 21:38:38.680 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 21:38:39.181 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 21:38:39.294 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 21:38:39.310 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 131.5627ms
2025-06-21 21:38:39.311 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 21:38:39.327 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 21:38:39.331 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.7289ms
2025-06-21 21:38:39.334 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:38:39.512 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 21:38:39.533 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.5492ms
2025-06-21 21:38:39.824 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 21:38:39.859 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.2825ms
2025-06-21 21:38:40.380 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 21:38:40.617 +04:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 21:38:40.823 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:38:40.836 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1500.1452ms
2025-06-21 21:38:40.836 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 21:38:40.840 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1546.2439ms
2025-06-21 21:38:40.847 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 21:38:40.874 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 26.2502ms
2025-06-21 21:38:40.874 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 21:38:49.578 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:38:49.582 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:38:49.590 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:38:49.640 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 21:38:49.640 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 21:38:49.671 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 21:38:49.713 +04:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:38:49.747 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:38:49.748 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:38:49.751 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 160.925ms
2025-06-21 21:38:49.751 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:38:49.751 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 173.0296ms
2025-06-21 21:41:15.189 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 21:41:15.331 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 21:41:15.331 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 21:41:15.390 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 21:41:15.391 +04:00 [INF] Hosting environment: Development
2025-06-21 21:41:15.391 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 21:41:15.724 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 21:41:15.834 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 111.5055ms
2025-06-21 21:41:15.834 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:41:15.894 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:41:15.910 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:41:15.922 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 21:41:15.923 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 21:41:15.926 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.3788ms
2025-06-21 21:41:15.943 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.1085ms
2025-06-21 21:41:16.228 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 21:41:16.252 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 23.738ms
2025-06-21 21:41:16.822 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 21:41:16.822 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 21:41:16.949 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 21:41:17.186 +04:00 [INF] Executed DbCommand (59ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:41:17.423 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:41:17.428 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:41:17.444 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 1530.7539ms
2025-06-21 21:41:17.444 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:41:17.448 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 1613.6913ms
2025-06-21 21:45:22.998 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:45:23.002 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:45:23.002 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:45:23.080 +04:00 [INF] Executed DbCommand (35ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:45:23.086 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:45:23.087 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:45:23.088 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 85.2462ms
2025-06-21 21:45:23.088 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:45:23.088 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 90.2306ms
2025-06-21 21:45:29.083 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 21:45:29.084 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:45:29.084 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 21:45:29.097 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 21:45:29.104 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 21:45:29.105 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 21:45:29.105 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 20.5185ms
2025-06-21 21:45:29.105 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 21:45:29.105 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 22.7013ms
2025-06-21 22:03:25.280 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 22:03:25.280 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:03:25.281 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:03:25.366 +04:00 [INF] Executed DbCommand (40ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 22:03:25.370 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 22:03:25.371 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:03:25.371 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 90.2839ms
2025-06-21 22:03:25.371 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:03:25.371 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 91.4249ms
2025-06-21 22:03:25.398 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:03:25.399 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:03:25.404 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:03:25.431 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 22:03:25.445 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:03:25.473 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:03:25.476 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 72.4499ms
2025-06-21 22:03:25.476 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:03:25.477 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 79.1259ms
2025-06-21 22:25:08.307 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 22:25:08.308 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:25:08.308 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:25:08.405 +04:00 [INF] Executed DbCommand (43ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 22:25:08.409 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 22:25:08.410 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:25:08.410 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 101.5664ms
2025-06-21 22:25:08.410 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:25:08.410 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 103.5096ms
2025-06-21 22:25:08.422 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:25:08.423 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:25:08.423 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:25:08.435 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:25:08.436 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:25:08.437 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 13.255ms
2025-06-21 22:25:08.437 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:25:08.437 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 14.8749ms
2025-06-21 22:25:25.504 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 22:25:25.505 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:25:25.505 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:25:25.509 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 22:25:25.513 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 22:25:25.513 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:25:25.513 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 22:25:25.514 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 8.5477ms
2025-06-21 22:25:25.514 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:25:25.514 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 9.5053ms
2025-06-21 22:25:25.515 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:25:25.515 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:25:25.515 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:25:25.518 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:25:25.519 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:25:25.520 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 4.0959ms
2025-06-21 22:25:25.520 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:25:25.520 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 5.0357ms
2025-06-21 22:25:25.523 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 9.9897ms
2025-06-21 22:25:25.638 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 22:25:25.639 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.8914ms
2025-06-21 22:25:25.642 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 22:25:25.652 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 10.0888ms
2025-06-21 22:25:25.942 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 22:25:25.964 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 22.156ms
2025-06-21 22:25:43.310 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 22:25:43.452 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 22:25:43.453 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 22:25:43.515 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 22:25:43.516 +04:00 [INF] Hosting environment: Development
2025-06-21 22:25:43.516 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 22:25:43.977 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 22:25:44.092 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 22:25:44.108 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 22:25:44.114 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 137.7478ms
2025-06-21 22:25:44.128 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 22:25:44.130 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:25:44.134 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 5.263ms
2025-06-21 22:25:44.331 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 22:25:44.353 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.753ms
2025-06-21 22:25:44.749 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 22:25:44.797 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 47.1393ms
2025-06-21 22:25:45.293 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 22:25:45.543 +04:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:25:45.804 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:25:45.818 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1685.5892ms
2025-06-21 22:25:45.819 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 22:25:45.823 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1731.3353ms
2025-06-21 22:25:45.830 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 22:25:45.860 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 29.9487ms
2025-06-21 22:25:45.860 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 22:25:56.202 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 22:25:56.208 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:25:56.214 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:25:56.275 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 22:25:56.276 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 22:25:56.313 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 22:25:56.354 +04:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 22:25:56.389 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 22:25:56.391 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:25:56.395 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 180.7067ms
2025-06-21 22:25:56.395 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:25:56.396 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 193.8841ms
2025-06-21 22:25:56.400 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:25:56.400 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:25:56.403 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:25:56.429 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 22:25:56.443 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:25:56.471 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:25:56.474 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 71.356ms
2025-06-21 22:25:56.474 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:25:56.474 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 74.8091ms
2025-06-21 22:26:05.164 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 22:26:05.165 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:26:05.165 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:26:05.175 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 22:26:05.184 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 22:26:05.184 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:26:05.185 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 19.5093ms
2025-06-21 22:26:05.185 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:26:05.185 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 20.6842ms
2025-06-21 22:26:05.186 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:26:05.188 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:26:05.188 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:26:05.190 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:26:05.192 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:26:05.192 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 4.439ms
2025-06-21 22:26:05.193 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:26:05.193 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 6.9231ms
2025-06-21 22:26:38.779 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 22:26:38.780 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:26:38.780 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:26:38.784 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 22:26:38.788 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 22:26:38.788 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:26:38.788 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 8.5817ms
2025-06-21 22:26:38.789 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:26:38.789 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 9.4712ms
2025-06-21 22:26:38.789 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:26:38.790 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:26:38.790 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:26:38.793 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:26:38.794 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:26:38.794 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 4.1827ms
2025-06-21 22:26:38.794 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:26:38.794 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 5.0162ms
2025-06-21 22:26:42.145 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 22:26:42.146 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:26:42.146 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:26:42.184 +04:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 22:26:42.188 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 22:26:42.189 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:26:42.189 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 42.7937ms
2025-06-21 22:26:42.189 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:26:42.189 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 43.7539ms
2025-06-21 22:26:42.190 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:26:42.191 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:26:42.191 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:26:42.201 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:26:42.202 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:26:42.203 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 11.7648ms
2025-06-21 22:26:42.203 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:26:42.203 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 12.4348ms
2025-06-21 22:26:46.480 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 22:26:46.480 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:26:46.480 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:26:46.521 +04:00 [INF] Executed DbCommand (39ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 22:26:46.525 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 22:26:46.525 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:26:46.525 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 45.0373ms
2025-06-21 22:26:46.525 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:26:46.525 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 45.7146ms
2025-06-21 22:26:46.526 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:26:46.527 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:26:46.527 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:26:46.539 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:26:46.540 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:26:46.540 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 13.3167ms
2025-06-21 22:26:46.540 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:26:46.540 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 14.0449ms
2025-06-21 22:50:17.391 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 22:50:17.392 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:50:17.392 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:50:17.496 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 22:50:17.501 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 22:50:17.502 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:50:17.502 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 109.671ms
2025-06-21 22:50:17.502 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:50:17.502 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 110.672ms
2025-06-21 22:50:17.505 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:50:17.505 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:50:17.505 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:50:17.517 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:50:17.518 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:50:17.518 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 12.9163ms
2025-06-21 22:50:17.518 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:50:17.518 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 13.45ms
2025-06-21 22:50:26.588 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 22:50:26.589 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:50:26.589 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:50:26.593 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 22:50:26.596 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 22:50:26.597 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:50:26.597 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 7.7233ms
2025-06-21 22:50:26.597 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:50:26.597 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 8.5834ms
2025-06-21 22:50:26.609 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:50:26.609 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:50:26.609 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:50:26.610 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:50:26.611 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:50:26.611 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.0406ms
2025-06-21 22:50:26.611 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:50:26.611 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 2.691ms
2025-06-21 22:53:01.230 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetByGenreId/5 - null null
2025-06-21 22:53:01.233 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI)'
2025-06-21 22:53:01.246 +04:00 [INF] Route matched with {action = "GetByGenreId", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetByGenreId(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:53:01.362 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 22:53:01.454 +04:00 [INF] Executed DbCommand (74ms) [Parameters=[@__genreId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g] ON [m1].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    WHERE [m].[Id] = [m0].[MovieId] AND [m0].[GenreId] = @__genreId_0)
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:53:01.458 +04:00 [INF] 10 movie(s) found for genre Id: 5
2025-06-21 22:53:01.458 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:53:01.459 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI) in 212.6605ms
2025-06-21 22:53:01.459 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI)'
2025-06-21 22:53:01.459 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetByGenreId/5 - 200 null application/json; charset=utf-8 229.0985ms
2025-06-21 22:53:01.465 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:53:01.466 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:53:01.466 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:53:01.483 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:53:01.484 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:53:01.485 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 18.4486ms
2025-06-21 22:53:01.485 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:53:01.485 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 19.622ms
2025-06-21 22:53:07.831 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetByGenreId/5 - null null
2025-06-21 22:53:07.831 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI)'
2025-06-21 22:53:07.831 +04:00 [INF] Route matched with {action = "GetByGenreId", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetByGenreId(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:53:07.917 +04:00 [INF] Executed DbCommand (83ms) [Parameters=[@__genreId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g] ON [m1].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    WHERE [m].[Id] = [m0].[MovieId] AND [m0].[GenreId] = @__genreId_0)
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:53:07.920 +04:00 [INF] 10 movie(s) found for genre Id: 5
2025-06-21 22:53:07.920 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:53:07.921 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI) in 89.3742ms
2025-06-21 22:53:07.921 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI)'
2025-06-21 22:53:07.921 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetByGenreId/5 - 200 null application/json; charset=utf-8 90.1173ms
2025-06-21 22:53:07.922 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:53:07.923 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:53:07.923 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:53:07.954 +04:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:53:07.955 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:53:07.955 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 32.0199ms
2025-06-21 22:53:07.955 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:53:07.955 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 32.692ms
2025-06-21 22:53:11.448 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetByGenreId/6 - null null
2025-06-21 22:53:11.449 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI)'
2025-06-21 22:53:11.449 +04:00 [INF] Route matched with {action = "GetByGenreId", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetByGenreId(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:53:11.520 +04:00 [INF] Executed DbCommand (68ms) [Parameters=[@__genreId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g] ON [m1].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    WHERE [m].[Id] = [m0].[MovieId] AND [m0].[GenreId] = @__genreId_0)
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:53:11.520 +04:00 [INF] No movies found for genre Id: 6
2025-06-21 22:53:11.520 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:53:11.520 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI) in 71.1099ms
2025-06-21 22:53:11.520 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI)'
2025-06-21 22:53:11.520 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetByGenreId/6 - 200 null application/json; charset=utf-8 72.3973ms
2025-06-21 22:53:11.522 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:53:11.523 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:53:11.523 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:53:11.541 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:53:11.542 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:53:11.543 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 19.8577ms
2025-06-21 22:53:11.543 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:53:11.543 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 21.0485ms
2025-06-21 22:53:15.110 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetByGenreId/8 - null null
2025-06-21 22:53:15.111 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI)'
2025-06-21 22:53:15.111 +04:00 [INF] Route matched with {action = "GetByGenreId", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetByGenreId(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:53:15.115 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__genreId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g] ON [m1].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    WHERE [m].[Id] = [m0].[MovieId] AND [m0].[GenreId] = @__genreId_0)
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:53:15.116 +04:00 [INF] No movies found for genre Id: 8
2025-06-21 22:53:15.116 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:53:15.116 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI) in 5.2358ms
2025-06-21 22:53:15.116 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI)'
2025-06-21 22:53:15.117 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetByGenreId/8 - 200 null application/json; charset=utf-8 6.3899ms
2025-06-21 22:53:15.118 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:53:15.119 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:53:15.119 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:53:15.122 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:53:15.123 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:53:15.123 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 4.0143ms
2025-06-21 22:53:15.124 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:53:15.124 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 5.4601ms
2025-06-21 22:53:52.265 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 22:53:52.266 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:53:52.266 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:53:52.321 +04:00 [INF] Executed DbCommand (52ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 22:53:52.328 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 22:53:52.328 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:53:52.329 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 62.4246ms
2025-06-21 22:53:52.329 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 22:53:52.329 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 63.4273ms
2025-06-21 22:53:52.332 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:53:52.332 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:53:52.332 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:53:52.336 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:53:52.338 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:53:52.338 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 5.3948ms
2025-06-21 22:53:52.338 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:53:52.338 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 6.2077ms
2025-06-21 22:54:01.078 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/FilterByReleaseYear?year=2023 - null null
2025-06-21 22:54:01.079 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.FilterByReleaseYear (CinelogAPI)'
2025-06-21 22:54:01.085 +04:00 [INF] Route matched with {action = "FilterByReleaseYear", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FilterByReleaseYear(System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:54:01.136 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 22:54:01.177 +04:00 [INF] Executed DbCommand (30ms) [Parameters=[@__year_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN [Comments] AS [c] ON [m].[Id] = [c].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE DATEPART(year, [m].[ReleaseDate]) = @__year_0
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [c].[Id]
2025-06-21 22:54:01.177 +04:00 [INF] No movies found for the year: 2023
2025-06-21 22:54:01.178 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:54:01.178 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.FilterByReleaseYear (CinelogAPI) in 92.9826ms
2025-06-21 22:54:01.178 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.FilterByReleaseYear (CinelogAPI)'
2025-06-21 22:54:01.178 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/FilterByReleaseYear?year=2023 - 200 null application/json; charset=utf-8 99.9407ms
2025-06-21 22:54:01.178 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:54:01.179 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:54:01.179 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:54:01.180 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:54:01.181 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:54:01.181 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.2836ms
2025-06-21 22:54:01.181 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:54:01.181 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 2.8416ms
2025-06-21 22:54:11.378 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/FilterByReleaseYear?year=2008 - null null
2025-06-21 22:54:11.379 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.FilterByReleaseYear (CinelogAPI)'
2025-06-21 22:54:11.379 +04:00 [INF] Route matched with {action = "FilterByReleaseYear", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FilterByReleaseYear(System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:54:11.446 +04:00 [INF] Executed DbCommand (65ms) [Parameters=[@__year_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN [Comments] AS [c] ON [m].[Id] = [c].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE DATEPART(year, [m].[ReleaseDate]) = @__year_0
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [c].[Id]
2025-06-21 22:54:11.446 +04:00 [INF] 1 movie(s) found for the year: 2008
2025-06-21 22:54:11.447 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:54:11.448 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.FilterByReleaseYear (CinelogAPI) in 68.6067ms
2025-06-21 22:54:11.448 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.FilterByReleaseYear (CinelogAPI)'
2025-06-21 22:54:11.448 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/FilterByReleaseYear?year=2008 - 200 null application/json; charset=utf-8 70.1215ms
2025-06-21 22:54:11.450 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:54:11.451 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:54:11.451 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:54:11.469 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:54:11.470 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:54:11.470 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 18.7938ms
2025-06-21 22:54:11.470 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:54:11.470 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 19.7252ms
2025-06-21 22:54:19.827 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetByGenreId/5 - null null
2025-06-21 22:54:19.827 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI)'
2025-06-21 22:54:19.827 +04:00 [INF] Route matched with {action = "GetByGenreId", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetByGenreId(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:54:19.880 +04:00 [INF] Executed DbCommand (51ms) [Parameters=[@__genreId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g] ON [m1].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    WHERE [m].[Id] = [m0].[MovieId] AND [m0].[GenreId] = @__genreId_0)
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:54:19.883 +04:00 [INF] 10 movie(s) found for genre Id: 5
2025-06-21 22:54:19.883 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:54:19.883 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI) in 55.811ms
2025-06-21 22:54:19.883 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetByGenreId (CinelogAPI)'
2025-06-21 22:54:19.884 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetByGenreId/5 - 200 null application/json; charset=utf-8 56.719ms
2025-06-21 22:54:19.885 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:54:19.885 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:54:19.885 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:54:19.903 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:54:19.904 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:54:19.904 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 18.8549ms
2025-06-21 22:54:19.904 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:54:19.904 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 19.7756ms
2025-06-21 22:58:16.681 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/Search?searchText=in - null null
2025-06-21 22:58:16.683 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Search (CinelogAPI)'
2025-06-21 22:58:16.691 +04:00 [INF] Route matched with {action = "Search", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:58:16.765 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 22:58:16.853 +04:00 [INF] Executed DbCommand (66ms) [Parameters=[@__searchText_0_contains='?' (Size = 200), @__searchText_0_contains_1='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g0].[Id], [g0].[CreatedDate], [g0].[IsDeleted], [g0].[Name], [g0].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g0] ON [m1].[GenreId] = [g0].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE [m].[Title] LIKE @__searchText_0_contains ESCAPE N'\' OR EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
    WHERE [m].[Id] = [m0].[MovieId] AND [g].[Name] LIKE @__searchText_0_contains_1 ESCAPE N'\')
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:58:16.858 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__searchText_0_contains='?' (Size = 200), @__searchText_0_contains_1='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g0].[Id], [g0].[CreatedDate], [g0].[IsDeleted], [g0].[Name], [g0].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g0] ON [m1].[GenreId] = [g0].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE [m].[Title] LIKE @__searchText_0_contains ESCAPE N'\' OR EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
    WHERE [m].[Id] = [m0].[MovieId] AND [g].[Name] LIKE @__searchText_0_contains_1 ESCAPE N'\')
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:58:16.859 +04:00 [INF] 1 movie(s) found for search text: in
2025-06-21 22:58:16.870 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__searchText_0_contains='?' (Size = 200), @__searchText_0_contains_1='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g0].[Id], [g0].[CreatedDate], [g0].[IsDeleted], [g0].[Name], [g0].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g0] ON [m1].[GenreId] = [g0].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE [m].[Title] LIKE @__searchText_0_contains ESCAPE N'\' OR EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
    WHERE [m].[Id] = [m0].[MovieId] AND [g].[Name] LIKE @__searchText_0_contains_1 ESCAPE N'\')
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:58:16.872 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:58:16.872 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Search (CinelogAPI) in 181.1432ms
2025-06-21 22:58:16.872 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Search (CinelogAPI)'
2025-06-21 22:58:16.872 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/Search?searchText=in - 200 null application/json; charset=utf-8 191.0322ms
2025-06-21 22:58:16.873 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:58:16.874 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:58:16.874 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:58:16.891 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:58:16.892 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:58:16.893 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 18.7105ms
2025-06-21 22:58:16.893 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:58:16.893 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 19.3968ms
2025-06-21 22:58:22.439 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/Search?searchText=ir - null null
2025-06-21 22:58:22.440 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Search (CinelogAPI)'
2025-06-21 22:58:22.440 +04:00 [INF] Route matched with {action = "Search", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:58:22.446 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__searchText_0_contains='?' (Size = 200), @__searchText_0_contains_1='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g0].[Id], [g0].[CreatedDate], [g0].[IsDeleted], [g0].[Name], [g0].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g0] ON [m1].[GenreId] = [g0].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE [m].[Title] LIKE @__searchText_0_contains ESCAPE N'\' OR EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
    WHERE [m].[Id] = [m0].[MovieId] AND [g].[Name] LIKE @__searchText_0_contains_1 ESCAPE N'\')
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:58:22.449 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__searchText_0_contains='?' (Size = 200), @__searchText_0_contains_1='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g0].[Id], [g0].[CreatedDate], [g0].[IsDeleted], [g0].[Name], [g0].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g0] ON [m1].[GenreId] = [g0].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE [m].[Title] LIKE @__searchText_0_contains ESCAPE N'\' OR EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
    WHERE [m].[Id] = [m0].[MovieId] AND [g].[Name] LIKE @__searchText_0_contains_1 ESCAPE N'\')
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:58:22.450 +04:00 [INF] 1 movie(s) found for search text: ir
2025-06-21 22:58:22.451 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__searchText_0_contains='?' (Size = 200), @__searchText_0_contains_1='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g0].[Id], [g0].[CreatedDate], [g0].[IsDeleted], [g0].[Name], [g0].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g0] ON [m1].[GenreId] = [g0].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE [m].[Title] LIKE @__searchText_0_contains ESCAPE N'\' OR EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
    WHERE [m].[Id] = [m0].[MovieId] AND [g].[Name] LIKE @__searchText_0_contains_1 ESCAPE N'\')
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:58:22.452 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:58:22.452 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Search (CinelogAPI) in 11.9385ms
2025-06-21 22:58:22.452 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Search (CinelogAPI)'
2025-06-21 22:58:22.452 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/Search?searchText=ir - 200 null application/json; charset=utf-8 13.0228ms
2025-06-21 22:58:22.454 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:58:22.455 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:58:22.455 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:58:22.458 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:58:22.460 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:58:22.460 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 5.2043ms
2025-06-21 22:58:22.460 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:58:22.461 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 6.4026ms
2025-06-21 22:58:26.426 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/Search?searchText=pul - null null
2025-06-21 22:58:26.426 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Search (CinelogAPI)'
2025-06-21 22:58:26.426 +04:00 [INF] Route matched with {action = "Search", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 22:58:26.430 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__searchText_0_contains='?' (Size = 200), @__searchText_0_contains_1='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g0].[Id], [g0].[CreatedDate], [g0].[IsDeleted], [g0].[Name], [g0].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g0] ON [m1].[GenreId] = [g0].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE [m].[Title] LIKE @__searchText_0_contains ESCAPE N'\' OR EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
    WHERE [m].[Id] = [m0].[MovieId] AND [g].[Name] LIKE @__searchText_0_contains_1 ESCAPE N'\')
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:58:26.435 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__searchText_0_contains='?' (Size = 200), @__searchText_0_contains_1='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g0].[Id], [g0].[CreatedDate], [g0].[IsDeleted], [g0].[Name], [g0].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g0] ON [m1].[GenreId] = [g0].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE [m].[Title] LIKE @__searchText_0_contains ESCAPE N'\' OR EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
    WHERE [m].[Id] = [m0].[MovieId] AND [g].[Name] LIKE @__searchText_0_contains_1 ESCAPE N'\')
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:58:26.441 +04:00 [INF] 10 movie(s) found for search text: pul
2025-06-21 22:58:26.442 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__searchText_0_contains='?' (Size = 200), @__searchText_0_contains_1='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g0].[Id], [g0].[CreatedDate], [g0].[IsDeleted], [g0].[Name], [g0].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g0] ON [m1].[GenreId] = [g0].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE [m].[Title] LIKE @__searchText_0_contains ESCAPE N'\' OR EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
    WHERE [m].[Id] = [m0].[MovieId] AND [g].[Name] LIKE @__searchText_0_contains_1 ESCAPE N'\')
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 22:58:26.444 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:58:26.444 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Search (CinelogAPI) in 17.9483ms
2025-06-21 22:58:26.445 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Search (CinelogAPI)'
2025-06-21 22:58:26.445 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/Search?searchText=pul - 200 null application/json; charset=utf-8 19.0709ms
2025-06-21 22:58:26.446 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 22:58:26.446 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:58:26.447 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 22:58:26.449 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 22:58:26.450 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 22:58:26.450 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 3.4258ms
2025-06-21 22:58:26.450 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 22:58:26.450 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 4.2666ms
2025-06-21 23:16:58.716 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 23:16:58.914 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 23:16:58.914 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 23:16:59.013 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 23:16:59.014 +04:00 [INF] Hosting environment: Development
2025-06-21 23:16:59.014 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 23:16:59.325 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 23:16:59.518 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 193.6594ms
2025-06-21 23:16:59.912 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 23:16:59.914 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 23:16:59.917 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 5.1152ms
2025-06-21 23:16:59.952 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.3602ms
2025-06-21 23:17:00.594 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/Search?searchText=pul - null null
2025-06-21 23:17:00.691 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Search (CinelogAPI)'
2025-06-21 23:17:00.727 +04:00 [INF] Route matched with {action = "Search", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:17:00.913 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 23:17:00.960 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 46.4734ms
2025-06-21 23:17:02.369 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 23:17:02.812 +04:00 [INF] Executed DbCommand (68ms) [Parameters=[@__searchText_0_contains='?' (Size = 200), @__searchText_0_contains_1='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g0].[Id], [g0].[CreatedDate], [g0].[IsDeleted], [g0].[Name], [g0].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g0] ON [m1].[GenreId] = [g0].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE [m].[Title] LIKE @__searchText_0_contains ESCAPE N'\' OR EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
    WHERE [m].[Id] = [m0].[MovieId] AND [g].[Name] LIKE @__searchText_0_contains_1 ESCAPE N'\')
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 23:17:02.977 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__searchText_0_contains='?' (Size = 200), @__searchText_0_contains_1='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g0].[Id], [g0].[CreatedDate], [g0].[IsDeleted], [g0].[Name], [g0].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g0] ON [m1].[GenreId] = [g0].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE [m].[Title] LIKE @__searchText_0_contains ESCAPE N'\' OR EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
    WHERE [m].[Id] = [m0].[MovieId] AND [g].[Name] LIKE @__searchText_0_contains_1 ESCAPE N'\')
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 23:17:02.980 +04:00 [INF] 10 movie(s) found for search text: pul
2025-06-21 23:17:02.997 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__searchText_0_contains='?' (Size = 200), @__searchText_0_contains_1='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[GenreId], [g0].[Id], [g0].[CreatedDate], [g0].[IsDeleted], [g0].[Name], [g0].[UpdatedDate]
    FROM [MovieGenres] AS [m1]
    INNER JOIN [Genres] AS [g0] ON [m1].[GenreId] = [g0].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m2]
    INNER JOIN [Directors] AS [d] ON [m2].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m3].[MovieId], [m3].[ActorId], [m3].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m3]
    INNER JOIN [Actors] AS [a] ON [m3].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
WHERE [m].[Title] LIKE @__searchText_0_contains ESCAPE N'\' OR EXISTS (
    SELECT 1
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
    WHERE [m].[Id] = [m0].[MovieId] AND [g].[Name] LIKE @__searchText_0_contains_1 ESCAPE N'\')
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 23:17:03.006 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:17:03.024 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Search (CinelogAPI) in 2294.5093ms
2025-06-21 23:17:03.025 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Search (CinelogAPI)'
2025-06-21 23:17:03.029 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/Search?searchText=pul - 200 null application/json; charset=utf-8 2435.318ms
2025-06-21 23:17:03.037 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 23:17:03.041 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 23:17:03.044 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 23:17:03.106 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 23:17:03.136 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 23:17:03.182 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:17:03.186 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 141.8338ms
2025-06-21 23:17:03.186 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 23:17:03.187 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 149.5311ms
2025-06-21 23:17:16.176 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 23:17:16.186 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 23:17:16.198 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:17:16.235 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 23:17:16.236 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 23:17:16.298 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 23:17:16.372 +04:00 [INF] Executed DbCommand (58ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:17:16.528 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 23:17:16.534 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:17:16.542 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 344.4313ms
2025-06-21 23:17:16.543 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 23:17:16.543 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 366.7703ms
2025-06-21 23:17:16.547 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 23:17:16.551 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 23:17:16.552 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 23:17:16.556 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 23:17:16.560 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:17:16.561 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 8.674ms
2025-06-21 23:17:16.561 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 23:17:16.561 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 13.7536ms
2025-06-21 23:17:47.457 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 23:17:47.457 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 23:17:47.463 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:17:47.529 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 23:17:47.610 +04:00 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 23:17:47.635 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:17:47.635 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 172.5797ms
2025-06-21 23:17:47.635 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 23:17:47.636 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 179.0404ms
2025-06-21 23:17:59.786 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - null null
2025-06-21 23:17:59.786 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:17:59.798 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:17:59.867 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 23:17:59.917 +04:00 [INF] Executed DbCommand (37ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:17:59.919 +04:00 [INF] Movie with Id 1 retrieved successfully
2025-06-21 23:17:59.931 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieDto'.
2025-06-21 23:17:59.931 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 132.9976ms
2025-06-21 23:17:59.931 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:17:59.932 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - 200 null application/json; charset=utf-8 146.0008ms
2025-06-21 23:20:50.127 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 23:20:50.127 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 23:20:50.128 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:20:50.182 +04:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 23:20:50.187 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:20:50.187 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 59.4973ms
2025-06-21 23:20:50.187 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 23:20:50.187 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 60.3753ms
2025-06-21 23:20:50.206 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 23:20:50.207 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.8086ms
2025-06-21 23:20:50.207 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 23:20:56.207 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 23:20:56.207 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 23:20:56.208 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:20:56.250 +04:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:20:56.262 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 23:20:56.263 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:20:56.264 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 55.9526ms
2025-06-21 23:20:56.264 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 23:20:56.264 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 57.0817ms
2025-06-21 23:20:56.272 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 23:20:56.273 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 23:20:56.273 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 23:20:56.298 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 23:20:56.299 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:20:56.299 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 26.7047ms
2025-06-21 23:20:56.300 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 23:20:56.300 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 27.8289ms
2025-06-21 23:21:03.460 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - null null
2025-06-21 23:21:03.461 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:21:03.462 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:21:03.502 +04:00 [INF] Executed DbCommand (36ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:21:03.505 +04:00 [INF] Movie with Id 1 retrieved successfully
2025-06-21 23:21:03.506 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieDto'.
2025-06-21 23:21:03.506 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 44.1303ms
2025-06-21 23:21:03.506 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:21:03.507 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - 200 null application/json; charset=utf-8 46.4191ms
2025-06-21 23:23:33.207 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - null null
2025-06-21 23:23:33.208 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:23:33.208 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:23:33.263 +04:00 [INF] Executed DbCommand (53ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:23:33.264 +04:00 [INF] Movie with Id 1 retrieved successfully
2025-06-21 23:23:33.264 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieDto'.
2025-06-21 23:23:33.264 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 56.569ms
2025-06-21 23:23:33.264 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:23:33.265 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - 200 null application/json; charset=utf-8 57.6305ms
2025-06-21 23:23:44.922 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - null null
2025-06-21 23:23:44.923 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:23:44.924 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:23:44.929 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:23:44.930 +04:00 [INF] Movie with Id 1 retrieved successfully
2025-06-21 23:23:44.932 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieDto'.
2025-06-21 23:23:44.932 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 8.1736ms
2025-06-21 23:23:44.933 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:23:44.934 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - 200 null application/json; charset=utf-8 11.5827ms
2025-06-21 23:25:23.118 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - null null
2025-06-21 23:25:23.119 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:25:23.119 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:25:23.164 +04:00 [INF] Executed DbCommand (44ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:25:23.165 +04:00 [INF] Movie with Id 1 retrieved successfully
2025-06-21 23:25:23.165 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieDto'.
2025-06-21 23:25:23.165 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 46.7111ms
2025-06-21 23:25:23.165 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:25:23.166 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - 200 null application/json; charset=utf-8 47.4468ms
2025-06-21 23:25:26.384 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - null null
2025-06-21 23:25:26.385 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:25:26.385 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:25:26.388 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:25:26.390 +04:00 [INF] Movie with Id 1 retrieved successfully
2025-06-21 23:25:26.390 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieDto'.
2025-06-21 23:25:26.390 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 4.867ms
2025-06-21 23:25:26.390 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:25:26.391 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - 200 null application/json; charset=utf-8 6.6984ms
2025-06-21 23:25:28.064 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 23:25:28.065 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 23:25:28.065 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:25:28.112 +04:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 23:25:28.118 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:25:28.119 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 53.6867ms
2025-06-21 23:25:28.119 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 23:25:28.119 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 55.1667ms
2025-06-21 23:25:28.128 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 23:25:28.130 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 2.5319ms
2025-06-21 23:25:28.130 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 23:27:10.048 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - null null
2025-06-21 23:27:10.048 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:27:10.049 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:27:10.153 +04:00 [INF] Executed DbCommand (103ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:27:10.154 +04:00 [INF] Movie with Id 1 retrieved successfully
2025-06-21 23:27:10.155 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieDto'.
2025-06-21 23:27:10.155 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 106.1626ms
2025-06-21 23:27:10.155 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:27:10.155 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - 200 null application/json; charset=utf-8 107.3665ms
2025-06-21 23:27:14.764 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - null null
2025-06-21 23:27:14.764 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:27:14.764 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:27:14.807 +04:00 [INF] Executed DbCommand (42ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:27:14.808 +04:00 [INF] Movie with Id 1 retrieved successfully
2025-06-21 23:27:14.808 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieDto'.
2025-06-21 23:27:14.809 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 44.2845ms
2025-06-21 23:27:14.809 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:27:14.809 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - 200 null application/json; charset=utf-8 45.0415ms
2025-06-21 23:27:19.728 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-21 23:27:19.739 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 10.6356ms
2025-06-21 23:27:19.767 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-21 23:27:19.768 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.7939ms
2025-06-21 23:27:20.098 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-21 23:27:20.110 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 11.9165ms
2025-06-21 23:27:20.660 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-21 23:27:20.686 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 26.2857ms
2025-06-21 23:27:36.364 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-21 23:27:36.553 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-21 23:27:36.554 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-21 23:27:36.665 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-21 23:27:36.666 +04:00 [INF] Hosting environment: Development
2025-06-21 23:27:36.666 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-21 23:27:37.160 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-21 23:27:37.219 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 23:27:37.240 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:27:38.892 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 23:27:39.387 +04:00 [INF] Executed DbCommand (157ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-21 23:27:39.863 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:27:39.889 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2644.9521ms
2025-06-21 23:27:39.890 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-21 23:27:39.900 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 2742.4462ms
2025-06-21 23:27:39.909 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-21 23:27:39.957 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 48.0311ms
2025-06-21 23:27:39.958 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-21 23:27:47.957 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 23:27:47.966 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 23:27:47.982 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:27:48.090 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 23:27:48.090 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-21 23:27:48.171 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 23:27:48.248 +04:00 [INF] Executed DbCommand (51ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:27:48.316 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 23:27:48.319 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:27:48.325 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 342.0232ms
2025-06-21 23:27:48.325 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 23:27:48.325 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 368.32ms
2025-06-21 23:27:48.332 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 23:27:48.332 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 23:27:48.336 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 23:27:48.395 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 23:27:48.419 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 23:27:48.464 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:27:48.468 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 132.2233ms
2025-06-21 23:27:48.468 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 23:27:48.469 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 136.7594ms
2025-06-21 23:27:53.051 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - null null
2025-06-21 23:27:53.056 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:27:53.067 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:27:53.161 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-21 23:27:53.210 +04:00 [INF] Executed DbCommand (32ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:27:53.215 +04:00 [INF] Movie with Id 1 retrieved successfully
2025-06-21 23:27:53.225 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieDto'.
2025-06-21 23:27:53.226 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 158.2572ms
2025-06-21 23:27:53.226 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:27:53.226 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - 200 null application/json; charset=utf-8 174.9908ms
2025-06-21 23:28:05.729 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/5 - null null
2025-06-21 23:28:05.731 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:28:05.731 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:28:05.741 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:28:05.743 +04:00 [WRN] Movie not found with Id: 5
2025-06-21 23:28:05.745 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 14.1494ms
2025-06-21 23:28:05.746 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:28:05.749 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Movie with Id 5 not found.
   at Service.Services.MovieService.GetByIdAsync(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\MovieService.cs:line 216
   at CinelogAPI.Controllers.Admin.MovieController.GetById(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\Admin\MovieController.cs:line 52
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 23:28:05.817 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Movie with Id 5 not found.
   at Service.Services.MovieService.GetByIdAsync(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\MovieService.cs:line 216
   at CinelogAPI.Controllers.Admin.MovieController.GetById(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\Admin\MovieController.cs:line 52
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 23:28:05.838 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/5 - 404 null application/json; charset=utf-8 108.1177ms
2025-06-21 23:28:05.860 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 23:28:05.860 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 23:28:05.861 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:28:05.866 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:28:05.873 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 23:28:05.874 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:28:05.874 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 13.4997ms
2025-06-21 23:28:05.874 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 23:28:05.874 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 14.6122ms
2025-06-21 23:28:05.875 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 23:28:05.877 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 23:28:05.877 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 23:28:05.880 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 23:28:05.882 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:28:05.882 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 5.1048ms
2025-06-21 23:28:05.882 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 23:28:05.883 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 7.336ms
2025-06-21 23:28:11.380 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - null null
2025-06-21 23:28:11.382 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:28:11.382 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:28:11.392 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:28:11.394 +04:00 [INF] Movie with Id 1 retrieved successfully
2025-06-21 23:28:11.395 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieDto'.
2025-06-21 23:28:11.396 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 13.7135ms
2025-06-21 23:28:11.396 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:28:11.396 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - 200 null application/json; charset=utf-8 16.4006ms
2025-06-21 23:28:16.070 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/5 - null null
2025-06-21 23:28:16.071 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:28:16.071 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:28:16.075 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:28:16.075 +04:00 [WRN] Movie not found with Id: 5
2025-06-21 23:28:16.076 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 4.3649ms
2025-06-21 23:28:16.076 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:28:16.076 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Movie with Id 5 not found.
   at Service.Services.MovieService.GetByIdAsync(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\MovieService.cs:line 216
   at CinelogAPI.Controllers.Admin.MovieController.GetById(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\Admin\MovieController.cs:line 52
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 23:28:16.080 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Movie with Id 5 not found.
   at Service.Services.MovieService.GetByIdAsync(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\MovieService.cs:line 216
   at CinelogAPI.Controllers.Admin.MovieController.GetById(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\Admin\MovieController.cs:line 52
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-21 23:28:16.082 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/5 - 404 null application/json; charset=utf-8 11.9984ms
2025-06-21 23:28:16.097 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - null null
2025-06-21 23:28:16.098 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 23:28:16.098 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:28:16.102 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:28:16.111 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Movies] AS [m]
2025-06-21 23:28:16.111 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:28:16.112 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI) in 14.2945ms
2025-06-21 23:28:16.112 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAllPaginated (CinelogAPI)'
2025-06-21 23:28:16.112 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAllPaginated?page=1 - 200 null application/json; charset=utf-8 15.4685ms
2025-06-21 23:28:16.117 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-21 23:28:16.117 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 23:28:16.117 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-21 23:28:16.122 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-21 23:28:16.125 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-21 23:28:16.125 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 7.5334ms
2025-06-21 23:28:16.125 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-21 23:28:16.125 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 8.5396ms
2025-06-21 23:28:27.867 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/6 - null null
2025-06-21 23:28:27.868 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:28:27.869 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:28:27.923 +04:00 [INF] Executed DbCommand (51ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:28:27.925 +04:00 [INF] Movie with Id 6 retrieved successfully
2025-06-21 23:28:27.925 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieDto'.
2025-06-21 23:28:27.926 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 56.9779ms
2025-06-21 23:28:27.926 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:28:27.926 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/6 - 200 null application/json; charset=utf-8 58.5711ms
2025-06-21 23:29:12.105 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - null null
2025-06-21 23:29:12.106 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:29:12.106 +04:00 [INF] Route matched with {action = "GetById", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-21 23:29:12.151 +04:00 [INF] Executed DbCommand (42ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[IsDeleted], [t0].[Name], [t0].[UpdatedDate], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[IsDeleted], [t1].[PhotoUrl], [t1].[UpdatedDate], [t2].[MovieId], [t2].[ActorId], [t2].[CharacterName], [t2].[Id], [t2].[Bio], [t2].[BirthDate], [t2].[CreatedDate], [t2].[FullName], [t2].[ImageUrl], [t2].[IsDeleted], [t2].[UpdatedDate], [t3].[Id], [t3].[Content], [t3].[CreatedDate], [t3].[IsDeleted], [t3].[MovieId], [t3].[SeriesId], [t3].[UpdatedDate], [t3].[UserId], [t3].[Id0], [t3].[AccessFailedCount], [t3].[Age], [t3].[ConcurrencyStamp], [t3].[Email], [t3].[EmailConfirmed], [t3].[FullName], [t3].[LockoutEnabled], [t3].[LockoutEnd], [t3].[NormalizedEmail], [t3].[NormalizedUserName], [t3].[PasswordHash], [t3].[PhoneNumber], [t3].[PhoneNumberConfirmed], [t3].[SecurityStamp], [t3].[TwoFactorEnabled], [t3].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM (
    SELECT TOP(1) [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
    FROM [Movies] AS [m]
    WHERE [m].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t0] ON [t].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t1] ON [t].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t2] ON [t].[Id] = [t2].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t3] ON [t].[Id] = [t3].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [t].[Id] = [r].[MovieId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[MovieId], [t1].[DirectorId], [t1].[Id], [t2].[MovieId], [t2].[ActorId], [t2].[Id], [t3].[Id], [t3].[Id0]
2025-06-21 23:29:12.152 +04:00 [INF] Movie with Id 1 retrieved successfully
2025-06-21 23:29:12.152 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieDto'.
2025-06-21 23:29:12.152 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI) in 46.0471ms
2025-06-21 23:29:12.153 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetById (CinelogAPI)'
2025-06-21 23:29:12.153 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetById/1 - 200 null application/json; charset=utf-8 47.2966ms
