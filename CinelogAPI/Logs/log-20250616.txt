2025-06-16 02:44:51.308 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 02:44:51.468 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 02:44:51.469 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 02:44:51.521 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 02:44:51.521 +04:00 [INF] Hosting environment: Development
2025-06-16 02:44:51.522 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 02:44:52.031 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger - null null
2025-06-16 02:44:52.170 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger - 301 0 null 140.7081ms
2025-06-16 02:44:52.175 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 02:44:52.228 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 52.6977ms
2025-06-16 02:44:52.240 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/swagger-ui.css - null null
2025-06-16 02:44:52.240 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/swagger-ui-standalone-preset.js - null null
2025-06-16 02:44:52.240 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/swagger-ui-bundle.js - null null
2025-06-16 02:44:52.240 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 02:44:52.240 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 02:44:52.243 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.606ms
2025-06-16 02:44:52.260 +04:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-06-16 02:44:52.260 +04:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-06-16 02:44:52.261 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/swagger-ui.css - 200 152034 text/css 21.4406ms
2025-06-16 02:44:52.261 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/swagger-ui-standalone-preset.js - 200 230280 text/javascript 21.4335ms
2025-06-16 02:44:52.281 +04:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-06-16 02:44:52.282 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/swagger-ui-bundle.js - 200 1456926 text/javascript 41.9352ms
2025-06-16 02:44:52.302 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 62.2492ms
2025-06-16 02:44:52.423 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 02:44:52.448 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 24.7164ms
2025-06-16 02:55:12.680 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 02:55:12.834 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 02:55:12.834 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 02:55:12.890 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 02:55:12.890 +04:00 [INF] Hosting environment: Development
2025-06-16 02:55:12.890 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 02:55:13.423 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 02:55:13.571 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 148.8426ms
2025-06-16 02:55:13.614 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 02:55:13.618 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.3662ms
2025-06-16 02:55:13.814 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 02:55:13.840 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 25.0146ms
2025-06-16 02:55:14.159 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 02:55:14.200 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 40.8909ms
2025-06-16 03:01:22.177 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:01:22.186 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 8.6503ms
2025-06-16 03:01:22.276 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:01:22.277 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.5498ms
2025-06-16 03:01:22.278 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:01:22.285 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 6.846ms
2025-06-16 03:01:22.545 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:01:22.554 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/favicon-32x32.png - null null
2025-06-16 03:01:22.561 +04:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2025-06-16 03:01:22.561 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/favicon-32x32.png - 200 628 image/png 6.6206ms
2025-06-16 03:01:22.563 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 17.9302ms
2025-06-16 03:01:38.872 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 03:01:39.093 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 03:01:39.093 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 03:01:39.171 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 03:01:39.172 +04:00 [INF] Hosting environment: Development
2025-06-16 03:01:39.172 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 03:01:39.806 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:01:39.999 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 205.4171ms
2025-06-16 03:01:40.029 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:01:40.041 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 11.7546ms
2025-06-16 03:01:40.219 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:01:40.264 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 45.433ms
2025-06-16 03:01:40.591 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:01:40.644 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 53.2701ms
2025-06-16 03:01:53.585 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 03:01:53.709 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 03:01:53.710 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 03:01:53.764 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 03:01:53.764 +04:00 [INF] Hosting environment: Development
2025-06-16 03:01:53.764 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 03:01:54.285 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:01:54.416 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 131.7954ms
2025-06-16 03:01:54.428 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:01:54.433 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.2417ms
2025-06-16 03:01:54.622 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:01:54.644 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.143ms
2025-06-16 03:01:54.948 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:01:54.997 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 48.6688ms
2025-06-16 03:04:26.008 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:04:26.015 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 7.2435ms
2025-06-16 03:04:26.041 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:04:26.042 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:04:26.042 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.6114ms
2025-06-16 03:04:26.054 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 12.8262ms
2025-06-16 03:04:26.446 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:04:26.463 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 16.5423ms
2025-06-16 03:07:28.839 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:07:28.844 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 5.5171ms
2025-06-16 03:07:28.959 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:07:28.960 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.4054ms
2025-06-16 03:07:28.961 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:07:28.965 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 3.5163ms
2025-06-16 03:07:29.240 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:07:29.249 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 9.2504ms
2025-06-16 03:07:41.206 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 03:07:41.336 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 03:07:41.336 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 03:07:41.390 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 03:07:41.391 +04:00 [INF] Hosting environment: Development
2025-06-16 03:07:41.391 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 03:07:41.740 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:07:41.852 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 113.0807ms
2025-06-16 03:07:41.873 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:07:41.873 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:07:41.877 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.4929ms
2025-06-16 03:07:41.895 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.5593ms
2025-06-16 03:07:42.120 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:07:42.155 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.4012ms
2025-06-16 03:09:57.385 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 03:09:57.511 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 03:09:57.511 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 03:09:57.576 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 03:09:57.576 +04:00 [INF] Hosting environment: Development
2025-06-16 03:09:57.576 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 03:09:57.976 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:09:58.093 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 117.8319ms
2025-06-16 03:09:58.206 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:09:58.206 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:09:58.209 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 2.6272ms
2025-06-16 03:09:58.226 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.0868ms
2025-06-16 03:09:58.558 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:09:58.599 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 40.9346ms
2025-06-16 03:10:30.317 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 03:10:30.441 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 03:10:30.441 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 03:10:30.495 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 03:10:30.496 +04:00 [INF] Hosting environment: Development
2025-06-16 03:10:30.496 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 03:10:31.029 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:10:31.145 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 116.5597ms
2025-06-16 03:10:31.394 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:10:31.395 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:10:31.397 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.1391ms
2025-06-16 03:10:31.417 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.0046ms
2025-06-16 03:10:31.835 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:10:31.875 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 39.7077ms
2025-06-16 03:33:56.342 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:33:56.349 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 6.3337ms
2025-06-16 03:33:56.457 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:33:56.457 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.5158ms
2025-06-16 03:33:56.460 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:33:56.468 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 8.4487ms
2025-06-16 03:33:56.771 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:33:56.790 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 19.2931ms
2025-06-16 03:34:12.011 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 03:34:12.139 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 03:34:12.139 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 03:34:12.196 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 03:34:12.196 +04:00 [INF] Hosting environment: Development
2025-06-16 03:34:12.196 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 03:34:12.562 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:34:12.670 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 108.1913ms
2025-06-16 03:34:12.683 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:34:12.683 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:34:12.686 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.5418ms
2025-06-16 03:34:12.701 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 18.4091ms
2025-06-16 03:34:12.923 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:34:12.947 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 24.4487ms
2025-06-16 03:34:44.160 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 03:34:44.293 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 03:34:44.294 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 03:34:44.351 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 03:34:44.351 +04:00 [INF] Hosting environment: Development
2025-06-16 03:34:44.351 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 03:34:44.744 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:34:44.854 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 110.892ms
2025-06-16 03:34:44.871 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:34:44.871 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:34:44.874 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.7593ms
2025-06-16 03:34:44.891 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.8101ms
2025-06-16 03:34:45.151 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:34:45.185 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 33.8812ms
2025-06-16 03:37:09.457 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 03:37:09.598 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 03:37:09.598 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 03:37:09.655 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 03:37:09.656 +04:00 [INF] Hosting environment: Development
2025-06-16 03:37:09.656 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 03:37:10.104 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:37:10.214 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 111.4589ms
2025-06-16 03:37:10.228 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:37:10.228 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:37:10.232 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.5312ms
2025-06-16 03:37:10.250 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.8842ms
2025-06-16 03:37:10.557 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:37:10.588 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 31.237ms
2025-06-16 03:49:14.593 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 03:49:14.740 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 03:49:14.740 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 03:49:14.796 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 03:49:14.796 +04:00 [INF] Hosting environment: Development
2025-06-16 03:49:14.796 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 03:49:15.316 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 03:49:15.430 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 115.6175ms
2025-06-16 03:49:15.656 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 03:49:15.656 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 03:49:15.660 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.2814ms
2025-06-16 03:49:15.679 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.1644ms
2025-06-16 03:49:16.067 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 03:49:16.099 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 32.0942ms
2025-06-16 11:28:22.530 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 11:28:22.554 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 24.2988ms
2025-06-16 11:28:22.598 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 11:28:22.600 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 1.6972ms
2025-06-16 11:28:22.968 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 11:28:22.981 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 12.9654ms
2025-06-16 11:28:23.490 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 11:28:23.529 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 38.85ms
2025-06-16 11:35:17.098 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 11:35:17.109 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 10.2249ms
2025-06-16 11:35:17.355 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 11:35:17.356 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.8595ms
2025-06-16 11:35:17.357 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 11:35:17.366 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 8.3163ms
2025-06-16 11:35:17.998 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 11:35:18.022 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 24.4259ms
2025-06-16 12:35:13.659 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 12:35:13.672 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 12.974ms
2025-06-16 12:35:13.719 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 12:35:13.720 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.8685ms
2025-06-16 12:35:14.099 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 12:35:14.104 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 4.5877ms
2025-06-16 12:35:14.659 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 12:35:14.686 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 26.1966ms
2025-06-16 12:58:12.775 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 12:58:13.286 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 12:58:13.287 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 12:58:13.477 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 12:58:13.479 +04:00 [INF] Hosting environment: Development
2025-06-16 12:58:13.479 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 12:58:14.182 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 12:58:14.685 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 520.4748ms
2025-06-16 12:58:15.339 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 12:58:15.339 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 12:58:15.350 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 11.1063ms
2025-06-16 12:58:15.406 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 67.1651ms
2025-06-16 12:58:15.994 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 12:58:16.086 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 92.8254ms
2025-06-16 13:26:58.694 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 13:26:58.890 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 13:26:58.890 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 13:26:58.971 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 13:26:58.972 +04:00 [INF] Hosting environment: Development
2025-06-16 13:26:58.972 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 13:26:59.455 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 13:26:59.624 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 175.8895ms
2025-06-16 13:26:59.655 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 13:26:59.663 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 7.448ms
2025-06-16 13:26:59.826 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 13:26:59.857 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.6429ms
2025-06-16 13:27:00.152 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 13:27:00.180 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 28.5451ms
2025-06-16 13:31:56.322 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 13:31:56.540 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 13:31:56.540 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 13:31:56.611 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 13:31:56.612 +04:00 [INF] Hosting environment: Development
2025-06-16 13:31:56.612 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 13:31:57.038 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 13:31:57.284 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 254.7538ms
2025-06-16 13:31:57.591 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 13:31:57.591 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 13:31:57.597 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 6.6952ms
2025-06-16 13:31:57.639 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 47.9225ms
2025-06-16 13:31:58.078 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 13:31:58.115 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 37.5884ms
2025-06-16 13:53:41.949 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 13:53:42.100 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 13:53:42.101 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 13:53:42.158 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 13:53:42.158 +04:00 [INF] Hosting environment: Development
2025-06-16 13:53:42.158 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 13:53:42.764 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 13:53:42.888 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 125.4114ms
2025-06-16 13:53:42.897 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 13:53:42.897 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 13:53:42.902 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.6433ms
2025-06-16 13:53:42.922 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 25.5519ms
2025-06-16 13:53:43.087 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 13:53:43.117 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 29.7049ms
2025-06-16 13:54:09.637 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 13:54:09.769 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 13:54:09.770 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 13:54:09.828 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 13:54:09.828 +04:00 [INF] Hosting environment: Development
2025-06-16 13:54:09.828 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 13:54:10.277 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 13:54:10.382 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 106.1672ms
2025-06-16 13:54:10.389 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 13:54:10.393 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 13:54:10.397 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.4731ms
2025-06-16 13:54:10.409 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 19.3475ms
2025-06-16 13:54:10.439 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 13:54:10.443 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/favicon-32x32.png - null null
2025-06-16 13:54:10.450 +04:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2025-06-16 13:54:10.450 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/favicon-32x32.png - 200 628 image/png 6.9888ms
2025-06-16 13:54:10.469 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 30.3294ms
2025-06-16 13:55:27.324 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 13:55:27.527 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 13:55:27.528 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 13:55:27.599 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 13:55:27.599 +04:00 [INF] Hosting environment: Development
2025-06-16 13:55:27.599 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 13:55:28.041 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 13:55:28.269 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 237.1979ms
2025-06-16 13:55:28.286 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 13:55:28.287 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 13:55:28.292 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 6.3937ms
2025-06-16 13:55:28.323 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.6353ms
2025-06-16 13:55:28.379 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 13:55:28.421 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 42.9067ms
2025-06-16 14:22:09.868 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 14:22:10.006 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 14:22:10.006 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 14:22:10.060 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 14:22:10.060 +04:00 [INF] Hosting environment: Development
2025-06-16 14:22:10.061 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 14:22:10.646 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 14:22:10.760 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 114.4596ms
2025-06-16 14:22:10.774 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 14:22:10.777 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 14:22:10.778 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.5298ms
2025-06-16 14:22:10.796 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 19.0207ms
2025-06-16 14:22:10.870 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 14:22:10.896 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 25.7847ms
2025-06-16 14:32:56.600 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 14:32:56.730 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 14:32:56.730 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 14:32:56.789 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 14:32:56.790 +04:00 [INF] Hosting environment: Development
2025-06-16 14:32:56.790 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 14:33:13.515 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger - null null
2025-06-16 14:33:13.602 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger - 301 0 null 88.7219ms
2025-06-16 14:33:13.606 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 14:33:13.662 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 56.424ms
2025-06-16 14:33:13.669 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/swagger-ui.css - null null
2025-06-16 14:33:13.669 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/swagger-ui-bundle.js - null null
2025-06-16 14:33:13.669 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/swagger-ui-standalone-preset.js - null null
2025-06-16 14:33:13.669 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 14:33:13.670 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 14:33:13.673 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.4958ms
2025-06-16 14:33:13.687 +04:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-06-16 14:33:13.687 +04:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-06-16 14:33:13.688 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/swagger-ui-standalone-preset.js - 200 230280 text/javascript 19.0371ms
2025-06-16 14:33:13.688 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/swagger-ui.css - 200 152034 text/css 19.9181ms
2025-06-16 14:33:13.698 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 27.9964ms
2025-06-16 14:33:13.712 +04:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-06-16 14:33:13.713 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/swagger-ui-bundle.js - 200 1456926 text/javascript 43.3883ms
2025-06-16 14:33:13.858 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 14:33:13.877 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/favicon-32x32.png - null null
2025-06-16 14:33:13.878 +04:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2025-06-16 14:33:13.878 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/favicon-32x32.png - 200 628 image/png 0.5517ms
2025-06-16 14:33:13.885 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 26.9115ms
2025-06-16 15:05:47.375 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/genre/create - application/json; charset=utf-8 16
2025-06-16 15:05:47.394 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 15:05:47.410 +04:00 [INF] Route matched with {action = "Create", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Genre.GenreCreateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 15:05:48.568 +04:00 [INF] Executed DbCommand (40ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Genres] ([CreatedDate], [IsDeleted], [Name], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-06-16 15:05:48.598 +04:00 [INF] Genre 'genre' successfully created
2025-06-16 15:05:48.602 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreCreateDto'.
2025-06-16 15:05:48.606 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI) in 1194.113ms
2025-06-16 15:05:48.607 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 15:05:48.611 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/genre/create - 200 null application/json; charset=utf-8 1235.5929ms
2025-06-16 15:55:48.486 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/genre/create - application/json; charset=utf-8 17
2025-06-16 15:55:48.489 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 15:55:48.489 +04:00 [INF] Route matched with {action = "Create", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Genre.GenreCreateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 15:55:48.544 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Genres] ([CreatedDate], [IsDeleted], [Name], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-06-16 15:55:48.546 +04:00 [INF] Genre 'Action' successfully created
2025-06-16 15:55:48.546 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreCreateDto'.
2025-06-16 15:55:48.546 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI) in 56.983ms
2025-06-16 15:55:48.546 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 15:55:48.547 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/genre/create - 200 null application/json; charset=utf-8 61.1145ms
2025-06-16 16:03:05.292 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/genre/create - application/json; charset=utf-8 16
2025-06-16 16:03:05.295 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 16:03:05.295 +04:00 [INF] Route matched with {action = "Create", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Genre.GenreCreateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:03:05.322 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Genres] ([CreatedDate], [IsDeleted], [Name], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-06-16 16:03:05.323 +04:00 [INF] Genre 'Drama' successfully created
2025-06-16 16:03:05.323 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreCreateDto'.
2025-06-16 16:03:05.323 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI) in 28.3047ms
2025-06-16 16:03:05.323 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 16:03:05.323 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/genre/create - 200 null application/json; charset=utf-8 31.7655ms
2025-06-16 16:04:25.729 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/genre/create - application/json; charset=utf-8 16
2025-06-16 16:04:25.730 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 16:04:25.730 +04:00 [INF] Route matched with {action = "Create", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Genre.GenreCreateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:04:25.747 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Genres] ([CreatedDate], [IsDeleted], [Name], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-06-16 16:04:25.748 +04:00 [INF] Genre 'Drama' successfully created
2025-06-16 16:04:25.748 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreCreateDto'.
2025-06-16 16:04:25.748 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI) in 18.2782ms
2025-06-16 16:04:25.748 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 16:04:25.749 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/genre/create - 200 null application/json; charset=utf-8 19.6723ms
2025-06-16 16:18:24.785 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/genre/create - application/json; charset=utf-8 20
2025-06-16 16:18:24.785 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 16:18:24.785 +04:00 [INF] Route matched with {action = "Create", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Genre.GenreCreateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:18:24.884 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Genres] ([CreatedDate], [IsDeleted], [Name], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-06-16 16:18:24.885 +04:00 [INF] Genre 'vasxcasas' successfully created
2025-06-16 16:18:24.885 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreCreateDto'.
2025-06-16 16:18:24.885 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI) in 99.3318ms
2025-06-16 16:18:24.885 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 16:18:24.885 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/genre/create - 200 null application/json; charset=utf-8 100.0932ms
2025-06-16 16:40:50.791 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre - null null
2025-06-16 16:40:50.797 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre - 404 0 null 5.8234ms
2025-06-16 16:40:50.798 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre, Response status code: 404
2025-06-16 16:43:20.021 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 16:43:20.022 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:43:20.033 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:43:20.326 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 16:43:20.413 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:43:20.520 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:43:20.529 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 495.24ms
2025-06-16 16:43:20.529 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:43:20.529 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 507.6453ms
2025-06-16 16:52:42.191 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall? - null null
2025-06-16 16:52:42.192 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:52:42.192 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:52:42.273 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:52:42.276 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:52:42.276 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 84.4978ms
2025-06-16 16:52:42.276 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:52:42.276 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall? - 200 null application/json; charset=utf-8 85.8711ms
2025-06-16 16:53:45.855 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall? - null null
2025-06-16 16:53:45.856 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:53:45.856 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:53:45.878 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:53:45.879 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:53:45.879 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 23.554ms
2025-06-16 16:53:45.879 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:53:45.879 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall? - 200 null application/json; charset=utf-8 24.0909ms
2025-06-16 16:53:59.605 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=s&sort=asc& - null null
2025-06-16 16:53:59.605 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:53:59.606 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:53:59.628 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:53:59.629 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:53:59.630 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 24.0394ms
2025-06-16 16:53:59.630 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:53:59.630 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=s&sort=asc& - 200 null application/json; charset=utf-8 24.6972ms
2025-06-16 16:54:06.819 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=asc& - null null
2025-06-16 16:54:06.819 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:06.820 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:54:06.843 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:54:06.844 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:54:06.844 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 24.8797ms
2025-06-16 16:54:06.845 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:06.845 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=asc& - 200 null application/json; charset=utf-8 26.1433ms
2025-06-16 16:54:55.272 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=asc& - null null
2025-06-16 16:54:55.272 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:55.272 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:54:55.275 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:54:55.276 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:54:55.276 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 3.5858ms
2025-06-16 16:54:55.276 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:55.276 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=asc& - 200 null application/json; charset=utf-8 4.036ms
2025-06-16 16:54:56.383 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=desc& - null null
2025-06-16 16:54:56.383 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:56.383 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:54:56.386 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:54:56.386 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:54:56.387 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 3.3593ms
2025-06-16 16:54:56.387 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:56.387 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=desc& - 200 null application/json; charset=utf-8 4.0855ms
2025-06-16 16:54:57.333 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=asc& - null null
2025-06-16 16:54:57.334 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:57.334 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:54:57.336 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:54:57.337 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:54:57.338 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 3.624ms
2025-06-16 16:54:57.338 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:57.338 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=asc& - 200 null application/json; charset=utf-8 4.3764ms
2025-06-16 16:54:57.802 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=desc& - null null
2025-06-16 16:54:57.803 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:57.803 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:54:57.805 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:54:57.805 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:54:57.805 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.187ms
2025-06-16 16:54:57.805 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:57.806 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=desc& - 200 null application/json; charset=utf-8 3.9233ms
2025-06-16 16:54:58.266 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=asc& - null null
2025-06-16 16:54:58.266 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:58.266 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:54:58.268 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:54:58.269 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:54:58.269 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 3.2095ms
2025-06-16 16:54:58.269 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:58.270 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=asc& - 200 null application/json; charset=utf-8 3.8157ms
2025-06-16 16:54:59.000 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=desc& - null null
2025-06-16 16:54:59.000 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:59.000 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:54:59.003 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:54:59.004 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:54:59.004 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 3.429ms
2025-06-16 16:54:59.004 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:54:59.004 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=gen&sort=desc& - 200 null application/json; charset=utf-8 4.1699ms
2025-06-16 16:55:24.798 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=act&sort=asc& - null null
2025-06-16 16:55:24.798 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:55:24.799 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:55:24.821 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:55:24.822 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:55:24.822 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 23.1523ms
2025-06-16 16:55:24.822 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:55:24.822 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=act&sort=asc& - 200 null application/json; charset=utf-8 24.0185ms
2025-06-16 16:56:28.959 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 16:56:29.102 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 16:56:29.103 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 16:56:29.176 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 16:56:29.177 +04:00 [INF] Hosting environment: Development
2025-06-16 16:56:29.177 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 16:56:29.368 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=act&sort=asc& - null null
2025-06-16 16:56:29.415 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:56:29.431 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:56:29.737 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 16:56:29.864 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 127.1995ms
2025-06-16 16:56:29.888 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 16:56:29.893 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.7618ms
2025-06-16 16:56:30.129 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 16:56:30.156 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 26.9974ms
2025-06-16 16:56:30.569 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 16:56:30.614 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 44.7989ms
2025-06-16 16:56:30.938 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 16:56:31.255 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:56:31.431 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:56:31.443 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2009.6324ms
2025-06-16 16:56:31.443 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:56:31.448 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall?search=act&sort=asc& - 200 null application/json; charset=utf-8 2081.4419ms
2025-06-16 16:56:39.193 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/Search?searchText=gen - null null
2025-06-16 16:56:39.197 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 16:56:39.204 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:56:39.296 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 16:56:39.343 +04:00 [INF] Executed DbCommand (30ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:56:39.344 +04:00 [INF] Found 1 genres for search text: 'gen'
2025-06-16 16:56:39.346 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:56:39.346 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 141.7562ms
2025-06-16 16:56:39.346 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 16:56:39.347 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/Search?searchText=gen - 200 null application/json; charset=utf-8 153.8614ms
2025-06-16 16:58:33.590 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall? - null null
2025-06-16 16:58:33.592 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:58:33.592 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:58:33.624 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:58:33.625 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:58:33.626 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 33.4683ms
2025-06-16 16:58:33.626 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:58:33.626 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall? - 200 null application/json; charset=utf-8 35.967ms
2025-06-16 16:59:12.766 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall? - null null
2025-06-16 16:59:12.767 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:59:12.767 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:59:12.784 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:59:12.785 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:59:12.785 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 18.089ms
2025-06-16 16:59:12.785 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:59:12.785 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall? - 200 null application/json; charset=utf-8 18.9848ms
2025-06-16 16:59:23.101 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall? - null null
2025-06-16 16:59:23.102 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:59:23.102 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 16:59:23.115 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 16:59:23.116 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 16:59:23.117 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 14.8498ms
2025-06-16 16:59:23.117 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 16:59:23.117 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall? - 200 null application/json; charset=utf-8 15.5002ms
2025-06-16 17:02:34.447 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall? - null null
2025-06-16 17:02:34.448 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:02:34.448 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:02:34.472 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:02:34.473 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:02:34.474 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 25.204ms
2025-06-16 17:02:34.474 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:02:34.474 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall? - 200 null application/json; charset=utf-8 26.4156ms
2025-06-16 17:02:43.440 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall?genre/search=gen& - null null
2025-06-16 17:02:43.441 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:02:43.441 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:02:43.442 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:02:43.443 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:02:43.443 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.4489ms
2025-06-16 17:02:43.443 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:02:43.443 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall?genre/search=gen& - 200 null application/json; charset=utf-8 3.0434ms
2025-06-16 17:03:41.251 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall? - null null
2025-06-16 17:03:41.252 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:03:41.252 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:03:41.274 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:03:41.275 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:03:41.276 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 23.6038ms
2025-06-16 17:03:41.276 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:03:41.276 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall? - 200 null application/json; charset=utf-8 24.9338ms
2025-06-16 17:04:23.463 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 17:04:23.601 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 17:04:23.602 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 17:04:23.667 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 17:04:23.667 +04:00 [INF] Hosting environment: Development
2025-06-16 17:04:23.667 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 17:04:24.070 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 17:04:24.197 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 128.2142ms
2025-06-16 17:04:24.455 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 17:04:24.455 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 17:04:24.459 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.4777ms
2025-06-16 17:04:24.485 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 30.0582ms
2025-06-16 17:04:25.157 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 17:04:25.191 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.2521ms
2025-06-16 17:04:45.061 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall?genre/search=& - null null
2025-06-16 17:04:45.077 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:04:45.092 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:04:46.105 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 17:04:46.353 +04:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:04:46.499 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:04:46.508 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 1413.1914ms
2025-06-16 17:04:46.508 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:04:46.512 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall?genre/search=& - 200 null application/json; charset=utf-8 1450.4545ms
2025-06-16 17:04:55.104 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall? - null null
2025-06-16 17:04:55.107 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:04:55.108 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:04:55.161 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:04:55.165 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:04:55.165 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 57.6178ms
2025-06-16 17:04:55.166 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:04:55.166 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall? - 200 null application/json; charset=utf-8 62.2889ms
2025-06-16 17:10:41.049 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=gen - null null
2025-06-16 17:10:41.051 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:10:41.058 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:10:41.100 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 17:10:41.144 +04:00 [INF] Executed DbCommand (30ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:10:41.145 +04:00 [INF] Found 1 genres for search text: 'gen'
2025-06-16 17:10:41.145 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:10:41.145 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 86.8859ms
2025-06-16 17:10:41.145 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:10:41.146 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=gen - 200 null application/json; charset=utf-8 96.1956ms
2025-06-16 17:11:01.610 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=act - null null
2025-06-16 17:11:01.610 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:01.610 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:11:01.628 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:11:01.629 +04:00 [INF] Found 2 genres for search text: 'act'
2025-06-16 17:11:01.629 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:11:01.630 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 19.2816ms
2025-06-16 17:11:01.630 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:01.630 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=act - 200 null application/json; charset=utf-8 20.1935ms
2025-06-16 17:11:11.633 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=a - null null
2025-06-16 17:11:11.633 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:11.633 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:11:11.646 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:11:11.647 +04:00 [INF] Found 7 genres for search text: 'a'
2025-06-16 17:11:11.647 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:11:11.648 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 14.4811ms
2025-06-16 17:11:11.648 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:11.648 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=a - 200 null application/json; charset=utf-8 15.1689ms
2025-06-16 17:11:20.408 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=dram - null null
2025-06-16 17:11:20.408 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:20.408 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:11:20.410 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:11:20.411 +04:00 [INF] Found 2 genres for search text: 'dram'
2025-06-16 17:11:20.411 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:11:20.411 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 2.8892ms
2025-06-16 17:11:20.411 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:20.412 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=dram - 200 null application/json; charset=utf-8 3.7419ms
2025-06-16 17:11:23.574 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=f - null null
2025-06-16 17:11:23.574 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:23.574 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:11:23.578 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:11:23.579 +04:00 [INF] Found 2 genres for search text: 'f'
2025-06-16 17:11:23.579 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:11:23.580 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 5.1095ms
2025-06-16 17:11:23.580 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:23.580 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=f - 200 null application/json; charset=utf-8 5.9649ms
2025-06-16 17:11:29.223 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=f - null null
2025-06-16 17:11:29.223 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:29.223 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:11:29.226 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:11:29.227 +04:00 [INF] Found 2 genres for search text: 'f'
2025-06-16 17:11:29.227 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:11:29.227 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 3.5393ms
2025-06-16 17:11:29.227 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:29.227 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=f - 200 null application/json; charset=utf-8 4.1374ms
2025-06-16 17:11:30.233 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=f - null null
2025-06-16 17:11:30.233 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:30.233 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:11:30.235 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:11:30.236 +04:00 [INF] Found 2 genres for search text: 'f'
2025-06-16 17:11:30.236 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:11:30.236 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 2.9499ms
2025-06-16 17:11:30.236 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:30.236 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=f - 200 null application/json; charset=utf-8 3.3774ms
2025-06-16 17:11:32.222 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=a - null null
2025-06-16 17:11:32.222 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:32.222 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:11:32.225 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:11:32.226 +04:00 [INF] Found 7 genres for search text: 'a'
2025-06-16 17:11:32.226 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:11:32.227 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 4.5953ms
2025-06-16 17:11:32.227 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:32.227 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=a - 200 null application/json; charset=utf-8 5.6608ms
2025-06-16 17:11:39.366 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=asas - null null
2025-06-16 17:11:39.366 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:39.366 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:11:39.413 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:11:39.414 +04:00 [INF] Found 1 genres for search text: 'asas'
2025-06-16 17:11:39.414 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:11:39.414 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 48.0404ms
2025-06-16 17:11:39.414 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:11:39.414 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=asas - 200 null application/json; charset=utf-8 48.7021ms
2025-06-16 17:12:41.518 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:12:41.518 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:12:41.518 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:12:41.541 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:12:41.542 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:12:41.543 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 24.2042ms
2025-06-16 17:12:41.543 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:12:41.543 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 25.0272ms
2025-06-16 17:14:29.829 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:14:29.829 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:14:29.829 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:14:29.849 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:14:29.850 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:14:29.850 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 20.7258ms
2025-06-16 17:14:29.850 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:14:29.850 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 21.3273ms
2025-06-16 17:14:59.893 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/genre/create - application/json; charset=utf-8 15
2025-06-16 17:14:59.893 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 17:14:59.896 +04:00 [INF] Route matched with {action = "Create", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Genre.GenreCreateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:15:00.004 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Genres] ([CreatedDate], [IsDeleted], [Name], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-06-16 17:15:00.029 +04:00 [INF] Genre 'cama' successfully created
2025-06-16 17:15:00.029 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreCreateDto'.
2025-06-16 17:15:00.030 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI) in 134.1877ms
2025-06-16 17:15:00.030 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 17:15:00.030 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/genre/create - 200 null application/json; charset=utf-8 137.423ms
2025-06-16 17:16:06.402 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/genre/create - application/json; charset=utf-8 16
2025-06-16 17:16:06.402 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 17:16:06.402 +04:00 [INF] Route matched with {action = "Create", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Genre.GenreCreateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:16:06.413 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Genres] ([CreatedDate], [IsDeleted], [Name], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-06-16 17:16:06.413 +04:00 [INF] Genre 'Bulud' successfully created
2025-06-16 17:16:06.413 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreCreateDto'.
2025-06-16 17:16:06.413 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI) in 11.2514ms
2025-06-16 17:16:06.413 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 17:16:06.413 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/genre/create - 200 null application/json; charset=utf-8 11.6921ms
2025-06-16 17:16:10.676 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:16:10.677 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:16:10.677 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:16:10.694 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:16:10.695 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:16:10.695 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 17.9847ms
2025-06-16 17:16:10.695 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:16:10.695 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 18.6305ms
2025-06-16 17:16:52.937 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/genre/create - application/json; charset=utf-8 16
2025-06-16 17:16:52.937 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 17:16:52.937 +04:00 [INF] Route matched with {action = "Create", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Genre.GenreCreateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:16:52.941 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Genres] ([CreatedDate], [IsDeleted], [Name], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-06-16 17:16:52.941 +04:00 [INF] Genre 'Halva' successfully created
2025-06-16 17:16:52.941 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreCreateDto'.
2025-06-16 17:16:52.942 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI) in 4.2214ms
2025-06-16 17:16:52.942 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-16 17:16:52.942 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/genre/create - 200 null application/json; charset=utf-8 4.8737ms
2025-06-16 17:16:52.965 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:16:52.966 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:16:52.966 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:16:52.967 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:16:52.968 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:16:52.968 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.1182ms
2025-06-16 17:16:52.968 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:16:52.968 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 2.8252ms
2025-06-16 17:18:11.920 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:18:11.920 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:18:11.920 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:18:11.942 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:18:11.942 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:18:11.942 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 21.9983ms
2025-06-16 17:18:11.942 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:18:11.942 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 22.6806ms
2025-06-16 17:18:15.480 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:18:15.480 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:18:15.480 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:18:15.500 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:18:15.501 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:18:15.502 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 21.0689ms
2025-06-16 17:18:15.502 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:18:15.502 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 21.5815ms
2025-06-16 17:26:39.349 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:26:39.349 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:26:39.349 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:26:39.418 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:26:39.418 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:26:39.419 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 69.2939ms
2025-06-16 17:26:39.419 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:26:39.419 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 69.7157ms
2025-06-16 17:26:48.111 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:26:48.111 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:26:48.112 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:26:48.113 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:26:48.114 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:26:48.114 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.4277ms
2025-06-16 17:26:48.114 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:26:48.114 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 3.0086ms
2025-06-16 17:27:29.589 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:27:29.590 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:27:29.590 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:27:29.611 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:27:29.612 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:27:29.612 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 21.6655ms
2025-06-16 17:27:29.612 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:27:29.612 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 23.0175ms
2025-06-16 17:27:33.398 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:27:33.398 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:27:33.398 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:27:33.400 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:27:33.401 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:27:33.401 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.3887ms
2025-06-16 17:27:33.401 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:27:33.401 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 2.9455ms
2025-06-16 17:27:39.382 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:27:39.382 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:27:39.383 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:27:39.384 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:27:39.384 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:27:39.385 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 1.898ms
2025-06-16 17:27:39.385 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:27:39.385 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 2.5953ms
2025-06-16 17:28:18.100 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:28:18.100 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:28:18.100 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:28:18.125 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:28:18.125 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:28:18.126 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 26.2642ms
2025-06-16 17:28:18.126 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:28:18.127 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 26.947ms
2025-06-16 17:28:25.104 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:28:25.104 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:28:25.105 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:28:25.106 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:28:25.107 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:28:25.107 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.6542ms
2025-06-16 17:28:25.107 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:28:25.107 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 3.0723ms
2025-06-16 17:28:26.295 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:28:26.296 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:28:26.296 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:28:26.297 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:28:26.298 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:28:26.298 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.068ms
2025-06-16 17:28:26.298 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:28:26.298 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 2.7396ms
2025-06-16 17:28:44.726 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:28:44.727 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:28:44.727 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:28:44.729 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:28:44.729 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:28:44.729 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.4675ms
2025-06-16 17:28:44.729 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:28:44.729 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 3.059ms
2025-06-16 17:37:21.718 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:37:21.718 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:37:21.718 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:37:21.792 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:37:21.793 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:37:21.793 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 74.8284ms
2025-06-16 17:37:21.793 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:37:21.793 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 75.4213ms
2025-06-16 17:38:00.449 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 17:38:00.576 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 17:38:00.577 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 17:38:00.666 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 17:38:00.666 +04:00 [INF] Hosting environment: Development
2025-06-16 17:38:00.667 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 17:38:01.192 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 17:38:01.363 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 171.6355ms
2025-06-16 17:38:01.671 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 17:38:01.671 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 17:38:01.675 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.9959ms
2025-06-16 17:38:01.702 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.5604ms
2025-06-16 17:38:02.250 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 17:38:02.292 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 42.037ms
2025-06-16 17:38:33.973 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:38:33.990 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:38:34.003 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:38:35.027 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 17:38:35.270 +04:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:38:35.413 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:38:35.422 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 1416.2509ms
2025-06-16 17:38:35.422 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:38:35.427 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 1453.8289ms
2025-06-16 17:40:46.020 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:40:46.023 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:40:46.024 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:40:46.089 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:40:46.091 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:40:46.092 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 67.762ms
2025-06-16 17:40:46.092 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:40:46.092 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 71.8225ms
2025-06-16 17:40:49.543 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:40:49.545 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:40:49.545 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:40:49.560 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:40:49.561 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:40:49.561 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 15.9591ms
2025-06-16 17:40:49.561 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:40:49.561 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 18.7879ms
2025-06-16 17:41:17.863 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:41:17.863 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:41:17.863 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:41:17.865 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:41:17.866 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:41:17.866 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.7864ms
2025-06-16 17:41:17.866 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:41:17.866 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 3.3542ms
2025-06-16 17:41:55.952 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:41:55.952 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:41:55.952 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:41:55.983 +04:00 [INF] Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:41:55.984 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:41:55.984 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 32.0424ms
2025-06-16 17:41:55.984 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:41:55.985 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 32.7555ms
2025-06-16 17:42:43.135 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:42:43.135 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:42:43.135 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:42:43.159 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:42:43.159 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:42:43.160 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 24.2868ms
2025-06-16 17:42:43.160 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:42:43.160 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 25.1026ms
2025-06-16 17:42:57.784 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:42:57.784 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:42:57.784 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:42:57.786 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:42:57.786 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:42:57.786 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 1.9598ms
2025-06-16 17:42:57.786 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:42:57.786 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 2.5451ms
2025-06-16 17:43:00.899 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:43:00.899 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:43:00.899 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:43:00.901 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:43:00.902 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:43:00.902 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.9343ms
2025-06-16 17:43:00.902 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:43:00.902 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 3.4688ms
2025-06-16 17:43:52.255 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:43:52.255 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:43:52.255 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:43:52.271 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:43:52.272 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:43:52.272 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 16.6775ms
2025-06-16 17:43:52.272 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:43:52.272 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 17.084ms
2025-06-16 17:44:17.107 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:44:17.107 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:44:17.107 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:44:17.123 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:44:17.124 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:44:17.124 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 16.9207ms
2025-06-16 17:44:17.124 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:44:17.124 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 17.4983ms
2025-06-16 17:45:09.122 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:45:09.123 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:45:09.123 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:45:09.143 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:45:09.144 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:45:09.144 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 21.4113ms
2025-06-16 17:45:09.144 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:45:09.144 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 22.0032ms
2025-06-16 17:47:32.699 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:47:32.700 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:47:32.700 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:47:32.722 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:47:32.723 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:47:32.723 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 23.385ms
2025-06-16 17:47:32.723 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:47:32.723 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 24.0786ms
2025-06-16 17:49:12.032 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:49:12.032 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:49:12.032 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:49:12.052 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:49:12.053 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:49:12.053 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 21.441ms
2025-06-16 17:49:12.053 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:49:12.053 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 21.943ms
2025-06-16 17:50:56.592 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:50:56.592 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:50:56.592 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:50:56.612 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:50:56.613 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:50:56.613 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 21.0108ms
2025-06-16 17:50:56.613 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:50:56.613 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 21.4158ms
2025-06-16 17:51:06.615 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:06.615 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:06.615 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:06.617 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:06.617 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:06.617 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 1.8566ms
2025-06-16 17:51:06.617 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:06.617 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 2.4406ms
2025-06-16 17:51:08.590 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:08.591 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:08.591 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:08.593 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:08.594 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:08.594 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.9358ms
2025-06-16 17:51:08.594 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:08.594 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 3.7879ms
2025-06-16 17:51:09.309 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:09.309 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:09.309 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:09.320 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:09.320 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:09.320 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 11.2361ms
2025-06-16 17:51:09.320 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:09.320 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 11.904ms
2025-06-16 17:51:09.720 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:09.721 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:09.721 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:09.732 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:09.733 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:09.733 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 12.4132ms
2025-06-16 17:51:09.733 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:09.733 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 12.7917ms
2025-06-16 17:51:09.977 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:09.977 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:09.977 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:09.990 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:09.991 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:09.991 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 13.7317ms
2025-06-16 17:51:09.991 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:09.991 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 14.3342ms
2025-06-16 17:51:10.428 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:10.428 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:10.428 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:10.445 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:10.446 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:10.446 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 18.1534ms
2025-06-16 17:51:10.446 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:10.446 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 18.692ms
2025-06-16 17:51:11.532 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:11.532 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:11.532 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:11.547 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:11.547 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:11.547 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 15.2256ms
2025-06-16 17:51:11.547 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:11.547 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 15.7861ms
2025-06-16 17:51:12.244 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:12.244 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:12.244 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:12.256 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:12.257 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:12.257 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 12.2647ms
2025-06-16 17:51:12.257 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:12.257 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 12.629ms
2025-06-16 17:51:12.829 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:12.829 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:12.829 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:12.856 +04:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:12.857 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:12.857 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 28.168ms
2025-06-16 17:51:12.857 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:12.857 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 28.744ms
2025-06-16 17:51:13.069 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:13.069 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:13.069 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:13.091 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:13.092 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:13.092 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 22.7068ms
2025-06-16 17:51:13.092 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:13.092 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 23.2699ms
2025-06-16 17:51:13.269 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:13.269 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:13.269 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:13.320 +04:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:13.321 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:13.321 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 51.6003ms
2025-06-16 17:51:13.321 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:13.321 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 52.0984ms
2025-06-16 17:51:13.635 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:13.636 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:13.636 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:13.658 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:13.659 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:13.659 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 23.2394ms
2025-06-16 17:51:13.659 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:13.659 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 23.6711ms
2025-06-16 17:51:13.960 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:13.960 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:13.961 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:13.992 +04:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:13.992 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:13.993 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 31.8579ms
2025-06-16 17:51:13.993 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:13.993 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 32.4685ms
2025-06-16 17:51:14.293 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:51:14.293 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:14.294 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:51:14.314 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:51:14.314 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:51:14.314 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 20.6747ms
2025-06-16 17:51:14.314 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:51:14.315 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 21.6343ms
2025-06-16 17:52:57.668 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 17:52:57.842 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 17:52:57.842 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 17:52:57.926 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 17:52:57.927 +04:00 [INF] Hosting environment: Development
2025-06-16 17:52:57.927 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 17:52:58.265 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 17:52:58.380 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:52:58.398 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 134.8388ms
2025-06-16 17:52:58.401 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:52:58.420 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:52:58.500 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 17:52:58.503 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 17:52:58.504 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.5346ms
2025-06-16 17:52:58.523 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.053ms
2025-06-16 17:52:58.839 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 17:52:58.872 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 32.5895ms
2025-06-16 17:52:59.515 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 17:52:59.748 +04:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:52:59.902 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:52:59.913 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 1490.2287ms
2025-06-16 17:52:59.913 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:52:59.918 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 1538.4051ms
2025-06-16 17:53:25.950 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:53:25.953 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:25.953 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:53:26.009 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:53:26.011 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:53:26.012 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 58.7795ms
2025-06-16 17:53:26.012 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:26.012 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 62.5267ms
2025-06-16 17:53:35.070 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:53:35.072 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:35.072 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:53:35.096 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:53:35.099 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:53:35.100 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 27.1771ms
2025-06-16 17:53:35.100 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:35.100 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 30.2842ms
2025-06-16 17:53:37.251 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:53:37.252 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:37.252 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:53:37.254 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:53:37.255 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:53:37.256 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 3.3421ms
2025-06-16 17:53:37.256 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:37.256 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 4.4851ms
2025-06-16 17:53:38.315 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:53:38.315 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:38.315 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:53:38.317 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:53:38.319 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:53:38.319 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 3.7552ms
2025-06-16 17:53:38.319 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:38.320 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 4.4945ms
2025-06-16 17:53:39.019 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:53:39.019 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:39.019 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:53:39.021 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:53:39.021 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:53:39.022 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 2.2506ms
2025-06-16 17:53:39.022 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:39.022 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 2.7808ms
2025-06-16 17:53:41.893 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:53:41.894 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:41.894 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:53:41.898 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:53:41.899 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:53:41.900 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 5.3083ms
2025-06-16 17:53:41.900 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:41.900 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 7.0292ms
2025-06-16 17:53:49.164 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getall - null null
2025-06-16 17:53:49.165 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:49.165 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:53:49.167 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:53:49.168 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:53:49.168 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 3.0559ms
2025-06-16 17:53:49.168 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-16 17:53:49.169 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getall - 200 null application/json; charset=utf-8 4.1663ms
2025-06-16 17:53:58.334 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=gen - null null
2025-06-16 17:53:58.335 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:53:58.343 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 17:53:58.377 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 17:53:58.409 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 17:53:58.410 +04:00 [INF] Found 1 genres for search text: 'gen'
2025-06-16 17:53:58.410 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 17:53:58.410 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 67.6185ms
2025-06-16 17:53:58.410 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 17:53:58.410 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=gen - 200 null application/json; charset=utf-8 76.069ms
2025-06-16 18:19:51.864 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 18:19:52.011 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 18:19:52.011 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 18:19:52.071 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 18:19:52.071 +04:00 [INF] Hosting environment: Development
2025-06-16 18:19:52.071 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 18:19:52.615 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 18:19:52.740 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 125.4121ms
2025-06-16 18:19:52.753 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 18:19:52.759 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 5.7041ms
2025-06-16 18:19:52.969 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 18:19:52.995 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 26.0311ms
2025-06-16 18:19:53.355 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 18:19:53.397 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 40.7562ms
2025-06-16 18:20:03.922 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1&take=5 - null null
2025-06-16 18:20:03.936 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 18:20:03.953 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 18:20:04.826 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 18:20:04.826 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 18:20:04.940 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 18:20:05.208 +04:00 [INF] Executed DbCommand (59ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 18:20:05.379 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 18:20:05.384 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 18:20:05.395 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1439.7241ms
2025-06-16 18:20:05.396 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 18:20:05.401 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1&take=5 - 200 null application/json; charset=utf-8 1479.5021ms
2025-06-16 18:22:39.715 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1&take=5 - null null
2025-06-16 18:22:39.718 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 18:22:39.719 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 18:22:39.796 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 18:22:39.799 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 18:22:39.800 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 18:22:39.800 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 80.8089ms
2025-06-16 18:22:39.800 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 18:22:39.800 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1&take=5 - 200 null application/json; charset=utf-8 85.6643ms
2025-06-16 18:25:13.787 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-16 18:25:13.789 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 18:25:13.790 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 18:25:13.819 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 18:25:13.821 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 18:25:13.821 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 18:25:13.821 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 31.5748ms
2025-06-16 18:25:13.821 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 18:25:13.821 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 34.1594ms
2025-06-16 18:28:58.767 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 18:28:58.914 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 18:28:58.914 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 18:28:58.978 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 18:28:58.978 +04:00 [INF] Hosting environment: Development
2025-06-16 18:28:58.978 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 18:28:59.499 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 18:28:59.627 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 130.2957ms
2025-06-16 18:28:59.905 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 18:28:59.906 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 18:28:59.908 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 2.746ms
2025-06-16 18:28:59.932 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 25.9185ms
2025-06-16 18:29:00.442 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 18:29:00.477 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.563ms
2025-06-16 18:29:08.421 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-16 18:29:08.435 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 18:29:08.451 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 18:29:09.341 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 18:29:09.342 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 18:29:09.465 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 18:29:09.697 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 18:29:09.855 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 18:29:09.860 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 18:29:09.870 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1416.351ms
2025-06-16 18:29:09.871 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 18:29:09.876 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1454.6879ms
2025-06-16 18:32:54.468 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-16 18:32:54.470 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 18:32:54.470 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 18:32:54.538 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 18:32:54.542 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 18:32:54.542 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 18:32:54.543 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 72.3871ms
2025-06-16 18:32:54.543 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 18:32:54.543 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 75.5459ms
2025-06-16 18:33:07.318 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=gen - null null
2025-06-16 18:33:07.320 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 18:33:07.325 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 18:33:07.375 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 18:33:07.413 +04:00 [INF] Executed DbCommand (29ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 18:33:07.414 +04:00 [INF] Found 1 genres for search text: 'gen'
2025-06-16 18:33:07.419 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 18:33:07.420 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 94.3349ms
2025-06-16 18:33:07.420 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 18:33:07.420 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=gen - 200 null application/json; charset=utf-8 102.2927ms
2025-06-16 22:44:48.092 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 22:44:48.213 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 22:44:48.214 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 22:44:48.269 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 22:44:48.269 +04:00 [INF] Hosting environment: Development
2025-06-16 22:44:48.270 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 22:44:48.741 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 22:44:48.861 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 121.1828ms
2025-06-16 22:44:48.875 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 22:44:48.878 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.7113ms
2025-06-16 22:44:48.881 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 22:44:48.902 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.6763ms
2025-06-16 22:44:49.067 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 22:44:49.093 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 25.4079ms
2025-06-16 22:45:04.009 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-16 22:45:04.031 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 22:45:04.050 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 22:45:05.042 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 22:45:05.043 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 22:45:05.158 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 22:45:05.537 +04:00 [INF] Executed DbCommand (71ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 22:45:05.695 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 22:45:05.702 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 22:45:05.713 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1660.3431ms
2025-06-16 22:45:05.714 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 22:45:05.719 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1710.2536ms
2025-06-16 22:46:13.675 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-16 22:46:13.680 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 22:46:13.681 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 22:46:13.755 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 22:46:13.758 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 22:46:13.758 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 22:46:13.758 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 77.8325ms
2025-06-16 22:46:13.759 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 22:46:13.759 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 83.504ms
2025-06-16 22:46:21.524 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-16 22:46:21.526 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 22:46:21.526 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 22:46:21.538 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 22:46:21.540 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 22:46:21.540 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 22:46:21.540 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 13.9345ms
2025-06-16 22:46:21.541 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 22:46:21.541 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 16.7455ms
2025-06-16 22:52:01.430 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-16 22:52:01.431 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 22:52:01.431 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 22:52:01.502 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 22:52:01.504 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 22:52:01.504 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 22:52:01.504 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 73.5423ms
2025-06-16 22:52:01.504 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 22:52:01.505 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 74.1497ms
2025-06-16 23:03:15.074 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAllPaginated?page=3 - null null
2025-06-16 23:03:15.074 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:03:15.075 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:03:15.146 +04:00 [INF] Executed DbCommand (25ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:03:15.148 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:03:15.149 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:03:15.149 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 74.3769ms
2025-06-16 23:03:15.149 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:03:15.149 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAllPaginated?page=3 - 200 null application/json; charset=utf-8 75.207ms
2025-06-16 23:05:22.526 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 23:05:22.654 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 23:05:22.655 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 23:05:22.710 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 23:05:22.710 +04:00 [INF] Hosting environment: Development
2025-06-16 23:05:22.711 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 23:05:23.186 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 23:05:23.296 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 111.1618ms
2025-06-16 23:05:23.315 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 23:05:23.315 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 23:05:23.319 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.664ms
2025-06-16 23:05:23.337 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.3934ms
2025-06-16 23:05:23.410 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 23:05:23.441 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 31.4551ms
2025-06-16 23:06:04.546 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-16 23:06:04.560 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:04.575 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:05.388 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 23:06:05.389 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 23:06:05.496 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 23:06:05.732 +04:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:05.877 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:05.882 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:05.893 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1316.2169ms
2025-06-16 23:06:05.893 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:05.897 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1350.557ms
2025-06-16 23:06:12.468 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-16 23:06:12.471 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:12.471 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:12.511 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 23:06:12.511 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 23:06:12.523 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 23:06:12.538 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:12.540 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:12.541 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:12.541 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 69.9471ms
2025-06-16 23:06:12.541 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:12.541 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 73.5603ms
2025-06-16 23:06:13.514 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-16 23:06:13.517 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:13.517 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:13.530 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:13.532 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:13.532 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:13.532 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 15.2388ms
2025-06-16 23:06:13.532 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:13.532 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 18.4698ms
2025-06-16 23:06:14.537 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-16 23:06:14.537 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:14.537 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:14.540 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:14.541 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:14.541 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:14.541 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.9867ms
2025-06-16 23:06:14.541 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:14.541 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 4.4868ms
2025-06-16 23:06:15.715 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - null null
2025-06-16 23:06:15.715 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:15.715 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:15.718 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:15.720 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:15.721 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:15.721 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 5.6084ms
2025-06-16 23:06:15.721 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:15.721 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - 200 null application/json; charset=utf-8 6.5976ms
2025-06-16 23:06:17.081 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-16 23:06:17.082 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:17.082 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:17.084 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:17.085 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:17.085 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:17.086 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.0544ms
2025-06-16 23:06:17.086 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:17.086 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 4.694ms
2025-06-16 23:06:17.889 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-16 23:06:17.889 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:17.889 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:17.891 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:17.892 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:17.893 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:17.893 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.4128ms
2025-06-16 23:06:17.893 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:17.893 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 3.9679ms
2025-06-16 23:06:18.497 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-16 23:06:18.497 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:18.497 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:18.499 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:18.500 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:18.501 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:18.501 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.6714ms
2025-06-16 23:06:18.501 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:18.501 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.1181ms
2025-06-16 23:06:20.144 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-16 23:06:20.145 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:20.145 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:20.147 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:20.148 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:20.148 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:20.149 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.8971ms
2025-06-16 23:06:20.149 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:20.149 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 4.3991ms
2025-06-16 23:06:20.808 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-16 23:06:20.808 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:20.808 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:20.810 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:20.812 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:20.812 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:20.812 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.5279ms
2025-06-16 23:06:20.812 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:20.812 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 3.9454ms
2025-06-16 23:06:21.455 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - null null
2025-06-16 23:06:21.456 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:21.456 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:21.457 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:21.459 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:21.459 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:21.459 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.2726ms
2025-06-16 23:06:21.459 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:21.459 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - 200 null application/json; charset=utf-8 3.7422ms
2025-06-16 23:06:22.368 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-16 23:06:22.369 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:22.369 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:22.371 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:22.372 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:22.372 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:22.372 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.4963ms
2025-06-16 23:06:22.372 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:22.372 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 3.8695ms
2025-06-16 23:06:22.728 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-16 23:06:22.728 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:22.729 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:22.730 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:22.731 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:22.731 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:22.732 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.9578ms
2025-06-16 23:06:22.732 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:22.732 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 3.2961ms
2025-06-16 23:06:23.072 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-16 23:06:23.072 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:23.072 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:23.074 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:23.076 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:23.076 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:23.076 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.5985ms
2025-06-16 23:06:23.076 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:23.076 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 4.1533ms
2025-06-16 23:06:23.840 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-16 23:06:23.840 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:23.840 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:23.842 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:06:23.843 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:06:23.844 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:23.844 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.7254ms
2025-06-16 23:06:23.844 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:06:23.844 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.2022ms
2025-06-16 23:06:30.005 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=g - null null
2025-06-16 23:06:30.006 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 23:06:30.009 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:06:30.034 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 23:06:30.055 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 23:06:30.056 +04:00 [INF] Found 1 genres for search text: 'g'
2025-06-16 23:06:30.060 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:06:30.060 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 50.5727ms
2025-06-16 23:06:30.060 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 23:06:30.060 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=g - 200 null application/json; charset=utf-8 54.7908ms
2025-06-16 23:14:57.652 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=g - null null
2025-06-16 23:14:57.652 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 23:14:57.652 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:14:57.719 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 23:14:57.719 +04:00 [INF] Found 1 genres for search text: 'g'
2025-06-16 23:14:57.719 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:14:57.720 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 67.2821ms
2025-06-16 23:14:57.720 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 23:14:57.720 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=g - 200 null application/json; charset=utf-8 67.7064ms
2025-06-16 23:27:28.607 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 23:27:28.745 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 23:27:28.746 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 23:27:28.823 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 23:27:28.823 +04:00 [INF] Hosting environment: Development
2025-06-16 23:27:28.823 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 23:27:28.887 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 23:27:29.013 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 126.557ms
2025-06-16 23:27:29.026 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 23:27:29.026 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 23:27:29.030 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.9674ms
2025-06-16 23:27:29.052 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 26.2143ms
2025-06-16 23:27:29.116 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 23:27:29.134 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 17.6574ms
2025-06-16 23:27:38.527 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-16 23:27:38.540 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:27:38.556 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:27:39.480 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 23:27:39.480 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 23:27:39.586 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 23:27:39.827 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:27:39.974 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:27:39.979 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:27:39.989 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1430.9954ms
2025-06-16 23:27:39.989 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:27:39.994 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1466.9376ms
2025-06-16 23:27:45.154 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=a - null null
2025-06-16 23:27:45.158 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 23:27:45.162 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:27:45.223 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 23:27:45.238 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 23:27:45.239 +04:00 [INF] Found 9 genres for search text: 'a'
2025-06-16 23:27:45.245 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:27:45.245 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 82.47ms
2025-06-16 23:27:45.245 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 23:27:45.245 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=a - 200 null application/json; charset=utf-8 91.1641ms
2025-06-16 23:52:14.110 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=a - null null
2025-06-16 23:52:14.112 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 23:52:14.112 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:52:14.208 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-16 23:52:14.209 +04:00 [INF] Found 9 genres for search text: 'a'
2025-06-16 23:52:14.209 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:52:14.210 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 97.0728ms
2025-06-16 23:52:14.210 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-16 23:52:14.210 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=a - 200 null application/json; charset=utf-8 99.5353ms
2025-06-16 23:53:08.680 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 23:53:08.807 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 23:53:08.807 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 23:53:08.862 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 23:53:08.862 +04:00 [INF] Hosting environment: Development
2025-06-16 23:53:08.862 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 23:53:09.320 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 23:53:09.431 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 113.3482ms
2025-06-16 23:53:09.445 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 23:53:09.445 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 23:53:09.450 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.0781ms
2025-06-16 23:53:09.470 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 24.7247ms
2025-06-16 23:53:09.510 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 23:53:09.539 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 29.1317ms
2025-06-16 23:53:36.712 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-16 23:53:36.843 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-16 23:53:36.843 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-16 23:53:36.901 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-16 23:53:36.901 +04:00 [INF] Hosting environment: Development
2025-06-16 23:53:36.902 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-16 23:53:37.495 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-16 23:53:37.619 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 124.8118ms
2025-06-16 23:53:37.637 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-16 23:53:37.637 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-16 23:53:37.641 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.9718ms
2025-06-16 23:53:37.664 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 27.1599ms
2025-06-16 23:53:37.717 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-16 23:53:37.751 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 33.3415ms
2025-06-16 23:53:51.337 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-16 23:53:51.350 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:53:51.367 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-16 23:53:52.190 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 23:53:52.190 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-16 23:53:52.316 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-16 23:53:52.589 +04:00 [INF] Executed DbCommand (51ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-16 23:53:52.741 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-16 23:53:52.746 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-16 23:53:52.758 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1387.3671ms
2025-06-16 23:53:52.758 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-16 23:53:52.764 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1427.6092ms
