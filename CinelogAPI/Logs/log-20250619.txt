2025-06-19 14:12:51.243 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 14:12:51.374 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 14:12:51.375 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 14:12:51.439 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 14:12:51.439 +04:00 [INF] Hosting environment: Development
2025-06-19 14:12:51.439 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 14:12:51.629 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 14:12:51.760 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 131.957ms
2025-06-19 14:12:51.777 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 14:12:51.781 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.7113ms
2025-06-19 14:12:51.997 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 14:12:52.026 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 28.757ms
2025-06-19 14:12:52.364 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 14:12:52.397 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 32.483ms
2025-06-19 14:13:12.227 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 14:13:12.247 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 14:13:12.262 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 14:13:13.364 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 14:13:13.365 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 14:13:13.482 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 14:13:13.888 +04:00 [INF] Executed DbCommand (86ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 14:13:14.015 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 14:13:14.020 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 14:13:14.032 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 1766.2864ms
2025-06-19 14:13:14.032 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 14:13:14.038 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1811.2353ms
2025-06-19 14:13:14.062 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - null null
2025-06-19 14:13:14.062 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict Cumberbatch.jpg - null null
2025-06-19 14:13:14.066 +04:00 [INF] The file /images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg was not modified
2025-06-19 14:13:14.066 +04:00 [INF] The file /images/a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict Cumberbatch.jpg was not modified
2025-06-19 14:13:14.066 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict Cumberbatch.jpg - 304 null image/jpeg 4.4926ms
2025-06-19 14:13:14.066 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - 304 null image/jpeg 4.5158ms
2025-06-19 14:13:14.287 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/c2cb2386-7210-4e98-a9a4-40725cbf7dd5-cvphoto.JPEG - null null
2025-06-19 14:13:14.289 +04:00 [INF] The file /images/c2cb2386-7210-4e98-a9a4-40725cbf7dd5-cvphoto.JPEG was not modified
2025-06-19 14:13:14.289 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/c2cb2386-7210-4e98-a9a4-40725cbf7dd5-cvphoto.JPEG - 304 null image/jpeg 2.1633ms
2025-06-19 14:13:30.359 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - null null
2025-06-19 14:13:30.361 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:13:30.365 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 14:13:30.435 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 14:13:30.450 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 14:13:30.454 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 14:13:30.455 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 88.9396ms
2025-06-19 14:13:30.455 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:13:30.455 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - 200 null application/json; charset=utf-8 96.2157ms
2025-06-19 14:34:53.681 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - null null
2025-06-19 14:34:53.682 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:34:53.682 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 14:34:53.766 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 14:34:53.767 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 14:34:53.767 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 85.0705ms
2025-06-19 14:34:53.767 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:34:53.767 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - 200 null application/json; charset=utf-8 85.9037ms
2025-06-19 14:35:11.713 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 14:35:11.832 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 14:35:11.832 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 14:35:11.891 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 14:35:11.891 +04:00 [INF] Hosting environment: Development
2025-06-19 14:35:11.891 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 14:35:23.675 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 14:35:23.805 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 130.9648ms
2025-06-19 14:35:23.822 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 14:35:23.826 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.1865ms
2025-06-19 14:35:24.018 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 14:35:24.041 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.7954ms
2025-06-19 14:35:24.362 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 14:35:24.397 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.9387ms
2025-06-19 14:35:30.273 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 14:35:30.285 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 14:35:30.299 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 14:35:31.056 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 14:35:31.056 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 14:35:31.174 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 14:35:31.418 +04:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 14:35:31.560 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 14:35:31.565 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 14:35:31.576 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 1274.7479ms
2025-06-19 14:35:31.577 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 14:35:31.581 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1307.5053ms
2025-06-19 14:35:41.585 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 14:35:41.588 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 14:35:41.588 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 14:35:41.628 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 14:35:41.630 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 14:35:41.631 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 14:35:41.631 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 42.9384ms
2025-06-19 14:35:41.631 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 14:35:41.631 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 46.2826ms
2025-06-19 14:35:51.727 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - null null
2025-06-19 14:35:51.729 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:35:51.733 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 14:35:51.760 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 14:35:51.773 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 14:35:51.778 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 14:35:51.778 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 44.9927ms
2025-06-19 14:35:51.778 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:35:51.778 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - 200 null application/json; charset=utf-8 51.188ms
2025-06-19 14:37:21.773 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - null null
2025-06-19 14:37:21.774 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:37:21.774 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 14:37:21.791 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 14:37:21.791 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 14:37:21.791 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 17.2719ms
2025-06-19 14:37:21.791 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:37:21.792 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - 200 null application/json; charset=utf-8 18.1328ms
2025-06-19 14:57:38.047 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 14:57:38.174 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 14:57:38.174 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 14:57:38.232 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 14:57:38.233 +04:00 [INF] Hosting environment: Development
2025-06-19 14:57:38.233 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 14:57:38.645 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 14:57:38.754 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - null null
2025-06-19 14:57:38.755 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 110.9617ms
2025-06-19 14:57:38.770 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:57:38.790 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 14:57:38.908 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 14:57:38.908 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 14:57:38.911 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 2.7543ms
2025-06-19 14:57:38.927 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 18.809ms
2025-06-19 14:57:39.150 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 14:57:39.177 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 26.9819ms
2025-06-19 14:57:39.764 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 14:57:40.009 +04:00 [INF] Executed DbCommand (47ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 14:57:40.087 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 14:57:40.095 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 1303.3021ms
2025-06-19 14:57:40.095 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:57:40.099 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - 200 null application/json; charset=utf-8 1345.5895ms
2025-06-19 14:57:56.869 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 14:57:56.873 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 14:57:56.877 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 14:57:56.927 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 14:57:56.928 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 14:57:56.941 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 14:57:56.958 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 14:57:57.028 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 14:57:57.029 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 14:57:57.033 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 155.6001ms
2025-06-19 14:57:57.033 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 14:57:57.033 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 163.7159ms
2025-06-19 14:58:11.977 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 14:58:11.980 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:58:11.980 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 14:58:12.008 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 14:58:12.009 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 14:58:12.009 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 29.6923ms
2025-06-19 14:58:12.010 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:58:12.010 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 32.8731ms
2025-06-19 14:59:54.378 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 14:59:54.379 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:59:54.379 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 14:59:54.394 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 14:59:54.395 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 14:59:54.395 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 16.2095ms
2025-06-19 14:59:54.395 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:59:54.396 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 17.7919ms
2025-06-19 14:59:58.990 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 14:59:58.991 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:59:58.991 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 14:59:58.993 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 14:59:58.993 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 14:59:58.993 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.5011ms
2025-06-19 14:59:58.994 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 14:59:58.994 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 3.2998ms
2025-06-19 15:00:26.309 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 15:00:26.309 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 15:00:26.309 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 15:00:26.325 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 15:00:26.326 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 15:00:26.326 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 17.2865ms
2025-06-19 15:00:26.326 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 15:00:26.327 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 18.0176ms
2025-06-19 15:01:08.879 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 15:01:09.001 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 15:01:09.002 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 15:01:09.058 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 15:01:09.058 +04:00 [INF] Hosting environment: Development
2025-06-19 15:01:09.058 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 15:01:18.385 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 15:01:18.420 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 15:01:18.435 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 15:01:19.254 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 15:01:19.254 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 15:01:19.361 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 15:01:19.592 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 15:01:19.719 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 15:01:19.723 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 15:01:19.734 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 1296.9298ms
2025-06-19 15:01:19.735 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 15:01:19.740 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1356.8223ms
2025-06-19 15:01:23.611 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 15:01:23.614 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 15:01:23.618 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 15:01:23.676 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 15:01:23.690 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 15:01:23.695 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 15:01:23.695 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 77.0182ms
2025-06-19 15:01:23.696 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 15:01:23.696 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 85.1551ms
2025-06-19 15:06:41.423 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 15:06:41.642 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 15:06:41.643 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 15:06:41.717 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 15:06:41.718 +04:00 [INF] Hosting environment: Development
2025-06-19 15:06:41.718 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 15:06:42.172 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 15:06:42.334 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 169.0646ms
2025-06-19 15:06:42.346 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 15:06:42.351 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.9984ms
2025-06-19 15:06:42.601 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 15:06:42.654 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 54.6202ms
2025-06-19 15:06:43.002 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 15:06:43.034 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 32.3883ms
2025-06-19 15:06:55.813 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 15:06:55.835 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 15:06:55.855 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 15:06:56.825 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 15:06:56.826 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 15:06:56.972 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 15:06:57.358 +04:00 [INF] Executed DbCommand (74ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 15:06:57.519 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 15:06:57.526 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 15:06:57.538 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 1681.2164ms
2025-06-19 15:06:57.539 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 15:06:57.544 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1731.245ms
2025-06-19 15:15:11.403 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 15:15:11.626 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 15:15:11.627 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 15:15:11.763 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 15:15:11.764 +04:00 [INF] Hosting environment: Development
2025-06-19 15:15:11.764 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 15:15:12.299 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 15:15:12.466 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 176.1042ms
2025-06-19 15:15:12.488 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 15:15:12.496 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 7.9842ms
2025-06-19 15:15:12.684 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 15:15:12.718 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 34.3717ms
2025-06-19 15:15:13.008 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 15:15:13.045 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 36.7115ms
2025-06-19 15:15:38.515 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 15:15:38.540 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 15:15:38.560 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 15:15:39.661 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 15:15:39.992 +04:00 [INF] Executed DbCommand (55ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 15:15:40.080 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 15:15:40.090 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 1527.51ms
2025-06-19 15:15:40.090 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 15:15:40.096 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 1582.0328ms
2025-06-19 15:20:13.788 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 15:20:13.934 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 15:20:13.934 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 15:20:13.995 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 15:20:13.995 +04:00 [INF] Hosting environment: Development
2025-06-19 15:20:13.995 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 15:20:14.498 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 15:20:14.618 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 120.8624ms
2025-06-19 15:20:14.629 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 15:20:14.634 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.3783ms
2025-06-19 15:20:14.849 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 15:20:14.874 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 24.835ms
2025-06-19 15:20:15.277 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 15:20:15.319 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 41.5663ms
2025-06-19 15:20:23.195 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 15:20:23.208 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 15:20:23.223 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 15:20:24.136 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 15:20:24.357 +04:00 [INF] Executed DbCommand (42ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 15:20:24.429 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 15:20:24.436 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 1211.1759ms
2025-06-19 15:20:24.437 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 15:20:24.441 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 1245.4216ms
2025-06-19 15:45:42.140 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 15:45:42.144 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 15:45:42.145 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 15:45:42.251 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 15:45:42.252 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 15:45:42.252 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 107.7835ms
2025-06-19 15:45:42.253 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 15:45:42.253 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 112.5865ms
2025-06-19 15:45:50.592 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 15:45:50.594 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 15:45:50.598 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 15:45:50.616 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 15:45:50.616 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 15:45:50.628 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 15:45:50.648 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 15:45:50.710 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 15:45:50.712 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 15:45:50.715 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 117.18ms
2025-06-19 15:45:50.715 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 15:45:50.715 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 123.3462ms
2025-06-19 15:46:04.136 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - null null
2025-06-19 15:46:04.137 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 15:46:04.137 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 15:46:04.139 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 15:46:04.140 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 15:46:04.140 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 3.2848ms
2025-06-19 15:46:04.140 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 15:46:04.140 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - 200 null application/json; charset=utf-8 4.073ms
2025-06-19 16:05:39.859 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - null null
2025-06-19 16:05:39.859 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:05:39.859 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:05:39.921 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:05:39.922 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:05:39.922 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 62.5812ms
2025-06-19 16:05:39.922 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:05:39.922 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/9 - 200 null application/json; charset=utf-8 63.258ms
2025-06-19 16:05:59.820 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:05:59.820 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:05:59.820 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:05:59.839 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:05:59.841 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:05:59.842 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:05:59.842 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 21.191ms
2025-06-19 16:05:59.842 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:05:59.842 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 22.5447ms
2025-06-19 16:06:02.752 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:06:02.752 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:06:02.752 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:06:02.755 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:06:02.755 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:06:02.755 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.9491ms
2025-06-19 16:06:02.756 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:06:02.756 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 3.5293ms
2025-06-19 16:06:05.146 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:06:05.146 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:06:05.147 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:06:05.148 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:06:05.149 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:06:05.149 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.3413ms
2025-06-19 16:06:05.149 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:06:05.149 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 2.9036ms
2025-06-19 16:06:08.234 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:06:08.234 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:06:08.234 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:06:08.237 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:06:08.238 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:06:08.239 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:06:08.239 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 4.7082ms
2025-06-19 16:06:08.239 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:06:08.239 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.4948ms
2025-06-19 16:06:13.170 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:06:13.170 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:06:13.170 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:06:13.172 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:06:13.173 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:06:13.173 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.8332ms
2025-06-19 16:06:13.173 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:06:13.173 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 3.7723ms
2025-06-19 16:06:14.489 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:06:14.489 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:06:14.490 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:06:14.492 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:06:14.493 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:06:14.493 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 3.4278ms
2025-06-19 16:06:14.493 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:06:14.493 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 4.1721ms
2025-06-19 16:06:42.285 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/actor/10 - multipart/form-data; boundary="2f1c8fb8-919e-4e85-8a61-fe8d49779b66" 470
2025-06-19 16:06:42.286 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/actor/10 - 404 0 null 0.3953ms
2025-06-19 16:06:42.286 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: PUT https://localhost:7209/api/actor/10, Response status code: 404
2025-06-19 16:06:49.674 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:06:49.674 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:06:49.674 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:06:49.697 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:06:49.699 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:06:49.699 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:06:49.699 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 24.6341ms
2025-06-19 16:06:49.699 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:06:49.699 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 25.1124ms
2025-06-19 16:06:51.873 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:06:51.873 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:06:51.873 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:06:51.882 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:06:51.882 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:06:51.882 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 9.0558ms
2025-06-19 16:06:51.882 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:06:51.883 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 9.8081ms
2025-06-19 16:07:01.841 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:07:01.842 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:07:01.842 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:07:01.844 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:07:01.844 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:07:01.845 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.7255ms
2025-06-19 16:07:01.845 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:07:01.845 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 3.4868ms
2025-06-19 16:07:10.447 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/actor/10 - multipart/form-data; boundary="96c37f1b-2d2c-4428-b0d8-211c9eb6c33c" 470
2025-06-19 16:07:10.447 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/actor/10 - 404 0 null 0.5582ms
2025-06-19 16:07:10.447 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: PUT https://localhost:7209/api/actor/10, Response status code: 404
2025-06-19 16:07:11.869 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/actor/10 - multipart/form-data; boundary="ba847ce4-f7d7-42db-a9ac-213fbb346b3c" 470
2025-06-19 16:07:11.870 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/actor/10 - 404 0 null 0.2279ms
2025-06-19 16:07:11.870 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: PUT https://localhost:7209/api/actor/10, Response status code: 404
2025-06-19 16:07:12.653 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/actor/10 - multipart/form-data; boundary="b498631c-7c4e-468f-b5a1-4fda04dcd489" 470
2025-06-19 16:07:12.653 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/actor/10 - 404 0 null 0.3077ms
2025-06-19 16:07:12.653 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: PUT https://localhost:7209/api/actor/10, Response status code: 404
2025-06-19 16:07:19.745 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:07:19.746 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:07:19.746 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:07:19.748 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:07:19.749 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:07:19.750 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:07:19.750 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 4.3367ms
2025-06-19 16:07:19.750 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:07:19.751 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.2119ms
2025-06-19 16:07:22.833 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:07:22.833 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:07:22.833 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:07:22.836 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:07:22.837 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:07:22.838 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:07:22.838 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 4.572ms
2025-06-19 16:07:22.838 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:07:22.838 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.4188ms
2025-06-19 16:07:24.616 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:07:24.616 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:07:24.616 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:07:24.618 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:07:24.619 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:07:24.619 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:07:24.620 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.3491ms
2025-06-19 16:07:24.620 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:07:24.620 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.7744ms
2025-06-19 16:07:26.336 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:07:26.336 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:07:26.336 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:07:26.338 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:07:26.339 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:07:26.339 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.7591ms
2025-06-19 16:07:26.339 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:07:26.339 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 3.2887ms
2025-06-19 16:07:28.017 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:07:28.017 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:07:28.017 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:07:28.019 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:07:28.019 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:07:28.019 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.1121ms
2025-06-19 16:07:28.019 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:07:28.019 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 2.6724ms
2025-06-19 16:07:39.196 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/actor/10 - multipart/form-data; boundary="e699a1ba-883e-4234-8adb-fad80f795883" 474
2025-06-19 16:07:39.196 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/actor/10 - 404 0 null 0.2365ms
2025-06-19 16:07:39.196 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: PUT https://localhost:7209/api/actor/10, Response status code: 404
2025-06-19 16:07:40.294 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/actor/10 - multipart/form-data; boundary="c72e829b-76e0-40a3-8db9-c22916ac96cf" 474
2025-06-19 16:07:40.295 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/actor/10 - 404 0 null 0.2537ms
2025-06-19 16:07:40.295 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: PUT https://localhost:7209/api/actor/10, Response status code: 404
2025-06-19 16:07:41.665 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:07:41.665 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:07:41.665 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:07:41.685 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:07:41.688 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:07:41.688 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:07:41.688 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 22.451ms
2025-06-19 16:07:41.688 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:07:41.688 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 23.0481ms
2025-06-19 16:07:43.160 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:07:43.160 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:07:43.161 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:07:43.168 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:07:43.168 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:07:43.169 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 8.054ms
2025-06-19 16:07:43.169 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:07:43.169 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 8.5086ms
2025-06-19 16:08:19.434 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 16:08:19.638 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 16:08:19.639 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 16:08:19.707 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 16:08:19.707 +04:00 [INF] Hosting environment: Development
2025-06-19 16:08:19.707 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 16:08:20.240 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 16:08:20.496 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 263.6257ms
2025-06-19 16:08:20.761 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 16:08:20.761 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 16:08:20.775 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 14.7541ms
2025-06-19 16:08:20.809 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 48.8317ms
2025-06-19 16:08:21.071 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 16:08:21.102 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 30.8304ms
2025-06-19 16:08:30.185 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:08:30.212 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:08:30.237 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:08:31.375 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 16:08:31.788 +04:00 [INF] Executed DbCommand (60ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:08:31.896 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:08:31.908 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 1668.3058ms
2025-06-19 16:08:31.909 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:08:31.915 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 1731.4247ms
2025-06-19 16:14:38.699 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 16:14:38.889 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 16:14:38.890 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 16:14:38.968 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 16:14:38.969 +04:00 [INF] Hosting environment: Development
2025-06-19 16:14:38.969 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 16:14:39.312 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 16:14:39.505 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 198.5286ms
2025-06-19 16:14:39.833 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 16:14:39.833 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 16:14:39.847 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 14.3738ms
2025-06-19 16:14:39.895 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 62.5774ms
2025-06-19 16:14:40.192 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 16:14:40.237 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 45.5477ms
2025-06-19 16:14:46.178 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:14:46.199 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:14:46.218 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:14:47.295 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 16:14:47.635 +04:00 [INF] Executed DbCommand (56ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:14:47.721 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:14:47.731 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 1510.2242ms
2025-06-19 16:14:47.731 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:14:47.736 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 1558.9486ms
2025-06-19 16:25:23.898 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/actor/10 - multipart/form-data; boundary="658e33cc-0e64-403a-af3a-aee908fd3bdb" 470
2025-06-19 16:25:23.902 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/actor/10 - 404 0 null 3.1953ms
2025-06-19 16:25:23.902 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: PUT https://localhost:7209/api/actor/10, Response status code: 404
2025-06-19 16:27:12.173 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 16:27:12.305 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 16:27:12.306 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 16:27:12.371 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 16:27:12.371 +04:00 [INF] Hosting environment: Development
2025-06-19 16:27:12.371 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 16:27:12.804 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 16:27:12.927 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 123.4631ms
2025-06-19 16:27:12.943 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 16:27:12.948 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.3099ms
2025-06-19 16:27:13.172 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 16:27:13.204 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.7991ms
2025-06-19 16:27:13.601 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 16:27:13.638 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 37.2226ms
2025-06-19 16:27:19.132 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:27:19.145 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:27:19.161 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:27:20.134 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 16:27:20.362 +04:00 [INF] Executed DbCommand (40ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:27:20.434 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:27:20.442 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 1278.82ms
2025-06-19 16:27:20.442 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:27:20.446 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 1314.2257ms
2025-06-19 16:28:27.132 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/actor/update/10 - multipart/form-data; boundary="072e7d6f-4782-463d-9163-bd9a4916d567" 299750
2025-06-19 16:28:27.135 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.Update (CinelogAPI)'
2025-06-19 16:28:27.140 +04:00 [INF] Route matched with {action = "Update", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, Service.DTOs.Actor.ActorUpdateDto) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:28:27.226 +04:00 [INF] Executed DbCommand (25ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:28:27.304 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (Size = 1000), @p1='?' (DbType = Date), @p2='?' (DbType = DateTime2), @p3='?' (Size = 30), @p4='?' (Size = 4000), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Actors] SET [Bio] = @p0, [BirthDate] = @p1, [CreatedDate] = @p2, [FullName] = @p3, [ImageUrl] = @p4, [IsDeleted] = @p5, [UpdatedDate] = @p6
OUTPUT 1
WHERE [Id] = @p7;
2025-06-19 16:28:27.310 +04:00 [INF] Actor with Id 10 updated successfully.
2025-06-19 16:28:27.312 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-19 16:28:27.312 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.Update (CinelogAPI) in 172.5258ms
2025-06-19 16:28:27.312 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.Update (CinelogAPI)'
2025-06-19 16:28:27.313 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/actor/update/10 - 200 0 null 181.5149ms
2025-06-19 16:28:27.323 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:28:27.324 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:28:27.327 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:28:27.345 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 16:28:27.345 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 16:28:27.356 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 16:28:27.378 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:28:27.437 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:28:27.439 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:28:27.441 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 113.9953ms
2025-06-19 16:28:27.442 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:28:27.442 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 118.758ms
2025-06-19 16:28:27.511 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png - null null
2025-06-19 16:28:27.534 +04:00 [INF] Sending file. Request path: '/images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png'
2025-06-19 16:28:27.535 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png - 200 299064 image/png 23.302ms
2025-06-19 16:28:29.941 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:28:29.941 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:28:29.941 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:28:29.960 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:28:29.960 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:28:29.961 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 19.1318ms
2025-06-19 16:28:29.961 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:28:29.961 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 19.9252ms
2025-06-19 16:28:29.986 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png - null null
2025-06-19 16:28:29.990 +04:00 [INF] The file /images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png was not modified
2025-06-19 16:28:29.990 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png - 304 null image/png 3.3394ms
2025-06-19 16:28:34.440 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:28:34.440 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:28:34.440 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:28:34.442 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:28:34.442 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:28:34.442 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.0208ms
2025-06-19 16:28:34.442 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:28:34.443 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 2.5011ms
2025-06-19 16:28:34.464 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png - null null
2025-06-19 16:28:34.465 +04:00 [INF] The file /images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png was not modified
2025-06-19 16:28:34.465 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png - 304 null image/png 0.6383ms
2025-06-19 16:29:19.984 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:29:19.984 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:29:19.984 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:29:19.986 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:29:19.986 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:29:19.987 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.217ms
2025-06-19 16:29:19.987 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:29:19.987 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 2.6603ms
2025-06-19 16:29:20.129 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png - null null
2025-06-19 16:29:20.129 +04:00 [INF] The file /images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png was not modified
2025-06-19 16:29:20.129 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png - 304 null image/png 0.9292ms
2025-06-19 16:29:30.153 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:29:30.154 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:29:30.154 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:29:30.175 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:29:30.176 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:29:30.177 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:29:30.177 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 22.8478ms
2025-06-19 16:29:30.177 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:29:30.177 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 23.4241ms
2025-06-19 16:29:30.241 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png - null null
2025-06-19 16:29:30.242 +04:00 [INF] The file /images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png was not modified
2025-06-19 16:29:30.242 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3cab5b02-b961-40fe-afe7-7fc8a2647aa1-Screenshot 2025-01-02 231229.png - 304 null image/png 0.6666ms
2025-06-19 16:29:33.102 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:29:33.102 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:29:33.102 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:29:33.121 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:29:33.121 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:29:33.122 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 19.1143ms
2025-06-19 16:29:33.122 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:29:33.122 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 19.6378ms
2025-06-19 16:29:34.916 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:29:34.916 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:29:34.917 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:29:34.928 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:29:34.929 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:29:34.929 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 12.1162ms
2025-06-19 16:29:34.929 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:29:34.929 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 12.8278ms
2025-06-19 16:30:00.387 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/actor/update/10 - multipart/form-data; boundary="9e53a85c-0374-4841-8ec8-327137372e0c" 140370
2025-06-19 16:30:00.387 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.Update (CinelogAPI)'
2025-06-19 16:30:00.387 +04:00 [INF] Route matched with {action = "Update", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, Service.DTOs.Actor.ActorUpdateDto) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:30:00.392 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:30:00.398 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (Size = 1000), @p1='?' (DbType = Date), @p2='?' (DbType = DateTime2), @p3='?' (Size = 30), @p4='?' (Size = 4000), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Actors] SET [Bio] = @p0, [BirthDate] = @p1, [CreatedDate] = @p2, [FullName] = @p3, [ImageUrl] = @p4, [IsDeleted] = @p5, [UpdatedDate] = @p6
OUTPUT 1
WHERE [Id] = @p7;
2025-06-19 16:30:00.398 +04:00 [INF] Actor with Id 10 updated successfully.
2025-06-19 16:30:00.399 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-19 16:30:00.399 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.Update (CinelogAPI) in 11.5536ms
2025-06-19 16:30:00.399 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.Update (CinelogAPI)'
2025-06-19 16:30:00.399 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/actor/update/10 - 200 0 null 12.5316ms
2025-06-19 16:30:00.405 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:30:00.405 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:30:00.405 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:30:00.420 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:30:00.421 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:30:00.422 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:30:00.422 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 16.4017ms
2025-06-19 16:30:00.422 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:30:00.422 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 16.7752ms
2025-06-19 16:30:00.477 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - null null
2025-06-19 16:30:00.479 +04:00 [INF] Sending file. Request path: '/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG'
2025-06-19 16:30:00.479 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - 200 139650 image/jpeg 2.7743ms
2025-06-19 16:30:03.309 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:30:03.310 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:30:03.310 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:30:03.312 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:30:03.312 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:30:03.312 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.522ms
2025-06-19 16:30:03.312 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:30:03.312 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 2.8725ms
2025-06-19 16:30:03.333 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - null null
2025-06-19 16:30:03.333 +04:00 [INF] The file /images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG was not modified
2025-06-19 16:30:03.334 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - 304 null image/jpeg 0.4688ms
2025-06-19 16:32:40.256 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:32:40.256 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:32:40.256 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:32:40.270 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:32:40.270 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:32:40.271 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 14.1672ms
2025-06-19 16:32:40.271 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:32:40.271 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 14.8356ms
2025-06-19 16:32:40.299 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - null null
2025-06-19 16:32:40.300 +04:00 [INF] The file /images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG was not modified
2025-06-19 16:32:40.300 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - 304 null image/jpeg 0.5557ms
2025-06-19 16:32:56.052 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/actor/update/10 - multipart/form-data; boundary="1769c2c6-f0af-4a26-b618-62e6f4f500ee" 330
2025-06-19 16:32:56.052 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.Update (CinelogAPI)'
2025-06-19 16:32:56.052 +04:00 [INF] Route matched with {action = "Update", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, Service.DTOs.Actor.ActorUpdateDto) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:32:56.065 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:32:56.068 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (Size = 1000), @p1='?' (DbType = Date), @p2='?' (DbType = DateTime2), @p3='?' (Size = 30), @p4='?' (Size = 4000), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Actors] SET [Bio] = @p0, [BirthDate] = @p1, [CreatedDate] = @p2, [FullName] = @p3, [ImageUrl] = @p4, [IsDeleted] = @p5, [UpdatedDate] = @p6
OUTPUT 1
WHERE [Id] = @p7;
2025-06-19 16:32:56.069 +04:00 [INF] Actor with Id 10 updated successfully.
2025-06-19 16:32:56.069 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-19 16:32:56.069 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.Update (CinelogAPI) in 16.5518ms
2025-06-19 16:32:56.069 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.Update (CinelogAPI)'
2025-06-19 16:32:56.069 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/actor/update/10 - 200 0 null 17.0579ms
2025-06-19 16:32:56.076 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:32:56.076 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:32:56.076 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:32:56.089 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:32:56.091 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:32:56.091 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:32:56.091 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 15.1995ms
2025-06-19 16:32:56.091 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:32:56.091 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 15.6146ms
2025-06-19 16:32:56.142 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - null null
2025-06-19 16:32:56.143 +04:00 [INF] The file /images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG was not modified
2025-06-19 16:32:56.143 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - 304 null image/jpeg 0.6677ms
2025-06-19 16:32:57.847 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:32:57.847 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:32:57.847 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:32:57.848 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:32:57.849 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:32:57.849 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 1.9167ms
2025-06-19 16:32:57.849 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:32:57.849 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 2.4133ms
2025-06-19 16:33:02.448 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:33:02.448 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:33:02.448 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:33:02.449 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:33:02.450 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:33:02.450 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.0736ms
2025-06-19 16:33:02.450 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:33:02.450 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 2.4556ms
2025-06-19 16:33:36.905 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:33:36.905 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:33:36.905 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:33:36.908 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:33:36.910 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:33:36.910 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:33:36.910 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 4.9165ms
2025-06-19 16:33:36.910 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:33:36.910 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.5775ms
2025-06-19 16:33:36.967 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - null null
2025-06-19 16:33:36.967 +04:00 [INF] The file /images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG was not modified
2025-06-19 16:33:36.968 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - 304 null image/jpeg 0.9745ms
2025-06-19 16:33:38.359 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:33:38.359 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:33:38.360 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:33:38.361 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:33:38.362 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:33:38.362 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.2394ms
2025-06-19 16:33:38.362 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:33:38.362 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 2.757ms
2025-06-19 16:33:40.255 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:33:40.256 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:33:40.256 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:33:40.258 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:33:40.260 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:33:40.260 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:33:40.260 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.5153ms
2025-06-19 16:33:40.260 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:33:40.260 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.6372ms
2025-06-19 16:33:44.056 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/8 - null null
2025-06-19 16:33:44.057 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:33:44.057 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:33:44.058 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:33:44.059 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:33:44.059 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.4028ms
2025-06-19 16:33:44.059 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:33:44.059 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/8 - 200 null application/json; charset=utf-8 3.0501ms
2025-06-19 16:33:46.712 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/8 - null null
2025-06-19 16:33:46.712 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:33:46.712 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:33:46.715 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:33:46.715 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:33:46.715 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.6892ms
2025-06-19 16:33:46.715 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:33:46.715 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/8 - 200 null application/json; charset=utf-8 3.1783ms
2025-06-19 16:33:54.303 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:33:54.303 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:33:54.304 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:33:54.342 +04:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:33:54.347 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:33:54.347 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:33:54.347 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 43.7242ms
2025-06-19 16:33:54.347 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:33:54.347 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 44.237ms
2025-06-19 16:33:56.163 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-19 16:33:56.164 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:33:56.167 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-19 16:33:56.175 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 16:33:56.175 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-19 16:33:56.188 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 16:33:56.212 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-19 16:33:56.252 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-19 16:33:56.252 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:33:56.254 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 86.6868ms
2025-06-19 16:33:56.254 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:33:56.254 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 90.712ms
2025-06-19 16:33:57.111 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:33:57.111 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:33:57.111 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:33:57.140 +04:00 [INF] Executed DbCommand (28ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:33:57.145 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:33:57.146 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:33:57.146 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 34.8663ms
2025-06-19 16:33:57.146 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:33:57.146 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 35.3ms
2025-06-19 16:34:05.171 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=asc - null null
2025-06-19 16:34:05.171 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-19 16:34:05.174 +04:00 [INF] Route matched with {action = "SortByCreatedDate", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SortByCreatedDate(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:34:05.189 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 16:34:05.208 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
ORDER BY [a].[CreatedDate], [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-19 16:34:05.212 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:34:05.213 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI) in 38.4653ms
2025-06-19 16:34:05.213 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-19 16:34:05.213 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=asc - 200 null application/json; charset=utf-8 42.0924ms
2025-06-19 16:34:05.236 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - null null
2025-06-19 16:34:05.236 +04:00 [INF] The file /images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG was not modified
2025-06-19 16:34:05.236 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - 304 null image/jpeg 0.5928ms
2025-06-19 16:34:09.142 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=desc - null null
2025-06-19 16:34:09.142 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-19 16:34:09.142 +04:00 [INF] Route matched with {action = "SortByCreatedDate", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SortByCreatedDate(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:34:09.154 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-19 16:34:09.167 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
ORDER BY [a].[CreatedDate] DESC, [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-19 16:34:09.167 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:34:09.167 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI) in 25.524ms
2025-06-19 16:34:09.167 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-19 16:34:09.167 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=desc - 200 null application/json; charset=utf-8 25.8538ms
2025-06-19 16:34:13.958 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:34:13.958 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:34:13.959 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:34:13.972 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:34:13.974 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:34:13.974 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:34:13.974 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 15.7526ms
2025-06-19 16:34:13.974 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:34:13.974 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 16.1297ms
2025-06-19 16:34:21.943 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:34:21.943 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:34:21.944 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:34:21.945 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:34:21.946 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:34:21.946 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:34:21.947 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 2.98ms
2025-06-19 16:34:21.947 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:34:21.947 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.3251ms
2025-06-19 16:36:19.414 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:36:19.414 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:19.414 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:36:19.435 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:36:19.436 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:36:19.436 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:36:19.437 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 22.1009ms
2025-06-19 16:36:19.437 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:19.437 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 22.3996ms
2025-06-19 16:36:19.581 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - null null
2025-06-19 16:36:19.581 +04:00 [INF] The file /images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG was not modified
2025-06-19 16:36:19.581 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ab5f103f-603c-450a-8739-e31279fd5dea-cvphoto.JPEG - 304 null image/jpeg 0.3412ms
2025-06-19 16:36:31.394 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/8 - null null
2025-06-19 16:36:31.394 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:36:31.395 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:36:31.403 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:36:31.403 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:36:31.404 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 8.9944ms
2025-06-19 16:36:31.404 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:36:31.404 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/8 - 200 null application/json; charset=utf-8 9.7199ms
2025-06-19 16:36:33.289 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:36:33.289 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:33.289 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:36:33.291 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:36:33.292 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:36:33.292 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:36:33.292 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 2.6043ms
2025-06-19 16:36:33.292 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:33.292 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.0074ms
2025-06-19 16:36:34.299 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/8 - null null
2025-06-19 16:36:34.300 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:36:34.300 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:36:34.301 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:36:34.301 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:36:34.301 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 1.6699ms
2025-06-19 16:36:34.301 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:36:34.301 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/8 - 200 null application/json; charset=utf-8 1.9311ms
2025-06-19 16:36:36.552 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/8 - null null
2025-06-19 16:36:36.552 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:36:36.552 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:36:36.554 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:36:36.554 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:36:36.555 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.1293ms
2025-06-19 16:36:36.555 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:36:36.555 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/8 - 200 null application/json; charset=utf-8 3.3198ms
2025-06-19 16:36:38.456 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:36:38.456 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:38.456 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:36:38.458 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:36:38.459 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:36:38.459 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:36:38.459 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.308ms
2025-06-19 16:36:38.459 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:38.459 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.6062ms
2025-06-19 16:36:39.860 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:36:39.860 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:36:39.860 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:36:39.861 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:36:39.861 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:36:39.861 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 1.6814ms
2025-06-19 16:36:39.861 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:36:39.862 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 1.9774ms
2025-06-19 16:36:41.048 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:36:41.048 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:41.048 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:36:41.051 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:36:41.052 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:36:41.052 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:36:41.052 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 4.3778ms
2025-06-19 16:36:41.052 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:41.052 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.6801ms
2025-06-19 16:36:42.384 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:36:42.385 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:36:42.385 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:36:42.386 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:36:42.387 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:36:42.387 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.1769ms
2025-06-19 16:36:42.387 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:36:42.387 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 2.551ms
2025-06-19 16:36:43.780 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-19 16:36:43.781 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:43.781 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-19 16:36:43.795 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-19 16:36:43.797 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-19 16:36:43.797 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:36:43.797 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 16.0732ms
2025-06-19 16:36:43.797 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:43.797 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 17.6681ms
2025-06-19 16:36:45.223 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:36:45.223 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:45.223 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:36:45.225 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:36:45.226 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:36:45.226 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:36:45.226 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 2.894ms
2025-06-19 16:36:45.226 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:45.226 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.2035ms
2025-06-19 16:36:48.071 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - null null
2025-06-19 16:36:48.071 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:36:48.071 +04:00 [INF] Route matched with {action = "GetById", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:36:48.073 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    WHERE [a].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:36:48.074 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Actor.ActorDto'.
2025-06-19 16:36:48.074 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI) in 2.3843ms
2025-06-19 16:36:48.074 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetById (CinelogAPI)'
2025-06-19 16:36:48.074 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getbyid/10 - 200 null application/json; charset=utf-8 2.7617ms
2025-06-19 16:36:50.383 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-19 16:36:50.383 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:50.383 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-19 16:36:50.388 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-19 16:36:50.389 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-19 16:36:50.389 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:36:50.389 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 5.4413ms
2025-06-19 16:36:50.389 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:50.389 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.7789ms
2025-06-19 16:36:51.183 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-19 16:36:51.183 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:51.183 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-19 16:36:51.184 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-19 16:36:51.185 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-19 16:36:51.185 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 16:36:51.185 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 2.452ms
2025-06-19 16:36:51.185 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-19 16:36:51.185 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 2.7708ms
2025-06-19 22:31:26.712 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 22:31:26.903 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 22:31:26.904 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 22:31:26.981 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 22:31:26.982 +04:00 [INF] Hosting environment: Development
2025-06-19 22:31:26.982 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 22:31:27.151 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 22:31:27.300 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 151.7072ms
2025-06-19 22:31:27.323 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 22:31:27.329 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 6.4194ms
2025-06-19 22:31:27.529 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 22:31:27.557 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 28.4076ms
2025-06-19 22:31:27.946 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 22:31:27.986 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 39.5028ms
2025-06-19 22:48:36.377 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 22:48:36.612 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 22:48:36.612 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 22:48:36.778 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 22:48:36.779 +04:00 [INF] Hosting environment: Development
2025-06-19 22:48:36.779 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 22:48:37.112 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 22:48:37.299 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 196.6832ms
2025-06-19 22:48:37.315 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 22:48:37.323 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 7.8687ms
2025-06-19 22:48:37.515 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 22:48:37.551 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.0439ms
2025-06-19 22:48:37.856 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 22:48:37.898 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 41.6855ms
2025-06-19 22:50:19.693 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 22:50:19.928 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 22:50:19.929 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 22:50:20.008 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 22:50:20.009 +04:00 [INF] Hosting environment: Development
2025-06-19 22:50:20.009 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 22:50:20.625 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 22:50:20.806 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 22:50:20.810 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 191.5445ms
2025-06-19 22:50:20.814 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 8.1925ms
2025-06-19 22:50:21.049 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 22:50:21.091 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 41.6553ms
2025-06-19 22:50:21.490 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 22:50:21.538 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 49.0805ms
2025-06-19 22:53:51.166 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 22:53:51.300 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 22:53:51.301 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 22:53:51.360 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 22:53:51.361 +04:00 [INF] Hosting environment: Development
2025-06-19 22:53:51.361 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 22:53:51.953 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 22:53:52.100 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 148.2462ms
2025-06-19 22:53:52.248 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 22:53:52.254 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 5.7204ms
2025-06-19 22:53:52.424 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 22:53:52.454 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 30.4118ms
2025-06-19 22:53:52.856 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 22:53:52.882 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 25.6233ms
2025-06-19 22:54:08.421 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 22:54:08.652 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 22:54:08.653 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 22:54:08.737 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 22:54:08.738 +04:00 [INF] Hosting environment: Development
2025-06-19 22:54:08.738 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 22:54:09.844 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 22:54:10.035 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 201.4674ms
2025-06-19 22:54:10.055 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 22:54:10.063 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 7.7539ms
2025-06-19 22:54:10.253 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 22:54:10.285 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.8572ms
2025-06-19 22:54:10.595 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 22:54:10.626 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 31.0281ms
2025-06-19 23:00:19.581 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 23:00:19.714 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 23:00:19.714 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 23:00:19.774 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 23:00:19.775 +04:00 [INF] Hosting environment: Development
2025-06-19 23:00:19.775 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 23:00:20.375 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 23:00:20.506 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 131.5729ms
2025-06-19 23:00:20.759 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 23:00:20.760 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 23:00:20.762 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.6052ms
2025-06-19 23:00:20.782 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.4156ms
2025-06-19 23:00:21.168 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 23:00:21.199 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 30.9664ms
2025-06-19 23:00:56.820 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/register - application/json; charset=utf-8 124
2025-06-19 23:00:56.839 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Register (CinelogAPI)'
2025-06-19 23:00:56.857 +04:00 [INF] Route matched with {action = "Register", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Service.DTOs.Account.RegisterDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-19 23:00:58.113 +04:00 [INF] Executed DbCommand (35ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-19 23:00:58.258 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [Age], [ConcurrencyStamp], [Email], [EmailConfirmed], [FullName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-06-19 23:00:58.265 +04:00 [INF] User created successfully: 775b011f-96cf-4107-a1b9-df2f53a64253, turboturan113@gmail.com
2025-06-19 23:00:58.277 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-06-19 23:00:58.313 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-06-19 23:00:58.319 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-06-19 23:00:58.328 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-19 23:00:58.361 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (Size = 4000), @p19='?' (Size = 4000), @p5='?' (Size = 256), @p6='?' (DbType = Boolean), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [Age] = @p3, [ConcurrencyStamp] = @p4, [Email] = @p5, [EmailConfirmed] = @p6, [FullName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-06-19 23:01:00.535 +04:00 [INF] Confirmation email sent to turboturan113@gmail.com
2025-06-19 23:01:00.539 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.RegisterResponse'.
2025-06-19 23:01:00.546 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Register (CinelogAPI) in 3686.1044ms
2025-06-19 23:01:00.546 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Register (CinelogAPI)'
2025-06-19 23:01:00.550 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/register - 200 null application/json; charset=utf-8 3730.3555ms
2025-06-19 23:01:22.352 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/api/account/ConfirmEmail?userId=775b011f-96cf-4107-a1b9-df2f53a64253&token=CfDJ8NF6%2bLRN1u5CkzaWnaq0AwUw5c5whHdWYNGCShDeE4kuL6YO5Yi1%2fvW15g62WBvQZjH7mm2sqVeA3uZGLEzxAnOeQGuTa5JhNIBxUbg6SMPBOpE9Tf6Ezj%2bmCa1yt9ufR9J8NBZq2JC%2fimW%2byL1lvVPcxtkTwfR7lCMWlZayqw9nLT%2bwnFVD5sfUe7UIIinUCO%2fEK2IHcf61efaBShzVfbTHoxeBTqJZCyOWIVr4ODBZt5DKGO2PqzVh1iVrtMwbEQ%3d%3d - null null
2025-06-19 23:01:22.360 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.ConfirmEmail (CinelogAPI)'
2025-06-19 23:01:22.364 +04:00 [INF] Route matched with {action = "ConfirmEmail", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ConfirmEmail(System.String, System.String) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-19 23:01:22.424 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-06-19 23:01:22.430 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-19 23:01:22.437 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p17='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [Age] = @p1, [ConcurrencyStamp] = @p2, [Email] = @p3, [EmailConfirmed] = @p4, [FullName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
2025-06-19 23:01:22.438 +04:00 [INF] User 775b011f-96cf-4107-a1b9-df2f53a64253 successfully confirmed their email.
2025-06-19 23:01:22.446 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-06-19 23:01:22.447 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.ConfirmEmail (CinelogAPI) in 82.7496ms
2025-06-19 23:01:22.447 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.ConfirmEmail (CinelogAPI)'
2025-06-19 23:01:22.447 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/api/account/ConfirmEmail?userId=775b011f-96cf-4107-a1b9-df2f53a64253&token=CfDJ8NF6%2bLRN1u5CkzaWnaq0AwUw5c5whHdWYNGCShDeE4kuL6YO5Yi1%2fvW15g62WBvQZjH7mm2sqVeA3uZGLEzxAnOeQGuTa5JhNIBxUbg6SMPBOpE9Tf6Ezj%2bmCa1yt9ufR9J8NBZq2JC%2fimW%2byL1lvVPcxtkTwfR7lCMWlZayqw9nLT%2bwnFVD5sfUe7UIIinUCO%2fEK2IHcf61efaBShzVfbTHoxeBTqJZCyOWIVr4ODBZt5DKGO2PqzVh1iVrtMwbEQ%3d%3d - 200 null text/plain; charset=utf-8 95.6183ms
2025-06-19 23:01:22.900 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/favicon.ico - null null
2025-06-19 23:01:22.903 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/favicon.ico - 404 0 null 3.8754ms
2025-06-19 23:01:22.904 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/favicon.ico, Response status code: 404
2025-06-19 23:01:35.101 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Account/GetAllUsers - null null
2025-06-19 23:01:35.101 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.AccountController.GetAllUsers (CinelogAPI)'
2025-06-19 23:01:35.104 +04:00 [INF] Route matched with {action = "GetAllUsers", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllUsers() on controller CinelogAPI.Controllers.Admin.AccountController (CinelogAPI).
2025-06-19 23:01:35.131 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
2025-06-19 23:01:35.171 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.174 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.175 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.176 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.177 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.179 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.180 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.181 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.182 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.183 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.183 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.184 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.185 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.187 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-19 23:01:35.187 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Account.UserDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-19 23:01:35.189 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.AccountController.GetAllUsers (CinelogAPI) in 85.7269ms
2025-06-19 23:01:35.189 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.AccountController.GetAllUsers (CinelogAPI)'
2025-06-19 23:01:35.190 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Account/GetAllUsers - 200 null application/json; charset=utf-8 88.9103ms
2025-06-19 23:41:43.020 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 23:41:43.211 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 23:41:43.211 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 23:41:43.341 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 23:41:43.341 +04:00 [INF] Hosting environment: Development
2025-06-19 23:41:43.342 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 23:41:43.618 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 23:41:43.762 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 146.1092ms
2025-06-19 23:41:43.782 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 23:41:43.786 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.0366ms
2025-06-19 23:41:43.980 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 23:41:44.015 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 34.8971ms
2025-06-19 23:41:44.330 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 23:41:44.362 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 31.9232ms
2025-06-19 23:43:25.281 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/register - application/json; charset=utf-8 119
2025-06-19 23:43:25.295 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Register (CinelogAPI)'
2025-06-19 23:43:25.312 +04:00 [INF] Route matched with {action = "Register", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Service.DTOs.Account.RegisterDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-19 23:43:26.451 +04:00 [INF] Executed DbCommand (32ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-19 23:43:26.590 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [Age], [ConcurrencyStamp], [Email], [EmailConfirmed], [FullName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-06-19 23:43:26.597 +04:00 [INF] User created successfully: 724ec485-a9b9-44bd-915c-e407a38193a1, gulcinmuradova19@gmail.com
2025-06-19 23:43:26.606 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-06-19 23:43:26.640 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-06-19 23:43:26.645 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-06-19 23:43:26.654 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-19 23:43:26.682 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (Size = 4000), @p19='?' (Size = 4000), @p5='?' (Size = 256), @p6='?' (DbType = Boolean), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [Age] = @p3, [ConcurrencyStamp] = @p4, [Email] = @p5, [EmailConfirmed] = @p6, [FullName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-06-19 23:43:29.467 +04:00 [INF] Confirmation email sent to gulcinmuradova19@gmail.com
2025-06-19 23:43:29.471 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.RegisterResponse'.
2025-06-19 23:43:29.476 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Register (CinelogAPI) in 4161.9375ms
2025-06-19 23:43:29.476 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Register (CinelogAPI)'
2025-06-19 23:43:29.480 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/register - 200 null application/json; charset=utf-8 4199.243ms
2025-06-19 23:54:44.094 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-19 23:54:44.221 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-19 23:54:44.221 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-19 23:54:44.287 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-19 23:54:44.288 +04:00 [INF] Hosting environment: Development
2025-06-19 23:54:44.288 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-19 23:54:44.560 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-19 23:54:44.675 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 116.3214ms
2025-06-19 23:54:44.691 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-19 23:54:44.696 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 5.0656ms
2025-06-19 23:54:44.878 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-19 23:54:44.900 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.0528ms
2025-06-19 23:54:45.268 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-19 23:54:45.300 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 32.0899ms
2025-06-19 23:55:44.311 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/register - application/json; charset=utf-8 121
2025-06-19 23:55:44.333 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Register (CinelogAPI)'
2025-06-19 23:55:44.358 +04:00 [INF] Route matched with {action = "Register", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(Service.DTOs.Account.RegisterDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-19 23:55:45.728 +04:00 [INF] Executed DbCommand (31ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-19 23:55:45.867 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [Age], [ConcurrencyStamp], [Email], [EmailConfirmed], [FullName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-06-19 23:55:45.873 +04:00 [INF] User created successfully: cec743bb-ccbc-4c9b-b8ef-6359371e5b86, gulcinmuradova19@gmail.com
2025-06-19 23:55:45.885 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-06-19 23:55:45.918 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-06-19 23:55:45.922 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-06-19 23:55:45.932 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-19 23:55:45.959 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (Size = 4000), @p19='?' (Size = 4000), @p5='?' (Size = 256), @p6='?' (DbType = Boolean), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [Age] = @p3, [ConcurrencyStamp] = @p4, [Email] = @p5, [EmailConfirmed] = @p6, [FullName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-06-19 23:55:48.930 +04:00 [INF] Confirmation email sent to gulcinmuradova19@gmail.com
2025-06-19 23:55:48.935 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.RegisterResponse'.
2025-06-19 23:55:48.940 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Register (CinelogAPI) in 4580.182ms
2025-06-19 23:55:48.941 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Register (CinelogAPI)'
2025-06-19 23:55:48.945 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/register - 200 null application/json; charset=utf-8 4634.2981ms
