2025-06-20 00:12:10.286 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 00:12:10.301 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 14.6145ms
2025-06-20 00:12:10.326 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 00:12:10.330 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.446ms
2025-06-20 00:12:10.525 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 00:12:10.538 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 12.9767ms
2025-06-20 00:12:10.901 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 00:12:10.927 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 26.0491ms
2025-06-20 00:12:51.700 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=hfhjhfjhjhgjh - null null
2025-06-20 00:12:51.702 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-20 00:12:51.706 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-20 00:12:51.906 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 00:12:51.908 +04:00 [INF] Genre existence check for name 'hfhjhfjhjhgjh': false
2025-06-20 00:12:51.908 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 00:12:51.911 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 205.1835ms
2025-06-20 00:12:51.911 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-20 00:12:51.912 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=hfhjhfjhjhgjh - 200 null application/json; charset=utf-8 211.2732ms
2025-06-20 00:12:51.914 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/genre/create - application/json; charset=utf-8 24
2025-06-20 00:12:51.917 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-20 00:12:51.919 +04:00 [INF] Route matched with {action = "Create", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Genre.GenreCreateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-20 00:12:51.973 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Genres] ([CreatedDate], [IsDeleted], [Name], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-06-20 00:12:51.983 +04:00 [INF] Genre 'hfhjhfjhjhgjh' successfully created
2025-06-20 00:12:51.984 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreCreateDto'.
2025-06-20 00:12:51.984 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI) in 64.762ms
2025-06-20 00:12:51.984 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-20 00:12:51.984 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/genre/create - 200 null application/json; charset=utf-8 69.7645ms
2025-06-20 00:12:51.993 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-20 00:12:51.994 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-20 00:12:51.997 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-20 00:12:52.013 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-20 00:12:52.014 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-20 00:12:52.052 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 00:12:52.071 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-20 00:12:52.154 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-20 00:12:52.156 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 00:12:52.160 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 163.1805ms
2025-06-20 00:12:52.160 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-20 00:12:52.160 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 166.9485ms
2025-06-20 01:20:50.654 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 01:20:50.663 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 8.9355ms
2025-06-20 01:20:50.786 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 01:20:50.786 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.5631ms
2025-06-20 01:20:50.790 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 01:20:50.797 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 6.711ms
2025-06-20 01:20:51.178 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 01:20:51.202 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 23.2603ms
2025-06-20 01:30:13.023 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 01:30:13.140 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 01:30:13.140 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 01:30:13.206 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 01:30:13.206 +04:00 [INF] Hosting environment: Development
2025-06-20 01:30:13.206 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 01:30:13.427 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 01:30:13.537 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 110.6813ms
2025-06-20 01:30:13.625 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 01:30:13.625 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 01:30:13.628 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 2.5643ms
2025-06-20 01:30:13.647 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.0591ms
2025-06-20 01:30:13.931 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 01:30:13.956 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 24.1779ms
2025-06-20 01:30:56.737 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 01:30:56.743 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 6.8057ms
2025-06-20 01:30:56.758 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 01:30:56.761 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 01:30:56.762 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 1.1442ms
2025-06-20 01:30:56.769 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 11.0762ms
2025-06-20 01:30:57.001 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 01:30:57.017 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 16.0451ms
2025-06-20 01:31:07.370 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 01:31:07.372 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 1.6986ms
2025-06-20 01:31:07.399 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 01:31:07.399 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 01:31:07.400 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.4157ms
2025-06-20 01:31:07.404 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 5.32ms
2025-06-20 01:31:07.644 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 01:31:07.654 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 9.6063ms
2025-06-20 01:31:21.720 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 01:31:21.849 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 01:31:21.850 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 01:31:21.905 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 01:31:21.906 +04:00 [INF] Hosting environment: Development
2025-06-20 01:31:21.906 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 01:31:22.417 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 01:31:22.537 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 120.4921ms
2025-06-20 01:31:22.551 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 01:31:22.555 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.4696ms
2025-06-20 01:31:22.741 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 01:31:22.763 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.1756ms
2025-06-20 01:31:23.079 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 01:31:23.131 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 52.0332ms
2025-06-20 02:46:38.271 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 02:46:38.283 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 12.114ms
2025-06-20 02:46:38.406 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 02:46:38.407 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.6434ms
2025-06-20 02:46:38.410 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 02:46:38.419 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 9.3955ms
2025-06-20 02:46:38.766 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 02:46:38.800 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.7163ms
2025-06-20 02:47:44.153 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 49
2025-06-20 02:47:44.175 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 02:47:44.195 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-20 02:47:45.363 +04:00 [INF] Executed DbCommand (34ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-20 02:47:45.388 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-20 02:47:45.548 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-20 02:47:45.566 +04:00 [INF] User test8 logged in successfully.
2025-06-20 02:47:45.571 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-20 02:47:45.579 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 1380.0893ms
2025-06-20 02:47:45.579 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 02:47:45.585 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 1432.5134ms
2025-06-20 03:06:07.105 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Account/GetCurrentUser - null null
2025-06-20 03:06:07.112 +04:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-20 03:06:07.115 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-20 03:06:07.115 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Account/GetCurrentUser - 401 0 null 9.9882ms
2025-06-20 06:10:30.869 +04:00 [WRN] As of ""2025-06-20T02:10:30.8146888+00:00"", the heartbeat has been running for ""02:59:58.6885139"" which is longer than ""00:00:01"". This could be caused by thread pool starvation.
2025-06-20 11:12:51.643 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 11:12:51.681 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 37.0638ms
2025-06-20 11:12:51.717 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 11:12:51.719 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 1.9699ms
2025-06-20 11:12:51.915 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 11:12:51.928 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 12.6995ms
2025-06-20 11:12:52.282 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 11:12:52.322 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 40.5238ms
2025-06-20 11:14:18.666 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 49
2025-06-20 11:14:18.676 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 11:14:18.680 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-20 11:14:18.941 +04:00 [INF] Executed DbCommand (34ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-20 11:14:18.948 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-20 11:14:19.021 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-20 11:14:19.026 +04:00 [INF] User test7 logged in successfully.
2025-06-20 11:14:19.028 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-20 11:14:19.029 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 349.5043ms
2025-06-20 11:14:19.029 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 11:14:19.030 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 363.1316ms
2025-06-20 11:51:25.870 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 11:51:25.876 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 6.6615ms
2025-06-20 11:51:26.001 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 11:51:26.001 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.4649ms
2025-06-20 11:51:26.023 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 11:51:26.027 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 3.8595ms
2025-06-20 11:51:26.416 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 11:51:26.432 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 15.7745ms
2025-06-20 11:55:54.686 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 11:55:54.690 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 3.8423ms
2025-06-20 11:55:54.778 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 11:55:54.779 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 11:55:54.779 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.7298ms
2025-06-20 11:55:54.785 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 5.7559ms
2025-06-20 11:55:55.027 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 11:55:55.040 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 12.4919ms
2025-06-20 13:36:44.399 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 13:36:44.425 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 26.5279ms
2025-06-20 13:36:44.468 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 13:36:44.468 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.4547ms
2025-06-20 13:36:44.611 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 13:36:44.617 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 13:36:44.642 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 13:36:44.706 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 13:36:44.717 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 11.3215ms
2025-06-20 13:36:45.106 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 13:36:45.125 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 18.8847ms
2025-06-20 13:36:45.161 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 13:36:45.417 +04:00 [INF] Executed DbCommand (92ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 13:36:45.610 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 13:36:45.625 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 982.5853ms
2025-06-20 13:36:45.625 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 13:36:45.625 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1014.191ms
2025-06-20 13:37:38.671 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 13:37:38.673 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 13:37:38.674 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 13:37:38.678 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 13:37:38.680 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 13:37:38.681 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 6.8838ms
2025-06-20 13:37:38.681 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 13:37:38.681 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 9.6102ms
2025-06-20 13:55:47.648 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 13:55:47.649 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 13:55:47.649 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 13:55:47.752 +04:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 13:55:47.755 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 13:55:47.755 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 106.2259ms
2025-06-20 13:55:47.755 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 13:55:47.756 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 107.2029ms
2025-06-20 13:55:47.850 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/162ee907-af20-470b-b76f-6d68b3ae2cf1-Screenshot (7).png - null null
2025-06-20 13:55:47.850 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/28f8373b-0a45-417e-90fe-6f8f01497dd7-Screenshot 2024-06-13 232226.png - null null
2025-06-20 13:55:47.874 +04:00 [INF] Sending file. Request path: '/images/28f8373b-0a45-417e-90fe-6f8f01497dd7-Screenshot 2024-06-13 232226.png'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\28f8373b-0a45-417e-90fe-6f8f01497dd7-Screenshot 2024-06-13 232226.png'
2025-06-20 13:55:47.874 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/28f8373b-0a45-417e-90fe-6f8f01497dd7-Screenshot 2024-06-13 232226.png - 200 69828 image/png 23.5755ms
2025-06-20 13:55:47.902 +04:00 [INF] Sending file. Request path: '/images/162ee907-af20-470b-b76f-6d68b3ae2cf1-Screenshot (7).png'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\162ee907-af20-470b-b76f-6d68b3ae2cf1-Screenshot (7).png'
2025-06-20 13:55:47.902 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/162ee907-af20-470b-b76f-6d68b3ae2cf1-Screenshot (7).png - 200 1831371 image/png 51.8045ms
2025-06-20 13:57:05.747 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 13:57:05.747 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 13:57:05.747 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 13:57:05.783 +04:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 13:57:05.783 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 13:57:05.784 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 36.8076ms
2025-06-20 13:57:05.784 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 13:57:05.784 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 37.3066ms
2025-06-20 14:01:48.258 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 14:01:48.258 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:01:48.258 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 14:01:48.351 +04:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 14:01:48.353 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 14:01:48.353 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 94.6063ms
2025-06-20 14:01:48.353 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:01:48.353 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 95.3402ms
2025-06-20 14:02:03.325 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 14:02:03.326 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:02:03.326 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 14:02:03.328 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 14:02:03.330 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 14:02:03.330 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.8228ms
2025-06-20 14:02:03.331 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:02:03.331 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 5.3887ms
2025-06-20 14:02:06.331 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 14:02:06.332 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:02:06.332 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 14:02:06.332 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 14:02:06.338 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 5.4164ms
2025-06-20 14:02:06.387 +04:00 [INF] Executed DbCommand (53ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 14:02:06.389 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 14:02:06.389 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 57.6012ms
2025-06-20 14:02:06.389 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:02:06.389 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 58.2008ms
2025-06-20 14:02:06.463 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 14:02:06.463 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.3643ms
2025-06-20 14:02:06.467 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 14:02:06.471 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 3.919ms
2025-06-20 14:02:06.843 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 14:02:06.863 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 20.4624ms
2025-06-20 14:25:32.368 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 14:25:32.368 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:25:32.368 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 14:25:32.464 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 14:25:32.466 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 14:25:32.466 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 97.4799ms
2025-06-20 14:25:32.466 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:25:32.466 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 98.2132ms
2025-06-20 14:27:11.937 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 14:27:11.937 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:27:11.937 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 14:27:11.981 +04:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 14:27:11.982 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 14:27:11.982 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 44.8603ms
2025-06-20 14:27:11.982 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:27:11.982 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 45.5276ms
2025-06-20 14:42:00.399 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 14:42:00.400 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:42:00.400 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 14:42:00.527 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 14:42:00.528 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 14:42:00.529 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 128.2525ms
2025-06-20 14:42:00.529 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:42:00.529 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 130.0641ms
2025-06-20 14:52:02.364 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 14:52:02.365 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:52:02.365 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 14:52:02.486 +04:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 14:52:02.488 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 14:52:02.488 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 122.9499ms
2025-06-20 14:52:02.488 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:52:02.488 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 124.1234ms
2025-06-20 14:55:06.751 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 14:55:06.752 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:55:06.753 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 14:55:06.797 +04:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 14:55:06.798 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 14:55:06.798 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 45.3402ms
2025-06-20 14:55:06.798 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:55:06.798 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 46.9186ms
2025-06-20 14:55:15.054 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 14:55:15.054 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:55:15.054 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 14:55:15.057 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 14:55:15.058 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 14:55:15.058 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.7391ms
2025-06-20 14:55:15.058 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:55:15.059 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 5.0443ms
2025-06-20 14:55:35.001 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 14:55:35.003 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:55:35.004 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 14:55:35.007 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 14:55:35.008 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 14:55:35.009 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 5.1747ms
2025-06-20 14:55:35.009 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 14:55:35.009 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 8.0234ms
2025-06-20 15:01:24.912 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 15:01:24.912 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:01:24.912 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:01:24.948 +04:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 15:01:24.951 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:01:24.951 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 39.0486ms
2025-06-20 15:01:24.951 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:01:24.951 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 39.6703ms
2025-06-20 15:01:59.204 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 15:01:59.204 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:01:59.204 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:01:59.249 +04:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 15:01:59.250 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:01:59.251 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 46.2146ms
2025-06-20 15:01:59.251 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:01:59.251 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 46.9788ms
2025-06-20 15:02:41.010 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 15:02:41.010 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:02:41.010 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:02:41.012 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 15:02:41.014 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:02:41.014 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.5678ms
2025-06-20 15:02:41.014 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:02:41.014 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.197ms
2025-06-20 15:04:58.094 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 15:04:58.094 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:04:58.094 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:04:58.136 +04:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 15:04:58.137 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:04:58.137 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 42.5235ms
2025-06-20 15:04:58.137 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:04:58.137 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 42.9727ms
2025-06-20 15:09:30.527 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------642098781096187587566931 280239
2025-06-20 15:09:30.528 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:09:30.552 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:09:30.602 +04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-06-20 15:09:30.630 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 77.6178ms
2025-06-20 15:09:30.630 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:09:30.634 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 400 null application/problem+json; charset=utf-8 107.7283ms
2025-06-20 15:09:57.779 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------282845023815568470339049 280964
2025-06-20 15:09:57.779 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:09:57.779 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:09:57.796 +04:00 [INF] Creating movie 'Pulp Fiction' with poster file: 'bec76677-4bac-425b-8b82-58f11d6cf9ec-PulpFiction.jpg'
2025-06-20 15:09:58.058 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 2000), @p2='?' (DbType = Time), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Date), @p6='?' (Size = 200), @p7='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([CreatedDate], [Description], [Duration], [IsDeleted], [PosterUrl], [ReleaseDate], [Title], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-06-20 15:09:58.104 +04:00 [ERR] Failed executing DbCommand (25ms) [Parameters=[@p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 100), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 100), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [MovieActors] ([ActorId], [MovieId], [CharacterName])
VALUES (@p8, @p9, @p10),
(@p11, @p12, @p13);
INSERT INTO [MovieDirectors] ([DirectorId], [MovieId])
VALUES (@p14, @p15);
INSERT INTO [MovieGenres] ([GenreId], [MovieId])
VALUES (@p16, @p17);
2025-06-20 15:09:58.141 +04:00 [ERR] An exception occurred in the database while saving changes for context type 'Repository.Data.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MovieActors_Actors_ActorId". The conflict occurred in database "CinelogDb", table "dbo.Actors", column 'Id'.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MovieGenres_Genres_GenreId". The conflict occurred in database "CinelogDb", table "dbo.Genres", column 'Id'.
The statement has been terminated.
The statement has been terminated.
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:34901305-3369-47b0-ae15-28f1fb6f3462
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MovieActors_Actors_ActorId". The conflict occurred in database "CinelogDb", table "dbo.Actors", column 'Id'.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MovieGenres_Genres_GenreId". The conflict occurred in database "CinelogDb", table "dbo.Genres", column 'Id'.
The statement has been terminated.
The statement has been terminated.
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:34901305-3369-47b0-ae15-28f1fb6f3462
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-06-20 15:09:58.143 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 363.7958ms
2025-06-20 15:09:58.143 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:09:58.145 +04:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MovieActors_Actors_ActorId". The conflict occurred in database "CinelogDb", table "dbo.Actors", column 'Id'.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MovieGenres_Genres_GenreId". The conflict occurred in database "CinelogDb", table "dbo.Genres", column 'Id'.
The statement has been terminated.
The statement has been terminated.
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:34901305-3369-47b0-ae15-28f1fb6f3462
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Repository.Repositories.BaseRepository`1.CreateAsync(T entity) in C:\Users\Turan\source\repos\CinelogAPI\Repository\Repositories\BaseRepository.cs:line 27
   at Service.Services.MovieService.CreateAsync(MovieCreateDto movie, String webRootPath) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\MovieService.cs:line 73
   at CinelogAPI.Controllers.Admin.MovieController.Create(MovieCreateDto request) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\Admin\MovieController.cs:line 34
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-20 15:09:58.187 +04:00 [ERR] Exception occurred
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MovieActors_Actors_ActorId". The conflict occurred in database "CinelogDb", table "dbo.Actors", column 'Id'.
The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MovieGenres_Genres_GenreId". The conflict occurred in database "CinelogDb", table "dbo.Genres", column 'Id'.
The statement has been terminated.
The statement has been terminated.
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:34901305-3369-47b0-ae15-28f1fb6f3462
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Repository.Repositories.BaseRepository`1.CreateAsync(T entity) in C:\Users\Turan\source\repos\CinelogAPI\Repository\Repositories\BaseRepository.cs:line 27
   at Service.Services.MovieService.CreateAsync(MovieCreateDto movie, String webRootPath) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\MovieService.cs:line 73
   at CinelogAPI.Controllers.Admin.MovieController.Create(MovieCreateDto request) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\Admin\MovieController.cs:line 34
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-20 15:09:58.195 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 500 null application/json; charset=utf-8 416.2925ms
2025-06-20 15:10:28.187 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Actor/GetAll - null null
2025-06-20 15:10:28.187 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAll (CinelogAPI)'
2025-06-20 15:10:28.192 +04:00 [INF] Route matched with {action = "GetAll", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-20 15:10:28.224 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 15:10:28.250 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
ORDER BY [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-20 15:10:28.290 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:10:28.293 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAll (CinelogAPI) in 100.5993ms
2025-06-20 15:10:28.293 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAll (CinelogAPI)'
2025-06-20 15:10:28.293 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Actor/GetAll - 200 null application/json; charset=utf-8 105.9951ms
2025-06-20 15:10:53.280 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------158823189318463131304790 280964
2025-06-20 15:10:53.280 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:10:53.280 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:10:53.284 +04:00 [INF] Creating movie 'Pulp Fiction' with poster file: 'e671ff04-7a8b-4a8d-916c-3adf30670b47-PulpFiction.jpg'
2025-06-20 15:10:53.295 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 2000), @p2='?' (DbType = Time), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Date), @p6='?' (Size = 200), @p7='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([CreatedDate], [Description], [Duration], [IsDeleted], [PosterUrl], [ReleaseDate], [Title], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-06-20 15:10:53.306 +04:00 [ERR] Failed executing DbCommand (9ms) [Parameters=[@p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 100), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 100), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [MovieActors] ([ActorId], [MovieId], [CharacterName])
VALUES (@p8, @p9, @p10),
(@p11, @p12, @p13);
INSERT INTO [MovieDirectors] ([DirectorId], [MovieId])
VALUES (@p14, @p15);
INSERT INTO [MovieGenres] ([GenreId], [MovieId])
VALUES (@p16, @p17);
2025-06-20 15:10:53.308 +04:00 [ERR] An exception occurred in the database while saving changes for context type 'Repository.Data.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MovieGenres_Genres_GenreId". The conflict occurred in database "CinelogDb", table "dbo.Genres", column 'Id'.
The statement has been terminated.
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:34901305-3369-47b0-ae15-28f1fb6f3462
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MovieGenres_Genres_GenreId". The conflict occurred in database "CinelogDb", table "dbo.Genres", column 'Id'.
The statement has been terminated.
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:34901305-3369-47b0-ae15-28f1fb6f3462
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-06-20 15:10:53.309 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 28.7463ms
2025-06-20 15:10:53.309 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:10:53.309 +04:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MovieGenres_Genres_GenreId". The conflict occurred in database "CinelogDb", table "dbo.Genres", column 'Id'.
The statement has been terminated.
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:34901305-3369-47b0-ae15-28f1fb6f3462
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Repository.Repositories.BaseRepository`1.CreateAsync(T entity) in C:\Users\Turan\source\repos\CinelogAPI\Repository\Repositories\BaseRepository.cs:line 27
   at Service.Services.MovieService.CreateAsync(MovieCreateDto movie, String webRootPath) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\MovieService.cs:line 73
   at CinelogAPI.Controllers.Admin.MovieController.Create(MovieCreateDto request) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\Admin\MovieController.cs:line 34
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-20 15:10:53.312 +04:00 [ERR] Exception occurred
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_MovieGenres_Genres_GenreId". The conflict occurred in database "CinelogDb", table "dbo.Genres", column 'Id'.
The statement has been terminated.
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:34901305-3369-47b0-ae15-28f1fb6f3462
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Repository.Repositories.BaseRepository`1.CreateAsync(T entity) in C:\Users\Turan\source\repos\CinelogAPI\Repository\Repositories\BaseRepository.cs:line 27
   at Service.Services.MovieService.CreateAsync(MovieCreateDto movie, String webRootPath) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\MovieService.cs:line 73
   at CinelogAPI.Controllers.Admin.MovieController.Create(MovieCreateDto request) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\Admin\MovieController.cs:line 34
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-20 15:10:53.316 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 500 null application/json; charset=utf-8 35.571ms
2025-06-20 15:11:16.034 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-20 15:11:16.034 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-20 15:11:16.037 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-20 15:11:16.060 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 15:11:16.080 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-20 15:11:16.094 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:11:16.096 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 59.2002ms
2025-06-20 15:11:16.096 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-20 15:11:16.096 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 62.5899ms
2025-06-20 15:11:30.894 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------327873886764854778084653 280964
2025-06-20 15:11:30.894 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:11:30.894 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:11:30.898 +04:00 [INF] Creating movie 'Pulp Fiction' with poster file: 'dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg'
2025-06-20 15:11:30.902 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 2000), @p2='?' (DbType = Time), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Date), @p6='?' (Size = 200), @p7='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([CreatedDate], [Description], [Duration], [IsDeleted], [PosterUrl], [ReleaseDate], [Title], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-06-20 15:11:30.903 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 100), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 100), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [MovieActors] ([ActorId], [MovieId], [CharacterName])
VALUES (@p8, @p9, @p10),
(@p11, @p12, @p13);
INSERT INTO [MovieDirectors] ([DirectorId], [MovieId])
VALUES (@p14, @p15);
INSERT INTO [MovieGenres] ([GenreId], [MovieId])
VALUES (@p16, @p17);
2025-06-20 15:11:30.914 +04:00 [INF] Movie 'Pulp Fiction' successfully created with poster: 'dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg'
2025-06-20 15:11:30.914 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieCreateDto'.
2025-06-20 15:11:30.930 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 35.7929ms
2025-06-20 15:11:30.930 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:11:30.931 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 200 null application/json; charset=utf-8 36.6636ms
2025-06-20 15:11:45.745 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 15:11:45.745 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:11:45.745 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:11:45.793 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 15:11:45.796 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:11:45.797 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 51.5865ms
2025-06-20 15:11:45.797 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:11:45.797 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 52.2994ms
2025-06-20 15:11:45.882 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 15:11:45.893 +04:00 [INF] Sending file. Request path: '/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg'
2025-06-20 15:11:45.894 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 200 279270 image/jpeg 11.2713ms
2025-06-20 15:12:13.183 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------280248534586734789164644 280966
2025-06-20 15:12:13.184 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:13.184 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:12:13.188 +04:00 [INF] Creating movie 'Pulp Fiction 2' with poster file: 'ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg'
2025-06-20 15:12:13.197 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 2000), @p2='?' (DbType = Time), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Date), @p6='?' (Size = 200), @p7='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([CreatedDate], [Description], [Duration], [IsDeleted], [PosterUrl], [ReleaseDate], [Title], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-06-20 15:12:13.203 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 100), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 100), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [MovieActors] ([ActorId], [MovieId], [CharacterName])
VALUES (@p8, @p9, @p10),
(@p11, @p12, @p13);
INSERT INTO [MovieDirectors] ([DirectorId], [MovieId])
VALUES (@p14, @p15);
INSERT INTO [MovieGenres] ([GenreId], [MovieId])
VALUES (@p16, @p17);
2025-06-20 15:12:13.203 +04:00 [INF] Movie 'Pulp Fiction 2' successfully created with poster: 'ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg'
2025-06-20 15:12:13.203 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieCreateDto'.
2025-06-20 15:12:13.204 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 19.618ms
2025-06-20 15:12:13.204 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:13.204 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 200 null application/json; charset=utf-8 21.3955ms
2025-06-20 15:12:17.839 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------678042856432026281291360 280966
2025-06-20 15:12:17.840 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:17.840 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:12:17.843 +04:00 [INF] Creating movie 'Pulp Fiction 3' with poster file: '5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg'
2025-06-20 15:12:17.848 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 2000), @p2='?' (DbType = Time), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Date), @p6='?' (Size = 200), @p7='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([CreatedDate], [Description], [Duration], [IsDeleted], [PosterUrl], [ReleaseDate], [Title], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-06-20 15:12:17.850 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 100), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 100), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [MovieActors] ([ActorId], [MovieId], [CharacterName])
VALUES (@p8, @p9, @p10),
(@p11, @p12, @p13);
INSERT INTO [MovieDirectors] ([DirectorId], [MovieId])
VALUES (@p14, @p15);
INSERT INTO [MovieGenres] ([GenreId], [MovieId])
VALUES (@p16, @p17);
2025-06-20 15:12:17.851 +04:00 [INF] Movie 'Pulp Fiction 3' successfully created with poster: '5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg'
2025-06-20 15:12:17.851 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieCreateDto'.
2025-06-20 15:12:17.851 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 11.3747ms
2025-06-20 15:12:17.851 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:17.852 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 200 null application/json; charset=utf-8 12.623ms
2025-06-20 15:12:21.968 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------742256432936082844330992 280966
2025-06-20 15:12:21.968 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:21.968 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:12:21.982 +04:00 [INF] Creating movie 'Pulp Fiction 4' with poster file: 'ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg'
2025-06-20 15:12:21.986 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 2000), @p2='?' (DbType = Time), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Date), @p6='?' (Size = 200), @p7='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([CreatedDate], [Description], [Duration], [IsDeleted], [PosterUrl], [ReleaseDate], [Title], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-06-20 15:12:21.987 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 100), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 100), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [MovieActors] ([ActorId], [MovieId], [CharacterName])
VALUES (@p8, @p9, @p10),
(@p11, @p12, @p13);
INSERT INTO [MovieDirectors] ([DirectorId], [MovieId])
VALUES (@p14, @p15);
INSERT INTO [MovieGenres] ([GenreId], [MovieId])
VALUES (@p16, @p17);
2025-06-20 15:12:21.988 +04:00 [INF] Movie 'Pulp Fiction 4' successfully created with poster: 'ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg'
2025-06-20 15:12:21.988 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieCreateDto'.
2025-06-20 15:12:21.988 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 19.9335ms
2025-06-20 15:12:21.988 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:21.989 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 200 null application/json; charset=utf-8 20.8682ms
2025-06-20 15:12:25.866 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------253647484923009713268649 280966
2025-06-20 15:12:25.866 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:25.866 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:12:25.871 +04:00 [INF] Creating movie 'Pulp Fiction 5' with poster file: '04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg'
2025-06-20 15:12:25.875 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 2000), @p2='?' (DbType = Time), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Date), @p6='?' (Size = 200), @p7='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([CreatedDate], [Description], [Duration], [IsDeleted], [PosterUrl], [ReleaseDate], [Title], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-06-20 15:12:25.876 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 100), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 100), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [MovieActors] ([ActorId], [MovieId], [CharacterName])
VALUES (@p8, @p9, @p10),
(@p11, @p12, @p13);
INSERT INTO [MovieDirectors] ([DirectorId], [MovieId])
VALUES (@p14, @p15);
INSERT INTO [MovieGenres] ([GenreId], [MovieId])
VALUES (@p16, @p17);
2025-06-20 15:12:25.876 +04:00 [INF] Movie 'Pulp Fiction 5' successfully created with poster: '04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg'
2025-06-20 15:12:25.876 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieCreateDto'.
2025-06-20 15:12:25.877 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 10.3405ms
2025-06-20 15:12:25.877 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:25.877 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 200 null application/json; charset=utf-8 11.307ms
2025-06-20 15:12:29.292 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------074872515050227121921632 280966
2025-06-20 15:12:29.292 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:29.292 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:12:29.295 +04:00 [INF] Creating movie 'Pulp Fiction 6' with poster file: '9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg'
2025-06-20 15:12:29.298 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 2000), @p2='?' (DbType = Time), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Date), @p6='?' (Size = 200), @p7='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([CreatedDate], [Description], [Duration], [IsDeleted], [PosterUrl], [ReleaseDate], [Title], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-06-20 15:12:29.300 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 100), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 100), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [MovieActors] ([ActorId], [MovieId], [CharacterName])
VALUES (@p8, @p9, @p10),
(@p11, @p12, @p13);
INSERT INTO [MovieDirectors] ([DirectorId], [MovieId])
VALUES (@p14, @p15);
INSERT INTO [MovieGenres] ([GenreId], [MovieId])
VALUES (@p16, @p17);
2025-06-20 15:12:29.301 +04:00 [INF] Movie 'Pulp Fiction 6' successfully created with poster: '9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg'
2025-06-20 15:12:29.301 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieCreateDto'.
2025-06-20 15:12:29.301 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 8.9923ms
2025-06-20 15:12:29.301 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:29.301 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 200 null application/json; charset=utf-8 9.8715ms
2025-06-20 15:12:32.966 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------041655869261122147848188 280966
2025-06-20 15:12:32.966 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:32.966 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:12:32.970 +04:00 [INF] Creating movie 'Pulp Fiction 7' with poster file: '90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg'
2025-06-20 15:12:32.973 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 2000), @p2='?' (DbType = Time), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Date), @p6='?' (Size = 200), @p7='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([CreatedDate], [Description], [Duration], [IsDeleted], [PosterUrl], [ReleaseDate], [Title], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-06-20 15:12:32.974 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 100), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 100), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [MovieActors] ([ActorId], [MovieId], [CharacterName])
VALUES (@p8, @p9, @p10),
(@p11, @p12, @p13);
INSERT INTO [MovieDirectors] ([DirectorId], [MovieId])
VALUES (@p14, @p15);
INSERT INTO [MovieGenres] ([GenreId], [MovieId])
VALUES (@p16, @p17);
2025-06-20 15:12:32.975 +04:00 [INF] Movie 'Pulp Fiction 7' successfully created with poster: '90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg'
2025-06-20 15:12:32.975 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieCreateDto'.
2025-06-20 15:12:32.975 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 9.0899ms
2025-06-20 15:12:32.975 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:32.976 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 200 null application/json; charset=utf-8 9.8893ms
2025-06-20 15:12:36.042 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------150407330718948086869607 280966
2025-06-20 15:12:36.043 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:36.043 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:12:36.050 +04:00 [INF] Creating movie 'Pulp Fiction 8' with poster file: '3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg'
2025-06-20 15:12:36.053 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 2000), @p2='?' (DbType = Time), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Date), @p6='?' (Size = 200), @p7='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([CreatedDate], [Description], [Duration], [IsDeleted], [PosterUrl], [ReleaseDate], [Title], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-06-20 15:12:36.054 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 100), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 100), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [MovieActors] ([ActorId], [MovieId], [CharacterName])
VALUES (@p8, @p9, @p10),
(@p11, @p12, @p13);
INSERT INTO [MovieDirectors] ([DirectorId], [MovieId])
VALUES (@p14, @p15);
INSERT INTO [MovieGenres] ([GenreId], [MovieId])
VALUES (@p16, @p17);
2025-06-20 15:12:36.055 +04:00 [INF] Movie 'Pulp Fiction 8' successfully created with poster: '3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg'
2025-06-20 15:12:36.055 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieCreateDto'.
2025-06-20 15:12:36.055 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 12.429ms
2025-06-20 15:12:36.055 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:36.056 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 200 null application/json; charset=utf-8 13.166ms
2025-06-20 15:12:39.509 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------245430059700426637879264 280966
2025-06-20 15:12:39.509 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:39.509 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:12:39.513 +04:00 [INF] Creating movie 'Pulp Fiction 9' with poster file: '65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg'
2025-06-20 15:12:39.525 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 2000), @p2='?' (DbType = Time), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Date), @p6='?' (Size = 200), @p7='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([CreatedDate], [Description], [Duration], [IsDeleted], [PosterUrl], [ReleaseDate], [Title], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-06-20 15:12:39.561 +04:00 [INF] Executed DbCommand (35ms) [Parameters=[@p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 100), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 100), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [MovieActors] ([ActorId], [MovieId], [CharacterName])
VALUES (@p8, @p9, @p10),
(@p11, @p12, @p13);
INSERT INTO [MovieDirectors] ([DirectorId], [MovieId])
VALUES (@p14, @p15);
INSERT INTO [MovieGenres] ([GenreId], [MovieId])
VALUES (@p16, @p17);
2025-06-20 15:12:39.562 +04:00 [INF] Movie 'Pulp Fiction 9' successfully created with poster: '65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg'
2025-06-20 15:12:39.562 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieCreateDto'.
2025-06-20 15:12:39.562 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 53.0348ms
2025-06-20 15:12:39.562 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:39.562 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 200 null application/json; charset=utf-8 53.8217ms
2025-06-20 15:12:43.035 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Movie/Create - multipart/form-data; boundary=--------------------------503305012229237644258248 280967
2025-06-20 15:12:43.036 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:43.036 +04:00 [INF] Route matched with {action = "Create", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Movie.MovieCreateDto) on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:12:43.039 +04:00 [INF] Creating movie 'Pulp Fiction 10' with poster file: '2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg'
2025-06-20 15:12:43.050 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 2000), @p2='?' (DbType = Time), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Date), @p6='?' (Size = 200), @p7='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Movies] ([CreatedDate], [Description], [Duration], [IsDeleted], [PosterUrl], [ReleaseDate], [Title], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-06-20 15:12:43.059 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 100), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 100), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [MovieActors] ([ActorId], [MovieId], [CharacterName])
VALUES (@p8, @p9, @p10),
(@p11, @p12, @p13);
INSERT INTO [MovieDirectors] ([DirectorId], [MovieId])
VALUES (@p14, @p15);
INSERT INTO [MovieGenres] ([GenreId], [MovieId])
VALUES (@p16, @p17);
2025-06-20 15:12:43.060 +04:00 [INF] Movie 'Pulp Fiction 10' successfully created with poster: '2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg'
2025-06-20 15:12:43.061 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Movie.MovieCreateDto'.
2025-06-20 15:12:43.061 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI) in 24.8674ms
2025-06-20 15:12:43.061 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.Create (CinelogAPI)'
2025-06-20 15:12:43.061 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Movie/Create - 200 null application/json; charset=utf-8 25.8182ms
2025-06-20 15:12:48.722 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 15:12:48.722 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:12:48.722 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:12:48.755 +04:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 15:12:48.758 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:12:48.758 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 36.1912ms
2025-06-20 15:12:48.758 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:12:48.758 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 36.624ms
2025-06-20 15:12:48.816 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 15:12:48.816 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 15:12:48.817 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 15:12:48.819 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 15:12:48.820 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 2.2803ms
2025-06-20 15:12:48.820 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 15:12:48.824 +04:00 [INF] Sending file. Request path: '/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg'
2025-06-20 15:12:48.824 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 200 279270 image/jpeg 8.0259ms
2025-06-20 15:12:48.825 +04:00 [INF] Sending file. Request path: '/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg'
2025-06-20 15:12:48.825 +04:00 [INF] Sending file. Request path: '/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg'
2025-06-20 15:12:48.825 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 200 279270 image/jpeg 8.8598ms
2025-06-20 15:12:48.825 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 200 279270 image/jpeg 5.3611ms
2025-06-20 15:12:48.828 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 15:12:48.831 +04:00 [INF] Sending file. Request path: '/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg'
2025-06-20 15:12:48.831 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 200 279270 image/jpeg 2.9954ms
2025-06-20 15:12:48.832 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 15:12:48.832 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 15:12:48.832 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 15:12:48.832 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 15:12:48.832 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 15:12:48.864 +04:00 [INF] Sending file. Request path: '/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg'
2025-06-20 15:12:48.864 +04:00 [INF] Sending file. Request path: '/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg'
2025-06-20 15:12:48.864 +04:00 [INF] Sending file. Request path: '/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg'
2025-06-20 15:12:48.864 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 200 279270 image/jpeg 32.5991ms
2025-06-20 15:12:48.864 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 200 279270 image/jpeg 32.6151ms
2025-06-20 15:12:48.864 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 200 279270 image/jpeg 32.6478ms
2025-06-20 15:12:48.865 +04:00 [INF] Sending file. Request path: '/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg'
2025-06-20 15:12:48.865 +04:00 [INF] Sending file. Request path: '/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg'
2025-06-20 15:12:48.865 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 200 279270 image/jpeg 32.7995ms
2025-06-20 15:12:48.865 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 200 279270 image/jpeg 32.793ms
2025-06-20 15:13:21.789 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 15:13:21.789 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:13:21.789 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:13:21.792 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 15:13:21.797 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:13:21.798 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 8.3792ms
2025-06-20 15:13:21.798 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:13:21.798 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 8.7886ms
2025-06-20 15:13:21.829 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 15:13:21.830 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 15:13:21.830 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 0.8904ms
2025-06-20 15:13:21.831 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 15:13:21.832 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-20 15:13:21.832 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 0.8648ms
2025-06-20 15:13:21.881 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 15:13:21.882 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-20 15:13:21.882 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 0.6972ms
2025-06-20 15:13:21.904 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 15:13:21.904 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-20 15:13:21.904 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 0.5629ms
2025-06-20 15:13:21.905 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 15:13:21.905 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 15:13:21.905 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-20 15:13:21.905 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-20 15:13:21.905 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 0.6091ms
2025-06-20 15:13:21.905 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 0.5302ms
2025-06-20 15:13:21.913 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 15:13:21.913 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 15:13:21.913 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 15:13:21.913 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-20 15:13:21.913 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-20 15:13:21.913 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 0.6407ms
2025-06-20 15:13:21.913 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 0.6407ms
2025-06-20 15:13:21.913 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-20 15:13:21.913 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 0.6121ms
2025-06-20 15:13:21.970 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 15:13:21.971 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-20 15:13:21.971 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.9332ms
2025-06-20 15:13:24.474 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 15:13:24.474 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:13:24.474 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:13:24.476 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 15:13:24.479 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:13:24.479 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 5.3249ms
2025-06-20 15:13:24.480 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:13:24.480 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 5.7673ms
2025-06-20 15:14:34.203 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 15:14:34.328 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 15:14:34.328 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 15:14:34.387 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 15:14:34.388 +04:00 [INF] Hosting environment: Development
2025-06-20 15:14:34.388 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 15:14:34.646 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 15:14:34.699 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:14:34.714 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:14:34.915 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 15:14:35.015 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 98.8045ms
2025-06-20 15:14:35.034 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 15:14:35.039 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.2951ms
2025-06-20 15:14:35.227 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 15:14:35.251 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 24.2101ms
2025-06-20 15:14:35.575 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 15:14:35.601 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 26.1245ms
2025-06-20 15:14:35.954 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 15:14:36.257 +04:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 15:14:36.497 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:14:36.510 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1794.1267ms
2025-06-20 15:14:36.511 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:14:36.515 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1870.5433ms
2025-06-20 15:14:36.806 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 15:14:36.807 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 15:14:36.813 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-20 15:14:36.813 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 15:14:36.813 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 5.7853ms
2025-06-20 15:14:36.813 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 7.4017ms
2025-06-20 15:14:36.821 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 15:14:36.821 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-20 15:14:36.821 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 0.7734ms
2025-06-20 15:14:36.830 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 15:14:36.830 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-20 15:14:36.831 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 0.7523ms
2025-06-20 15:14:36.831 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 15:14:36.831 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-20 15:14:36.832 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 0.707ms
2025-06-20 15:14:36.834 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 15:14:36.835 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-20 15:14:36.835 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 0.589ms
2025-06-20 15:14:36.848 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 15:14:36.849 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-20 15:14:36.849 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 0.7905ms
2025-06-20 15:14:36.850 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 15:14:36.850 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-20 15:14:36.851 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 0.7337ms
2025-06-20 15:14:37.040 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 15:14:37.040 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 15:14:37.040 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-20 15:14:37.040 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-20 15:14:37.041 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 0.6999ms
2025-06-20 15:14:37.041 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.7737ms
2025-06-20 15:16:43.435 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 15:16:43.632 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 15:16:43.633 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 15:16:43.719 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 15:16:43.719 +04:00 [INF] Hosting environment: Development
2025-06-20 15:16:43.719 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 15:16:44.126 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 15:16:44.242 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 15:16:44.261 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 135.9415ms
2025-06-20 15:16:44.264 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:16:44.291 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:16:44.328 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 15:16:44.328 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 15:16:44.331 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.207ms
2025-06-20 15:16:44.356 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 28.0849ms
2025-06-20 15:16:44.584 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 15:16:44.620 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 35.5983ms
2025-06-20 15:16:45.460 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 15:16:45.717 +04:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 15:16:45.949 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:16:45.963 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1668.995ms
2025-06-20 15:16:45.963 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:16:45.967 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1724.898ms
2025-06-20 15:16:46.109 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 15:16:46.110 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 15:16:46.115 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 15:16:46.115 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-20 15:16:46.116 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 6.7238ms
2025-06-20 15:16:46.116 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 5.8275ms
2025-06-20 15:16:46.124 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 15:16:46.127 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-20 15:16:46.127 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 2.8001ms
2025-06-20 15:16:46.133 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 15:16:46.133 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-20 15:16:46.133 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 0.6455ms
2025-06-20 15:16:46.139 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 15:16:46.139 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 15:16:46.139 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 15:16:46.140 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-20 15:16:46.140 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-20 15:16:46.140 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-20 15:16:46.140 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 0.8291ms
2025-06-20 15:16:46.140 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 0.9275ms
2025-06-20 15:16:46.140 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 0.9262ms
2025-06-20 15:16:46.146 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 15:16:46.146 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 15:16:46.146 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-20 15:16:46.146 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-20 15:16:46.146 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 0.6928ms
2025-06-20 15:16:46.146 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 0.5901ms
2025-06-20 15:16:46.192 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 15:16:46.193 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-20 15:16:46.193 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.8733ms
2025-06-20 15:37:35.808 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 15:37:35.811 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:37:35.811 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 15:37:35.969 +04:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 15:37:35.985 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 15:37:35.988 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 175.942ms
2025-06-20 15:37:35.988 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 15:37:35.989 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 181.1147ms
2025-06-20 15:37:36.268 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 15:37:36.269 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 15:37:36.270 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 15:37:36.270 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-20 15:37:36.270 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 1.5346ms
2025-06-20 15:37:36.270 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 1.534ms
2025-06-20 15:37:36.284 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 15:37:36.284 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-20 15:37:36.285 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 0.8784ms
2025-06-20 15:37:36.291 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 15:37:36.292 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 15:37:36.292 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-20 15:37:36.292 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 0.7822ms
2025-06-20 15:37:36.292 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-20 15:37:36.292 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 0.663ms
2025-06-20 15:37:36.293 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 15:37:36.294 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-20 15:37:36.294 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 0.6673ms
2025-06-20 15:37:36.299 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 15:37:36.299 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 15:37:36.299 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-20 15:37:36.299 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-20 15:37:36.300 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 0.529ms
2025-06-20 15:37:36.300 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 0.6986ms
2025-06-20 15:37:36.399 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 15:37:36.399 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 15:37:36.400 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-20 15:37:36.400 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-20 15:37:36.400 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.9657ms
2025-06-20 15:37:36.400 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 1.0821ms
2025-06-20 18:24:08.216 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 18:24:08.362 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 18:24:08.363 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 18:24:08.429 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 18:24:08.430 +04:00 [INF] Hosting environment: Development
2025-06-20 18:24:08.430 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 18:24:08.953 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 18:24:09.068 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 18:24:09.087 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 134.8379ms
2025-06-20 18:24:09.093 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 18:24:09.099 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 18:24:09.104 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.7386ms
2025-06-20 18:24:09.119 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 18:24:09.290 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 18:24:09.313 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.9028ms
2025-06-20 18:24:09.619 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 18:24:09.649 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 30.0309ms
2025-06-20 18:24:10.256 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 18:24:10.629 +04:00 [INF] Executed DbCommand (86ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 18:24:10.838 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 18:24:10.851 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1730.2576ms
2025-06-20 18:24:10.852 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 18:24:10.855 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1786.926ms
2025-06-20 18:24:11.099 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 18:24:11.100 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 18:24:11.100 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 18:24:11.101 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 18:24:11.101 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 18:24:11.102 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 18:24:11.103 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 18:24:11.104 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 18:24:11.105 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 18:24:11.106 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 18:24:11.107 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-20 18:24:11.107 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-20 18:24:11.107 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 18:24:11.107 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-20 18:24:11.107 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-20 18:24:11.107 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-20 18:24:11.107 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-20 18:24:11.108 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 5.6747ms
2025-06-20 18:24:11.107 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-20 18:24:11.107 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-20 18:24:11.107 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-20 18:24:11.108 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 6.2183ms
2025-06-20 18:24:11.108 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 6.1849ms
2025-06-20 18:24:11.108 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 2.9365ms
2025-06-20 18:24:11.108 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 1.9091ms
2025-06-20 18:24:11.108 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 3.848ms
2025-06-20 18:24:11.108 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 8.2386ms
2025-06-20 18:24:11.108 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 8.3449ms
2025-06-20 18:24:11.108 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 4.9371ms
2025-06-20 18:24:11.108 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 8.4196ms
2025-06-20 18:47:13.147 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 18:47:13.151 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 18:47:13.152 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 18:47:13.289 +04:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 18:47:13.296 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 18:47:13.296 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 144.3407ms
2025-06-20 18:47:13.296 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 18:47:13.296 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 148.9335ms
2025-06-20 18:47:13.424 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 18:47:13.424 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 18:47:13.425 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 18:47:13.425 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 18:47:13.425 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 18:47:13.425 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 18:47:13.425 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-20 18:47:13.425 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-20 18:47:13.425 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 1.0346ms
2025-06-20 18:47:13.425 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-20 18:47:13.426 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 1.0712ms
2025-06-20 18:47:13.426 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 0.9933ms
2025-06-20 18:47:13.426 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 0.5933ms
2025-06-20 18:47:13.426 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-20 18:47:13.426 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 0.6374ms
2025-06-20 18:47:13.433 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 18:47:13.433 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 18:47:13.434 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-20 18:47:13.434 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 18:47:13.434 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 18:47:13.434 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 18:47:13.434 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 0.9589ms
2025-06-20 18:47:13.434 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-20 18:47:13.434 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-20 18:47:13.434 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.789ms
2025-06-20 18:47:13.434 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-20 18:47:13.434 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 0.9619ms
2025-06-20 18:47:13.434 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-20 18:47:13.435 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 0.9458ms
2025-06-20 18:47:13.435 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 1.2327ms
2025-06-20 18:47:57.042 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 18:47:57.042 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 18:47:57.043 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 18:47:57.055 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 18:47:57.063 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 18:47:57.063 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 20.9552ms
2025-06-20 18:47:57.064 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 18:47:57.064 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 21.6068ms
2025-06-20 18:48:47.198 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 18:48:47.199 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 18:48:47.199 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 18:48:47.243 +04:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 18:48:47.246 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 18:48:47.246 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 47.2368ms
2025-06-20 18:48:47.246 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 18:48:47.246 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 47.9519ms
2025-06-20 19:01:07.038 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:01:07.038 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:01:07.038 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:01:07.145 +04:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:01:07.150 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:01:07.151 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 112.0121ms
2025-06-20 19:01:07.151 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:01:07.151 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 112.639ms
2025-06-20 19:01:21.428 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 19:01:21.565 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 19:01:21.565 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 19:01:21.641 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 19:01:21.642 +04:00 [INF] Hosting environment: Development
2025-06-20 19:01:21.642 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 19:01:22.060 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 19:01:22.174 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:01:22.190 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 130.5013ms
2025-06-20 19:01:22.191 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:01:22.209 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 19:01:22.212 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:01:22.215 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 6.2042ms
2025-06-20 19:01:22.270 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 19:01:22.292 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.0682ms
2025-06-20 19:01:22.505 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 19:01:22.534 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 29.503ms
2025-06-20 19:01:23.278 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 19:01:23.611 +04:00 [INF] Executed DbCommand (61ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:01:23.820 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:01:23.832 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1618.2588ms
2025-06-20 19:01:23.833 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:01:23.837 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1662.8602ms
2025-06-20 19:13:13.599 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:13:13.603 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:13:13.603 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:13:13.746 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:13:13.754 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:13:13.755 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 151.222ms
2025-06-20 19:13:13.755 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:13:13.755 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 156.3631ms
2025-06-20 19:13:13.900 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 19:13:13.900 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 19:13:13.900 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 19:13:13.907 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-20 19:13:13.907 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-20 19:13:13.907 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 19:13:13.907 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 7.5986ms
2025-06-20 19:13:13.907 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 7.6916ms
2025-06-20 19:13:13.907 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 7.6173ms
2025-06-20 19:13:13.913 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 19:13:13.913 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 19:13:13.913 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 19:13:13.913 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 19:13:13.913 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 19:13:13.913 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 19:13:13.914 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-20 19:13:13.914 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-20 19:13:13.914 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-20 19:13:13.915 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 1.6283ms
2025-06-20 19:13:13.915 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-20 19:13:13.915 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 1.7348ms
2025-06-20 19:13:13.915 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 1.7561ms
2025-06-20 19:13:13.915 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 1.7982ms
2025-06-20 19:13:13.915 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-20 19:13:13.915 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-20 19:13:13.916 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 2.3857ms
2025-06-20 19:13:13.916 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 2.3159ms
2025-06-20 19:13:13.916 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 19:13:13.917 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-20 19:13:13.917 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.9508ms
2025-06-20 19:13:54.986 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 49
2025-06-20 19:13:54.986 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 19:13:54.992 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-20 19:13:55.067 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-20 19:13:55.078 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-20 19:13:55.161 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-20 19:13:55.179 +04:00 [INF] User test7 logged in successfully.
2025-06-20 19:13:55.179 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-20 19:13:55.180 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 188.3087ms
2025-06-20 19:13:55.180 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 19:13:55.181 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 195.0077ms
2025-06-20 19:13:55.189 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:13:55.190 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:13:55.190 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:13:55.221 +04:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:13:55.228 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:13:55.228 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 38.0093ms
2025-06-20 19:13:55.228 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:13:55.228 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 38.6332ms
2025-06-20 19:28:45.857 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:28:45.857 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:28:45.857 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:28:45.939 +04:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:28:45.942 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:28:45.943 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 85.9646ms
2025-06-20 19:28:45.943 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:28:45.943 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 86.5968ms
2025-06-20 19:28:54.590 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:28:54.591 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:28:54.591 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:28:54.592 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 19:28:54.600 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 8.3746ms
2025-06-20 19:28:54.622 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 19:28:54.623 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.8847ms
2025-06-20 19:28:54.642 +04:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:28:54.644 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:28:54.644 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 53.3576ms
2025-06-20 19:28:54.644 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:28:54.644 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 54.0129ms
2025-06-20 19:28:54.678 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 19:28:54.688 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 9.9992ms
2025-06-20 19:28:54.908 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 19:28:54.929 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 20.9781ms
2025-06-20 19:29:02.067 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 19:29:02.070 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 2.3327ms
2025-06-20 19:29:02.070 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:29:02.070 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:29:02.070 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:29:02.090 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 19:29:02.090 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 19:29:02.091 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.3628ms
2025-06-20 19:29:02.095 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 4.9044ms
2025-06-20 19:29:02.105 +04:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:29:02.110 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:29:02.110 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 39.9979ms
2025-06-20 19:29:02.110 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:29:02.111 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 40.5928ms
2025-06-20 19:29:02.314 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 19:29:02.330 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 16.5452ms
2025-06-20 19:29:09.554 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:29:09.555 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:29:09.555 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:29:09.589 +04:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:29:09.593 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:29:09.593 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 38.3037ms
2025-06-20 19:29:09.593 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:29:09.593 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 38.9515ms
2025-06-20 19:29:13.465 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:29:13.466 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:29:13.466 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:29:13.498 +04:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:29:13.501 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:29:13.502 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 35.7581ms
2025-06-20 19:29:13.502 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:29:13.502 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 36.3469ms
2025-06-20 19:41:39.323 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 19:41:39.615 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 19:41:39.616 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 19:41:39.716 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 19:41:39.716 +04:00 [INF] Hosting environment: Development
2025-06-20 19:41:39.717 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 19:41:40.323 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 19:41:40.508 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:41:40.509 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 196.6546ms
2025-06-20 19:41:40.533 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 19:41:40.541 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 7.1819ms
2025-06-20 19:41:40.549 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:41:40.572 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:41:40.730 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 19:41:40.769 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 39.4445ms
2025-06-20 19:41:41.099 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 19:41:41.136 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 37.7743ms
2025-06-20 19:41:42.022 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 19:41:42.418 +04:00 [INF] Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:41:42.676 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:41:42.693 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2118.6287ms
2025-06-20 19:41:42.693 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:41:42.699 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 2192.2332ms
2025-06-20 19:41:43.023 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 19:41:43.024 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 19:41:43.037 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 19:41:43.037 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-20 19:41:43.038 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 13.9464ms
2025-06-20 19:41:43.038 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 14.9584ms
2025-06-20 19:41:43.043 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 19:41:43.045 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-20 19:41:43.046 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 3.2271ms
2025-06-20 19:41:43.056 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 19:41:43.056 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 19:41:43.057 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-20 19:41:43.057 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-20 19:41:43.057 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 1.0564ms
2025-06-20 19:41:43.057 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 1.1229ms
2025-06-20 19:41:43.063 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 19:41:43.063 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 19:41:43.064 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 19:41:43.064 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-20 19:41:43.064 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-20 19:41:43.065 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 1.846ms
2025-06-20 19:41:43.065 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 1.8437ms
2025-06-20 19:41:43.065 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-20 19:41:43.065 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 1.4286ms
2025-06-20 19:41:43.079 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 19:41:43.080 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 19:41:43.080 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-20 19:41:43.080 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 1.5359ms
2025-06-20 19:41:43.080 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-20 19:41:43.081 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 1.079ms
2025-06-20 19:42:02.249 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:42:02.253 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:42:02.253 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:42:02.341 +04:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:42:02.353 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:42:02.353 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 100.2168ms
2025-06-20 19:42:02.354 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:42:02.354 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 104.7983ms
2025-06-20 19:43:27.234 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 19:43:27.373 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 19:43:27.373 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 19:43:27.438 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 19:43:27.438 +04:00 [INF] Hosting environment: Development
2025-06-20 19:43:27.438 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 19:43:27.981 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 19:43:28.126 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 146.3712ms
2025-06-20 19:43:28.155 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:43:28.172 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:43:28.187 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:43:28.350 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 19:43:28.352 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 2.6065ms
2025-06-20 19:43:28.360 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 19:43:28.377 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 17.7681ms
2025-06-20 19:43:28.711 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 19:43:28.746 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 35.8549ms
2025-06-20 19:43:29.261 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 19:43:29.509 +04:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:43:29.734 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:43:29.748 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1559.0605ms
2025-06-20 19:43:29.748 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:43:29.753 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1597.9334ms
2025-06-20 19:43:52.269 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 49
2025-06-20 19:43:52.271 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 19:43:52.278 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-20 19:43:52.371 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-20 19:43:52.380 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-20 19:43:52.453 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-20 19:43:52.465 +04:00 [INF] User test7 logged in successfully.
2025-06-20 19:43:52.466 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-20 19:43:52.467 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 189.0224ms
2025-06-20 19:43:52.467 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 19:43:52.468 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 198.7352ms
2025-06-20 19:43:52.477 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:43:52.481 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:43:52.482 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:43:52.515 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:43:52.521 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:43:52.522 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 39.9911ms
2025-06-20 19:43:52.522 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:43:52.522 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 44.8425ms
2025-06-20 19:44:29.151 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 19:44:29.380 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 19:44:29.381 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 19:44:29.487 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 19:44:29.488 +04:00 [INF] Hosting environment: Development
2025-06-20 19:44:29.488 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 19:44:29.764 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:44:29.828 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:44:29.854 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:44:29.937 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 19:44:30.131 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 193.5591ms
2025-06-20 19:44:30.385 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 19:44:30.385 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 19:44:30.391 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 6.1248ms
2025-06-20 19:44:30.421 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 36.3247ms
2025-06-20 19:44:30.679 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 19:44:30.718 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 38.5321ms
2025-06-20 19:44:31.335 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 19:44:31.723 +04:00 [INF] Executed DbCommand (86ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:44:31.998 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:44:32.014 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2158.5335ms
2025-06-20 19:44:32.015 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:44:32.021 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 2263.2369ms
2025-06-20 19:46:17.366 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 49
2025-06-20 19:46:17.397 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 19:46:17.406 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-20 19:46:17.573 +04:00 [INF] Executed DbCommand (32ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-20 19:46:17.595 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-20 19:46:17.691 +04:00 [WRN] Login failed: Incorrect password for user test7
2025-06-20 19:46:17.693 +04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-20 19:46:17.695 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 288.4102ms
2025-06-20 19:46:17.695 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 19:46:17.696 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 400 null application/json; charset=utf-8 330.9793ms
2025-06-20 19:46:26.451 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 49
2025-06-20 19:46:26.455 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 19:46:26.455 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-20 19:46:26.478 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-20 19:46:26.480 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-20 19:46:26.557 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-20 19:46:26.579 +04:00 [INF] User test7 logged in successfully.
2025-06-20 19:46:26.580 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-20 19:46:26.580 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 124.6675ms
2025-06-20 19:46:26.580 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 19:46:26.580 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 129.5854ms
2025-06-20 19:46:45.418 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 19:46:45.420 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:46:45.420 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 19:46:46.170 +04:00 [INF] Executed DbCommand (748ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 19:46:46.178 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 19:46:46.178 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 758.5325ms
2025-06-20 19:46:46.178 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 19:46:46.179 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 760.7905ms
2025-06-20 20:00:26.803 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 20:00:26.929 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 20:00:26.930 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 20:00:27.007 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 20:00:27.008 +04:00 [INF] Hosting environment: Development
2025-06-20 20:00:27.008 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 20:00:27.140 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 20:00:27.262 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 123.8998ms
2025-06-20 20:00:27.280 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 20:00:27.284 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.2939ms
2025-06-20 20:00:27.484 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 20:00:27.506 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.0856ms
2025-06-20 20:00:27.751 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:00:27.768 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:00:27.785 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:00:27.881 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 20:00:27.906 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 24.6462ms
2025-06-20 20:00:28.786 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 20:00:29.035 +04:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:00:29.243 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:00:29.255 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1468.1238ms
2025-06-20 20:00:29.256 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:00:29.260 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1508.5766ms
2025-06-20 20:00:31.866 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 20:00:31.895 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:00:31.901 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:00:32.074 +04:00 [INF] Executed DbCommand (28ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 20:00:32.092 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-20 20:00:32.093 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:00:32.096 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 194.6922ms
2025-06-20 20:00:32.096 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:00:32.096 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 229.5584ms
2025-06-20 20:00:32.106 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:00:32.108 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:00:32.108 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:00:32.121 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:00:32.127 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:00:32.128 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 19.5393ms
2025-06-20 20:00:32.128 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:00:32.128 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 22.6214ms
2025-06-20 20:00:36.949 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 20:00:36.952 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:00:36.952 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:00:36.958 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 20:00:36.958 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-20 20:00:36.958 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:00:36.958 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 6.2382ms
2025-06-20 20:00:36.958 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:00:36.958 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 9.0785ms
2025-06-20 20:00:36.964 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:00:36.964 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:00:36.964 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:00:36.968 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:00:36.975 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:00:36.975 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 10.9551ms
2025-06-20 20:00:36.975 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:00:36.976 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 11.4674ms
2025-06-20 20:00:42.120 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:00:42.120 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:00:42.120 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:00:42.781 +04:00 [INF] Executed DbCommand (659ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:00:42.783 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:00:42.783 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 663.1231ms
2025-06-20 20:00:42.783 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:00:42.784 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 663.7878ms
2025-06-20 20:01:09.306 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 20:01:09.487 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 20:01:09.488 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 20:01:09.570 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 20:01:09.571 +04:00 [INF] Hosting environment: Development
2025-06-20 20:01:09.571 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 20:01:09.986 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:01:10.042 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:01:10.060 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:01:10.271 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 20:01:10.445 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 174.5548ms
2025-06-20 20:01:10.455 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 20:01:10.463 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 7.412ms
2025-06-20 20:01:10.678 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 20:01:10.713 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 35.3136ms
2025-06-20 20:01:11.001 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 20:01:11.033 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 31.5401ms
2025-06-20 20:01:11.507 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 20:01:11.845 +04:00 [INF] Executed DbCommand (64ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:01:12.192 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:01:12.212 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2148.7232ms
2025-06-20 20:01:12.213 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:01:12.222 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 2242.8508ms
2025-06-20 20:01:40.811 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 20:01:40.852 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:01:40.859 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:01:41.045 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 20:01:41.065 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-20 20:01:41.066 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:01:41.069 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 209.3047ms
2025-06-20 20:01:41.069 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:01:41.069 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 258.3846ms
2025-06-20 20:01:57.336 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:01:57.340 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:01:57.340 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:01:57.393 +04:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:01:57.403 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:01:57.404 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 63.794ms
2025-06-20 20:01:57.404 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:01:57.404 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 67.9125ms
2025-06-20 20:02:50.703 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 20:02:50.839 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 20:02:50.839 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 20:02:50.895 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 20:02:50.896 +04:00 [INF] Hosting environment: Development
2025-06-20 20:02:50.896 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 20:02:51.528 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 20:02:51.626 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:02:51.644 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:02:51.655 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 129.1074ms
2025-06-20 20:02:51.662 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:02:51.672 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 20:02:51.676 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.6754ms
2025-06-20 20:02:51.851 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 20:02:51.873 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.8143ms
2025-06-20 20:02:52.214 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 20:02:52.263 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 49.082ms
2025-06-20 20:02:52.814 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 20:02:53.070 +04:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:02:53.285 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:02:53.299 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1635.2149ms
2025-06-20 20:02:53.300 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:02:53.304 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1678.4238ms
2025-06-20 20:02:59.871 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Account/Login - application/json 61
2025-06-20 20:02:59.874 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 20:02:59.880 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-20 20:02:59.976 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-20 20:02:59.986 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-20 20:03:00.062 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-20 20:03:00.076 +04:00 [INF] User test7 logged in successfully.
2025-06-20 20:03:00.077 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-20 20:03:00.078 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 198.0204ms
2025-06-20 20:03:00.078 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 20:03:00.079 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Account/Login - 200 null application/json; charset=utf-8 207.2862ms
2025-06-20 20:03:13.458 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-20 20:03:13.482 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 20:03:13.485 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:03:13.530 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-20 20:03:13.551 +04:00 [INF] Retrieved 4 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-20 20:03:13.555 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:03:13.559 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 74.3154ms
2025-06-20 20:03:13.559 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 20:03:13.559 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 101.8232ms
2025-06-20 20:13:58.952 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:13:58.954 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:13:58.954 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:13:59.070 +04:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:13:59.079 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:13:59.080 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 125.8246ms
2025-06-20 20:13:59.080 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:13:59.080 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 127.974ms
2025-06-20 20:13:59.097 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:13:59.099 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.103 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:13:59.138 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:13:59.139 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:13:59.140 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:13:59.141 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 38.1075ms
2025-06-20 20:13:59.141 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.141 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 44.5417ms
2025-06-20 20:13:59.142 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:13:59.143 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.143 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:13:59.147 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:13:59.147 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:13:59.147 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:13:59.147 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 4.3897ms
2025-06-20 20:13:59.147 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.147 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 5.2312ms
2025-06-20 20:13:59.148 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:13:59.149 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.149 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:13:59.151 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:13:59.151 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: false
2025-06-20 20:13:59.151 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:13:59.151 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.2576ms
2025-06-20 20:13:59.151 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.151 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 3.1249ms
2025-06-20 20:13:59.152 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:13:59.152 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.153 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:13:59.154 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:13:59.155 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: false
2025-06-20 20:13:59.155 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:13:59.155 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.1765ms
2025-06-20 20:13:59.155 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.155 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 2.8865ms
2025-06-20 20:13:59.155 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:13:59.156 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.156 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:13:59.157 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:13:59.158 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:13:59.158 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:13:59.158 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.0447ms
2025-06-20 20:13:59.158 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.158 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 2.944ms
2025-06-20 20:13:59.161 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:13:59.162 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.162 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:13:59.163 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:13:59.163 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: false
2025-06-20 20:13:59.163 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:13:59.163 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7913ms
2025-06-20 20:13:59.163 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.164 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 2.4262ms
2025-06-20 20:13:59.164 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:13:59.164 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.164 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:13:59.166 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:13:59.166 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:13:59.166 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:13:59.166 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.8802ms
2025-06-20 20:13:59.166 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.167 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 2.4723ms
2025-06-20 20:13:59.167 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:13:59.168 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.168 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:13:59.169 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:13:59.169 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:13:59.169 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:13:59.170 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7822ms
2025-06-20 20:13:59.170 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.170 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 2.4661ms
2025-06-20 20:13:59.170 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:13:59.170 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.171 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:13:59.172 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:13:59.172 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: false
2025-06-20 20:13:59.172 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:13:59.172 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.6364ms
2025-06-20 20:13:59.172 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.172 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 2.2266ms
2025-06-20 20:13:59.173 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:13:59.173 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.173 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:13:59.176 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:13:59.176 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:13:59.176 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:13:59.176 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.7789ms
2025-06-20 20:13:59.176 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.177 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 3.6355ms
2025-06-20 20:13:59.177 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:13:59.178 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.178 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:13:59.179 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:13:59.179 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:13:59.179 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:13:59.180 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.8932ms
2025-06-20 20:13:59.180 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.180 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 2.5298ms
2025-06-20 20:13:59.180 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:13:59.181 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.181 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:13:59.182 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:13:59.182 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:13:59.182 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:13:59.183 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7664ms
2025-06-20 20:13:59.183 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:13:59.183 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 2.4601ms
2025-06-20 20:13:59.314 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 20:13:59.314 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 20:13:59.314 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 20:13:59.314 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 20:13:59.314 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 20:13:59.315 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 20:13:59.316 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 20:13:59.316 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 20:13:59.321 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-20 20:13:59.321 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 20:13:59.321 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-20 20:13:59.321 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-20 20:13:59.321 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-20 20:13:59.321 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-20 20:13:59.321 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-20 20:13:59.321 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-20 20:13:59.321 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 5.1654ms
2025-06-20 20:13:59.321 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 7.1558ms
2025-06-20 20:13:59.321 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 5.554ms
2025-06-20 20:13:59.321 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 6.8731ms
2025-06-20 20:13:59.321 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 7.1517ms
2025-06-20 20:13:59.321 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 6.9601ms
2025-06-20 20:13:59.321 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 7.4731ms
2025-06-20 20:13:59.321 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 6.175ms
2025-06-20 20:13:59.322 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 20:13:59.323 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-20 20:13:59.323 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 20:13:59.323 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 0.8477ms
2025-06-20 20:13:59.323 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-20 20:13:59.324 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 1.0136ms
2025-06-20 20:14:07.484 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 20:14:07.484 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:14:07.486 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.573 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 20:14:07.589 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-20 20:14:07.589 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.591 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 104.989ms
2025-06-20 20:14:07.591 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:14:07.592 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 107.9671ms
2025-06-20 20:14:07.600 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:14:07.601 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:14:07.601 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:14:07.626 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:14:07.630 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:14:07.630 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 29.3098ms
2025-06-20 20:14:07.630 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:14:07.630 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 29.6596ms
2025-06-20 20:14:07.631 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:14:07.632 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.632 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.636 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:07.636 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:14:07.636 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.636 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 4.3993ms
2025-06-20 20:14:07.636 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.636 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 5.063ms
2025-06-20 20:14:07.637 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:14:07.637 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.637 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.639 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:07.639 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:14:07.639 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.639 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.9834ms
2025-06-20 20:14:07.639 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.639 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 2.4743ms
2025-06-20 20:14:07.640 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:14:07.640 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.640 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.642 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:07.642 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: false
2025-06-20 20:14:07.642 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.642 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.8328ms
2025-06-20 20:14:07.642 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.642 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 2.2941ms
2025-06-20 20:14:07.643 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:14:07.643 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.643 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.645 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:07.645 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: false
2025-06-20 20:14:07.645 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.645 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.0045ms
2025-06-20 20:14:07.645 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.645 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 2.4964ms
2025-06-20 20:14:07.646 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:14:07.646 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.646 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.648 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:07.648 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:14:07.648 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.648 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.9877ms
2025-06-20 20:14:07.648 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.649 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 2.5237ms
2025-06-20 20:14:07.649 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:14:07.650 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.650 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.651 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:07.651 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: false
2025-06-20 20:14:07.651 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.651 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.626ms
2025-06-20 20:14:07.651 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.651 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 2.1123ms
2025-06-20 20:14:07.652 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:14:07.652 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.652 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.654 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:07.654 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:14:07.654 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.654 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.4351ms
2025-06-20 20:14:07.654 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.654 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 1.8307ms
2025-06-20 20:14:07.654 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:14:07.655 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.655 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.656 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:07.656 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:14:07.656 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.657 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7219ms
2025-06-20 20:14:07.657 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.657 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 2.1773ms
2025-06-20 20:14:07.657 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:14:07.658 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.658 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.659 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:07.659 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: false
2025-06-20 20:14:07.659 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.659 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.5273ms
2025-06-20 20:14:07.659 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.659 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 2.0571ms
2025-06-20 20:14:07.661 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:14:07.661 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.661 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.663 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:07.663 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:14:07.663 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.663 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.8163ms
2025-06-20 20:14:07.663 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.663 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 2.441ms
2025-06-20 20:14:07.664 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:14:07.664 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.664 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.666 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:07.666 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:14:07.666 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.666 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.9692ms
2025-06-20 20:14:07.666 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.666 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 2.7298ms
2025-06-20 20:14:07.667 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:14:07.667 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.667 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:07.669 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:07.669 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:14:07.669 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:07.669 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7611ms
2025-06-20 20:14:07.669 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:07.669 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 2.2944ms
2025-06-20 20:14:09.268 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 20:14:09.269 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:14:09.269 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.277 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 20:14:09.278 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-20 20:14:09.278 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.278 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 9.1136ms
2025-06-20 20:14:09.278 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:14:09.278 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 9.8084ms
2025-06-20 20:14:09.284 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:14:09.285 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:14:09.285 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:14:09.316 +04:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:14:09.319 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:14:09.319 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 34.2763ms
2025-06-20 20:14:09.319 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:14:09.319 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 34.7079ms
2025-06-20 20:14:09.320 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:14:09.320 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.320 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.324 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:09.324 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:14:09.324 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.324 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 3.9176ms
2025-06-20 20:14:09.324 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.324 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 4.4501ms
2025-06-20 20:14:09.325 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:14:09.325 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.325 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.327 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:09.327 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:14:09.327 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.327 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.4907ms
2025-06-20 20:14:09.327 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.327 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 1.9103ms
2025-06-20 20:14:09.328 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:14:09.328 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.328 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.329 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:09.329 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: false
2025-06-20 20:14:09.329 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.330 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.5864ms
2025-06-20 20:14:09.330 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.330 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 2.0364ms
2025-06-20 20:14:09.330 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:14:09.331 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.331 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.332 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:09.332 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: false
2025-06-20 20:14:09.332 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.332 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.5693ms
2025-06-20 20:14:09.332 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.332 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 2.1213ms
2025-06-20 20:14:09.333 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:14:09.333 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.333 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.335 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:09.335 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:14:09.335 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.335 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.4578ms
2025-06-20 20:14:09.335 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.335 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 1.8429ms
2025-06-20 20:14:09.335 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:14:09.336 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.336 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.346 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:09.346 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: false
2025-06-20 20:14:09.346 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.347 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 10.8653ms
2025-06-20 20:14:09.347 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.347 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 11.2891ms
2025-06-20 20:14:09.347 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:14:09.348 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.348 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.350 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:09.350 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:14:09.350 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.350 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.0669ms
2025-06-20 20:14:09.350 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.350 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 2.5843ms
2025-06-20 20:14:09.351 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:14:09.351 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.351 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.352 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:09.352 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:14:09.352 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.352 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.5296ms
2025-06-20 20:14:09.352 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.352 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 1.9592ms
2025-06-20 20:14:09.353 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:14:09.353 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.353 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.355 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:09.355 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: false
2025-06-20 20:14:09.355 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.355 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.9441ms
2025-06-20 20:14:09.355 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.356 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 2.5726ms
2025-06-20 20:14:09.356 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:14:09.356 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.356 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.358 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:09.358 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:14:09.358 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.358 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.4323ms
2025-06-20 20:14:09.358 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.358 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 1.8705ms
2025-06-20 20:14:09.359 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:14:09.359 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.359 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.360 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:09.360 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:14:09.360 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.360 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.3341ms
2025-06-20 20:14:09.360 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.360 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 1.7318ms
2025-06-20 20:14:09.361 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:14:09.361 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.361 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:09.362 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:09.362 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:14:09.362 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:09.363 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.4182ms
2025-06-20 20:14:09.363 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:09.363 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 1.8294ms
2025-06-20 20:14:10.550 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 20:14:10.550 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:14:10.550 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.556 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 20:14:10.556 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-20 20:14:10.556 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.556 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 5.9925ms
2025-06-20 20:14:10.556 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:14:10.556 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.7337ms
2025-06-20 20:14:10.561 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:14:10.561 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:14:10.561 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:14:10.583 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:14:10.584 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:14:10.585 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 23.2668ms
2025-06-20 20:14:10.585 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:14:10.585 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 23.5204ms
2025-06-20 20:14:10.586 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:14:10.586 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.586 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.590 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:10.590 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:14:10.590 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.590 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 3.9254ms
2025-06-20 20:14:10.590 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.590 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 4.3747ms
2025-06-20 20:14:10.591 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:14:10.591 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.591 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.593 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:10.593 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:14:10.593 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.593 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.9853ms
2025-06-20 20:14:10.593 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.593 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 2.3442ms
2025-06-20 20:14:10.593 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:14:10.594 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.594 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.595 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:10.595 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: false
2025-06-20 20:14:10.595 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.595 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.4276ms
2025-06-20 20:14:10.595 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.595 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 1.9783ms
2025-06-20 20:14:10.596 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:14:10.596 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.596 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.597 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:10.597 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: false
2025-06-20 20:14:10.597 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.597 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.4958ms
2025-06-20 20:14:10.597 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.597 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 1.8363ms
2025-06-20 20:14:10.598 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:14:10.598 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.598 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.599 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:10.599 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:14:10.599 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.599 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.181ms
2025-06-20 20:14:10.599 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.599 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 1.5124ms
2025-06-20 20:14:10.600 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:14:10.600 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.600 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.601 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:10.601 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: false
2025-06-20 20:14:10.601 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.601 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.3847ms
2025-06-20 20:14:10.601 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.601 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 1.7121ms
2025-06-20 20:14:10.601 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:14:10.602 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.602 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.603 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:10.603 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:14:10.603 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.603 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2389ms
2025-06-20 20:14:10.603 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.603 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 1.7463ms
2025-06-20 20:14:10.604 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:14:10.604 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.604 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.605 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:10.605 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:14:10.605 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.606 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.6809ms
2025-06-20 20:14:10.606 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.606 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 2.018ms
2025-06-20 20:14:10.606 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:14:10.606 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.606 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.607 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:10.607 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: false
2025-06-20 20:14:10.608 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.608 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2638ms
2025-06-20 20:14:10.608 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.608 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 1.5845ms
2025-06-20 20:14:10.608 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:14:10.608 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.608 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.609 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:10.609 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:14:10.609 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.609 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.1086ms
2025-06-20 20:14:10.609 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.609 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 1.4111ms
2025-06-20 20:14:10.610 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:14:10.610 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.610 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.611 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:10.611 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:14:10.611 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.611 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2323ms
2025-06-20 20:14:10.611 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.612 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 1.5917ms
2025-06-20 20:14:10.612 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:14:10.612 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.612 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:14:10.614 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:14:10.614 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:14:10.614 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:14:10.614 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.5985ms
2025-06-20 20:14:10.614 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:14:10.614 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 1.8932ms
2025-06-20 20:14:29.189 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 20:14:29.440 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 20:14:29.440 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 20:14:29.533 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 20:14:29.534 +04:00 [INF] Hosting environment: Development
2025-06-20 20:14:29.534 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 20:14:29.904 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 20:14:30.079 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 181.774ms
2025-06-20 20:14:30.087 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 20:14:30.094 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 6.211ms
2025-06-20 20:14:30.395 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 20:14:30.445 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 49.998ms
2025-06-20 20:15:35.006 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 20:15:35.204 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 20:15:35.205 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 20:15:35.278 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 20:15:35.278 +04:00 [INF] Hosting environment: Development
2025-06-20 20:15:35.279 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 20:15:36.033 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 20:15:36.234 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 213.3055ms
2025-06-20 20:16:44.417 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 20:16:44.544 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 20:16:44.545 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 20:16:44.598 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 20:16:44.598 +04:00 [INF] Hosting environment: Development
2025-06-20 20:16:44.598 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 20:16:45.116 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 20:16:45.236 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:16:45.239 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 123.3552ms
2025-06-20 20:16:45.249 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 20:16:45.253 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.2821ms
2025-06-20 20:16:45.256 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:16:45.273 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:16:45.448 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 20:16:45.470 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.8842ms
2025-06-20 20:16:45.775 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 20:16:45.828 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 52.6905ms
2025-06-20 20:16:46.332 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 20:16:46.571 +04:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:16:46.781 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:16:46.795 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1519.7527ms
2025-06-20 20:16:46.796 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:16:46.802 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1566.7569ms
2025-06-20 20:16:46.808 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:16:46.836 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.843 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:16:46.921 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:16:46.923 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:16:46.923 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:16:46.925 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 81.7225ms
2025-06-20 20:16:46.925 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.925 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 116.4987ms
2025-06-20 20:16:46.926 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:16:46.929 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.929 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:16:46.940 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:16:46.941 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:16:46.941 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:16:46.941 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 11.7474ms
2025-06-20 20:16:46.941 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.941 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 15.119ms
2025-06-20 20:16:46.942 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:16:46.942 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.943 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:16:46.946 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:16:46.947 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: false
2025-06-20 20:16:46.947 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:16:46.947 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 4.1785ms
2025-06-20 20:16:46.947 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.947 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 5.0677ms
2025-06-20 20:16:46.948 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:16:46.948 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.948 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:16:46.950 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:16:46.950 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: false
2025-06-20 20:16:46.950 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:16:46.950 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7909ms
2025-06-20 20:16:46.950 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.950 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 2.3263ms
2025-06-20 20:16:46.951 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:16:46.951 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.951 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:16:46.953 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:16:46.953 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:16:46.953 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:16:46.953 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7524ms
2025-06-20 20:16:46.953 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.953 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 2.2794ms
2025-06-20 20:16:46.954 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:16:46.954 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.954 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:16:46.956 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:16:46.956 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: false
2025-06-20 20:16:46.956 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:16:46.956 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.8325ms
2025-06-20 20:16:46.956 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.956 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 2.4164ms
2025-06-20 20:16:46.957 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:16:46.958 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.958 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:16:46.959 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:16:46.960 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:16:46.960 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:16:46.960 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7285ms
2025-06-20 20:16:46.960 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.960 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 2.5728ms
2025-06-20 20:16:46.961 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:16:46.961 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.961 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:16:46.963 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:16:46.963 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:16:46.963 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:16:46.964 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.1854ms
2025-06-20 20:16:46.964 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.964 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 3.1209ms
2025-06-20 20:16:46.964 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:16:46.965 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.965 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:16:46.966 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:16:46.967 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: false
2025-06-20 20:16:46.967 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:16:46.967 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.019ms
2025-06-20 20:16:46.967 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.967 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 2.5166ms
2025-06-20 20:16:46.968 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:16:46.968 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.968 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:16:46.970 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:16:46.970 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:16:46.970 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:16:46.970 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.9785ms
2025-06-20 20:16:46.970 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.970 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 2.6715ms
2025-06-20 20:16:46.971 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:16:46.971 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.971 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:16:46.973 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:16:46.973 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:16:46.973 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:16:46.973 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7207ms
2025-06-20 20:16:46.973 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.973 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 2.257ms
2025-06-20 20:16:46.974 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:16:46.974 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.974 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:16:46.976 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:16:46.976 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:16:46.976 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:16:46.976 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7404ms
2025-06-20 20:16:46.976 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:16:46.976 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 2.308ms
2025-06-20 20:18:51.482 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 20:18:51.689 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 20:18:51.692 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 20:18:51.813 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 20:18:51.814 +04:00 [INF] Hosting environment: Development
2025-06-20 20:18:51.815 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 20:21:39.030 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 20:21:39.161 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 20:21:39.161 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 20:21:39.230 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 20:21:39.230 +04:00 [INF] Hosting environment: Development
2025-06-20 20:21:39.230 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 20:21:39.786 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 20:21:39.898 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:21:39.914 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 129.528ms
2025-06-20 20:21:39.914 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:21:39.935 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:21:40.140 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 20:21:40.142 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 20:21:40.143 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.073ms
2025-06-20 20:21:40.162 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 19.9692ms
2025-06-20 20:21:40.535 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 20:21:40.579 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 44.7661ms
2025-06-20 20:21:41.005 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 20:21:41.245 +04:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:21:41.486 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:21:41.500 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1563.7ms
2025-06-20 20:21:41.501 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:21:41.505 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1607.1039ms
2025-06-20 20:21:41.511 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:21:41.537 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.543 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:41.624 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:41.626 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:21:41.627 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:41.628 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 85.0412ms
2025-06-20 20:21:41.628 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.629 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 117.9392ms
2025-06-20 20:21:41.630 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:21:41.633 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.633 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:41.645 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:41.645 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:21:41.645 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:41.646 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 12.7472ms
2025-06-20 20:21:41.646 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.646 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 16.2468ms
2025-06-20 20:21:41.647 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:21:41.648 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.648 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:41.652 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:41.652 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: false
2025-06-20 20:21:41.652 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:41.653 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 4.6431ms
2025-06-20 20:21:41.653 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.653 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 5.3095ms
2025-06-20 20:21:41.654 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:21:41.654 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.654 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:41.660 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:41.660 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: false
2025-06-20 20:21:41.660 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:41.660 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 5.6871ms
2025-06-20 20:21:41.660 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.660 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 6.5873ms
2025-06-20 20:21:41.661 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:21:41.661 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.662 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:41.666 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:41.667 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:21:41.667 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:41.667 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 5.4051ms
2025-06-20 20:21:41.667 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.667 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 6.3044ms
2025-06-20 20:21:41.668 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:21:41.669 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.669 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:41.674 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:41.674 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: false
2025-06-20 20:21:41.674 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:41.674 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 5.2444ms
2025-06-20 20:21:41.674 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.674 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 6.3239ms
2025-06-20 20:21:41.675 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:21:41.675 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.675 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:41.681 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:41.681 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:21:41.682 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:41.682 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 6.313ms
2025-06-20 20:21:41.682 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.682 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 7.0222ms
2025-06-20 20:21:41.683 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:21:41.683 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.683 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:41.688 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:41.688 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:21:41.689 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:41.689 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 5.5154ms
2025-06-20 20:21:41.689 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.689 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 6.2865ms
2025-06-20 20:21:41.690 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:21:41.690 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.690 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:41.694 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:41.694 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: false
2025-06-20 20:21:41.694 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:41.695 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 4.5054ms
2025-06-20 20:21:41.695 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.695 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 5.1086ms
2025-06-20 20:21:41.696 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:21:41.696 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.696 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:41.701 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:41.701 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:21:41.701 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:41.701 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 5.4122ms
2025-06-20 20:21:41.702 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.702 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 6.0994ms
2025-06-20 20:21:41.702 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:21:41.703 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.703 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:41.707 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:41.708 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:21:41.708 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:41.708 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 5.0381ms
2025-06-20 20:21:41.708 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.708 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 5.6495ms
2025-06-20 20:21:41.709 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:21:41.709 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.709 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:41.714 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:41.714 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:21:41.714 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:41.715 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 5.5152ms
2025-06-20 20:21:41.715 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:41.715 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 6.1788ms
2025-06-20 20:21:46.057 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 20:21:46.058 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:21:46.061 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.175 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 20:21:46.191 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-20 20:21:46.191 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.193 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 132.0972ms
2025-06-20 20:21:46.193 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:21:46.194 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 136.6594ms
2025-06-20 20:21:46.201 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:21:46.203 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:21:46.203 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:21:46.226 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:21:46.232 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:21:46.232 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 29.6484ms
2025-06-20 20:21:46.232 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:21:46.233 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 31.755ms
2025-06-20 20:21:46.234 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:21:46.234 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.234 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.238 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:46.238 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:21:46.238 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.239 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 4.4748ms
2025-06-20 20:21:46.239 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.239 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 5.1496ms
2025-06-20 20:21:46.239 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:21:46.240 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.240 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.241 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:46.241 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:21:46.241 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.242 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.9787ms
2025-06-20 20:21:46.242 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.242 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 2.6125ms
2025-06-20 20:21:46.242 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:21:46.243 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.243 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.245 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:46.245 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: false
2025-06-20 20:21:46.245 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.245 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.557ms
2025-06-20 20:21:46.246 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.246 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 3.2598ms
2025-06-20 20:21:46.246 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:21:46.246 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.247 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.248 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:46.248 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: false
2025-06-20 20:21:46.248 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.249 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.9656ms
2025-06-20 20:21:46.249 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.249 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 2.5327ms
2025-06-20 20:21:46.249 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:21:46.250 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.250 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.251 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:46.252 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:21:46.252 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.252 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.8299ms
2025-06-20 20:21:46.252 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.252 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 2.4718ms
2025-06-20 20:21:46.253 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:21:46.254 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.254 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.256 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:46.256 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: false
2025-06-20 20:21:46.256 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.256 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.2112ms
2025-06-20 20:21:46.256 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.256 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 3.3256ms
2025-06-20 20:21:46.257 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:21:46.257 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.257 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.259 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:46.259 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:21:46.259 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.259 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.8443ms
2025-06-20 20:21:46.259 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.259 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 2.4555ms
2025-06-20 20:21:46.260 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:21:46.260 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.260 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.262 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:46.262 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:21:46.262 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.262 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.0447ms
2025-06-20 20:21:46.262 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.262 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 2.6671ms
2025-06-20 20:21:46.263 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:21:46.263 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.263 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.265 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:46.265 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: false
2025-06-20 20:21:46.265 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.265 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.8444ms
2025-06-20 20:21:46.265 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.265 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 2.435ms
2025-06-20 20:21:46.266 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:21:46.266 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.266 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.268 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:46.268 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:21:46.268 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.268 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.86ms
2025-06-20 20:21:46.268 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.268 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 2.5159ms
2025-06-20 20:21:46.269 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:21:46.269 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.269 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.272 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:46.272 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:21:46.273 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.273 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 3.4165ms
2025-06-20 20:21:46.273 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.273 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 4.0859ms
2025-06-20 20:21:46.273 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:21:46.274 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.274 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:46.275 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:46.276 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:21:46.276 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:46.276 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.9718ms
2025-06-20 20:21:46.276 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:46.276 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 2.5627ms
2025-06-20 20:21:53.057 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 20:21:53.058 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:21:53.058 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.063 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 20:21:53.064 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 6
2025-06-20 20:21:53.064 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.064 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 5.899ms
2025-06-20 20:21:53.064 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:21:53.064 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.8261ms
2025-06-20 20:21:53.069 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:21:53.070 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:21:53.070 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:21:53.072 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:21:53.079 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:21:53.080 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 10.0699ms
2025-06-20 20:21:53.080 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:21:53.080 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 10.4722ms
2025-06-20 20:21:53.081 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:21:53.081 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.081 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.083 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:53.083 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:21:53.083 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.083 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.9373ms
2025-06-20 20:21:53.083 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.083 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 2.443ms
2025-06-20 20:21:53.084 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:21:53.084 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.084 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.086 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:53.086 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:21:53.086 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.086 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.1753ms
2025-06-20 20:21:53.086 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.086 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 2.7033ms
2025-06-20 20:21:53.087 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:21:53.087 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.087 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.089 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:53.089 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: true
2025-06-20 20:21:53.089 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.089 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.941ms
2025-06-20 20:21:53.089 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.089 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 2.3919ms
2025-06-20 20:21:53.090 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:21:53.090 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.090 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.091 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:53.091 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: false
2025-06-20 20:21:53.092 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.092 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7276ms
2025-06-20 20:21:53.092 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.092 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 2.1717ms
2025-06-20 20:21:53.092 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:21:53.092 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.092 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.094 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:53.094 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:21:53.094 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.094 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7476ms
2025-06-20 20:21:53.094 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.094 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 2.1687ms
2025-06-20 20:21:53.095 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:21:53.095 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.095 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.096 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:53.097 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: false
2025-06-20 20:21:53.097 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.097 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.6334ms
2025-06-20 20:21:53.097 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.097 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 2.096ms
2025-06-20 20:21:53.097 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:21:53.098 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.098 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.100 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:53.100 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:21:53.100 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.100 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.1205ms
2025-06-20 20:21:53.100 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.100 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 2.6328ms
2025-06-20 20:21:53.101 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:21:53.101 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.101 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.103 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:53.103 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:21:53.103 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.103 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.3679ms
2025-06-20 20:21:53.104 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.104 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 3.0656ms
2025-06-20 20:21:53.104 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:21:53.104 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.105 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.106 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:53.106 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: false
2025-06-20 20:21:53.106 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.106 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7879ms
2025-06-20 20:21:53.106 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.106 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 2.2508ms
2025-06-20 20:21:53.107 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:21:53.107 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.107 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.109 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:53.109 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:21:53.109 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.109 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.6407ms
2025-06-20 20:21:53.109 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.109 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 2.0872ms
2025-06-20 20:21:53.110 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:21:53.110 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.110 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.111 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:53.112 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:21:53.112 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.112 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.7089ms
2025-06-20 20:21:53.112 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.112 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 2.3008ms
2025-06-20 20:21:53.112 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:21:53.113 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.113 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:53.114 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:53.114 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:21:53.114 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:53.114 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.6948ms
2025-06-20 20:21:53.114 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:53.114 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 2.1432ms
2025-06-20 20:21:57.797 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1&seriesId - null null
2025-06-20 20:21:57.797 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:57.798 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:21:57.799 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:21:57.799 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:21:57.800 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:21:57.800 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.3732ms
2025-06-20 20:21:57.800 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:21:57.800 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1&seriesId - 200 null application/json; charset=utf-8 3.4616ms
2025-06-20 20:22:03.366 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-20 20:22:03.366 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 20:22:03.369 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:03.394 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-20 20:22:03.402 +04:00 [INF] Retrieved 9 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-20 20:22:03.407 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:22:03.410 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 41.1569ms
2025-06-20 20:22:03.410 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 20:22:03.410 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 44.2931ms
2025-06-20 20:22:20.360 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 20:22:20.361 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:22:20.361 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.363 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 20:22:20.363 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 7
2025-06-20 20:22:20.364 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.364 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.6894ms
2025-06-20 20:22:20.364 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:22:20.364 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 3.4191ms
2025-06-20 20:22:20.369 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:22:20.369 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:22:20.369 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:22:20.370 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:22:20.375 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:22:20.375 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 5.5749ms
2025-06-20 20:22:20.375 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:22:20.375 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 5.8321ms
2025-06-20 20:22:20.376 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:22:20.376 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.376 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.378 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:22:20.378 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:22:20.378 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.378 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2422ms
2025-06-20 20:22:20.378 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.378 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 1.6437ms
2025-06-20 20:22:20.378 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:22:20.378 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.378 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.379 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:22:20.380 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:22:20.380 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.380 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2227ms
2025-06-20 20:22:20.380 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.380 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 1.54ms
2025-06-20 20:22:20.380 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:22:20.381 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.381 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.382 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:22:20.382 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: true
2025-06-20 20:22:20.382 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.382 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.3629ms
2025-06-20 20:22:20.382 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.382 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 1.8968ms
2025-06-20 20:22:20.383 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:22:20.383 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.383 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.384 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:22:20.384 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: true
2025-06-20 20:22:20.384 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.384 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2475ms
2025-06-20 20:22:20.384 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.384 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 1.5532ms
2025-06-20 20:22:20.384 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:22:20.385 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.385 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.386 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:22:20.386 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:22:20.386 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.386 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.1867ms
2025-06-20 20:22:20.386 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.386 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 1.4842ms
2025-06-20 20:22:20.386 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:22:20.386 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.386 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.388 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:22:20.388 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: false
2025-06-20 20:22:20.388 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.388 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.4142ms
2025-06-20 20:22:20.388 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.388 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 1.8761ms
2025-06-20 20:22:20.388 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:22:20.389 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.389 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.390 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:22:20.390 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:22:20.390 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.390 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.4308ms
2025-06-20 20:22:20.390 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.390 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 1.998ms
2025-06-20 20:22:20.391 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:22:20.391 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.391 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.392 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:22:20.392 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:22:20.392 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.392 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.1763ms
2025-06-20 20:22:20.392 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.392 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 1.505ms
2025-06-20 20:22:20.393 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:22:20.393 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.393 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.394 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:22:20.394 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: false
2025-06-20 20:22:20.394 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.394 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.1442ms
2025-06-20 20:22:20.394 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.394 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 1.4596ms
2025-06-20 20:22:20.394 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:22:20.395 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.395 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.396 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:22:20.396 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:22:20.396 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.396 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.1966ms
2025-06-20 20:22:20.396 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.396 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 1.5124ms
2025-06-20 20:22:20.396 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:22:20.397 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.397 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.399 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:22:20.399 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:22:20.399 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.399 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.1562ms
2025-06-20 20:22:20.399 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.399 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 2.6602ms
2025-06-20 20:22:20.399 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:22:20.400 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.400 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:20.401 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:22:20.401 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:22:20.401 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:22:20.401 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.265ms
2025-06-20 20:22:20.401 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:22:20.401 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 1.6624ms
2025-06-20 20:22:25.819 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-20 20:22:25.820 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 20:22:25.820 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:22:25.822 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-20 20:22:25.823 +04:00 [INF] Retrieved 10 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-20 20:22:25.823 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:22:25.823 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 3.1015ms
2025-06-20 20:22:25.823 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 20:22:25.823 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 3.9337ms
2025-06-20 20:45:54.629 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:45:54.630 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:45:54.630 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:45:54.724 +04:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:45:54.730 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:45:54.731 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 101.1017ms
2025-06-20 20:45:54.731 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:45:54.731 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 102.0299ms
2025-06-20 20:45:54.744 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:45:54.744 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.744 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:45:54.749 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:45:54.749 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:45:54.749 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:45:54.749 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 4.7041ms
2025-06-20 20:45:54.749 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.749 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 5.2756ms
2025-06-20 20:45:54.750 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:45:54.751 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.751 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:45:54.752 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:45:54.752 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:45:54.752 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:45:54.752 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.4029ms
2025-06-20 20:45:54.752 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.752 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 1.7737ms
2025-06-20 20:45:54.753 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:45:54.753 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.753 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:45:54.754 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:45:54.754 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: true
2025-06-20 20:45:54.754 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:45:54.754 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.1632ms
2025-06-20 20:45:54.754 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.754 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 1.455ms
2025-06-20 20:45:54.755 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:45:54.755 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.755 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:45:54.756 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:45:54.756 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: true
2025-06-20 20:45:54.756 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:45:54.756 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.5085ms
2025-06-20 20:45:54.757 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.757 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 1.8511ms
2025-06-20 20:45:54.757 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:45:54.758 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.758 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:45:54.759 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:45:54.759 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:45:54.759 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:45:54.759 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2763ms
2025-06-20 20:45:54.759 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.759 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 1.6652ms
2025-06-20 20:45:54.760 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:45:54.760 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.760 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:45:54.761 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:45:54.761 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: false
2025-06-20 20:45:54.761 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:45:54.761 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2201ms
2025-06-20 20:45:54.761 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.761 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 1.5109ms
2025-06-20 20:45:54.762 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:45:54.762 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.762 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:45:54.763 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:45:54.763 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:45:54.763 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:45:54.763 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.3065ms
2025-06-20 20:45:54.763 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.763 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 1.5858ms
2025-06-20 20:45:54.764 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:45:54.764 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.764 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:45:54.766 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:45:54.766 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:45:54.766 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:45:54.766 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.4118ms
2025-06-20 20:45:54.766 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.766 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 2.9479ms
2025-06-20 20:45:54.768 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:45:54.768 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.768 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:45:54.769 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:45:54.770 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: false
2025-06-20 20:45:54.770 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:45:54.770 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.1476ms
2025-06-20 20:45:54.770 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.770 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 1.4395ms
2025-06-20 20:45:54.770 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:45:54.770 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.770 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:45:54.772 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:45:54.772 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:45:54.772 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:45:54.772 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.9703ms
2025-06-20 20:45:54.773 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.773 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 2.3275ms
2025-06-20 20:45:54.774 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:45:54.774 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.774 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:45:54.775 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:45:54.775 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:45:54.775 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:45:54.775 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.3652ms
2025-06-20 20:45:54.775 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.775 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 1.7337ms
2025-06-20 20:45:54.776 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:45:54.776 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.776 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:45:54.777 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:45:54.777 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:45:54.777 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:45:54.777 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.3603ms
2025-06-20 20:45:54.777 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:45:54.778 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 1.6855ms
2025-06-20 20:45:54.944 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 20:45:54.944 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 20:45:54.948 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 20:45:54.948 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-20 20:45:54.948 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 3.9768ms
2025-06-20 20:45:54.948 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 4.0159ms
2025-06-20 20:45:54.954 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 20:45:54.955 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-20 20:45:54.955 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 0.9267ms
2025-06-20 20:45:54.964 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 20:45:54.964 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 20:45:54.964 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-20 20:45:54.964 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-20 20:45:54.965 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 0.6263ms
2025-06-20 20:45:54.965 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 0.6308ms
2025-06-20 20:45:54.965 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 20:45:54.965 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-20 20:45:54.965 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 0.4551ms
2025-06-20 20:45:54.972 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 20:45:54.972 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 20:45:54.972 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-20 20:45:54.972 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-20 20:45:54.972 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 0.579ms
2025-06-20 20:45:54.972 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 0.619ms
2025-06-20 20:45:55.073 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 20:45:55.073 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 20:45:55.073 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-20 20:45:55.073 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-20 20:45:55.073 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.5634ms
2025-06-20 20:45:55.073 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 0.5761ms
2025-06-20 20:46:01.477 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:46:01.477 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:46:01.478 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:46:01.520 +04:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:46:01.523 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:46:01.523 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 44.8327ms
2025-06-20 20:46:01.523 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:46:01.523 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 46.3179ms
2025-06-20 20:46:01.524 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:46:01.525 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.525 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:01.529 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:01.529 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:46:01.529 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:01.529 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 4.3184ms
2025-06-20 20:46:01.529 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.529 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 4.7831ms
2025-06-20 20:46:01.530 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:46:01.530 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.530 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:01.532 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:01.532 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:46:01.532 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:01.532 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.5089ms
2025-06-20 20:46:01.532 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.532 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 1.9104ms
2025-06-20 20:46:01.532 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:46:01.533 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.533 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:01.534 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:01.534 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: true
2025-06-20 20:46:01.534 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:01.534 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.1796ms
2025-06-20 20:46:01.534 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.534 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 1.511ms
2025-06-20 20:46:01.534 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:46:01.535 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.535 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:01.536 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:01.536 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: true
2025-06-20 20:46:01.536 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:01.536 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2095ms
2025-06-20 20:46:01.536 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.536 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 1.5131ms
2025-06-20 20:46:01.536 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:46:01.537 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.537 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:01.538 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:01.539 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:46:01.539 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:01.539 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.1702ms
2025-06-20 20:46:01.539 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.539 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 2.5762ms
2025-06-20 20:46:01.540 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:46:01.540 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.540 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:01.542 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:01.542 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: false
2025-06-20 20:46:01.542 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:01.543 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.3066ms
2025-06-20 20:46:01.543 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.543 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 2.8624ms
2025-06-20 20:46:01.544 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:46:01.544 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.545 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:01.546 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:01.547 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:46:01.547 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:01.547 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.2919ms
2025-06-20 20:46:01.547 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.547 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 2.9061ms
2025-06-20 20:46:01.548 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:46:01.549 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.549 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:01.551 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:01.551 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:46:01.551 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:01.551 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.929ms
2025-06-20 20:46:01.551 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.551 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 2.4903ms
2025-06-20 20:46:01.552 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:46:01.552 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.552 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:01.554 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:01.554 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: false
2025-06-20 20:46:01.554 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:01.554 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.0512ms
2025-06-20 20:46:01.554 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.554 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 2.4949ms
2025-06-20 20:46:01.555 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:46:01.555 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.555 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:01.557 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:01.557 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:46:01.557 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:01.557 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.8559ms
2025-06-20 20:46:01.557 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.557 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 2.3619ms
2025-06-20 20:46:01.558 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:46:01.558 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.558 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:01.560 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:01.560 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:46:01.560 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:01.560 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.5725ms
2025-06-20 20:46:01.560 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.560 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 2.0464ms
2025-06-20 20:46:01.561 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:46:01.561 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.561 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:01.562 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:01.562 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:46:01.562 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:01.562 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2375ms
2025-06-20 20:46:01.562 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:01.562 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 1.5448ms
2025-06-20 20:46:04.742 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 20:46:04.742 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:46:04.743 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.751 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 20:46:04.752 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 9
2025-06-20 20:46:04.752 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.752 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 9.1314ms
2025-06-20 20:46:04.752 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:46:04.752 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 9.5937ms
2025-06-20 20:46:04.759 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:46:04.759 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:46:04.759 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:46:04.780 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:46:04.782 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:46:04.783 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 23.3425ms
2025-06-20 20:46:04.783 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:46:04.783 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 23.5442ms
2025-06-20 20:46:04.783 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:46:04.783 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.783 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.786 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:04.786 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:46:04.786 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.786 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 2.7507ms
2025-06-20 20:46:04.786 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.786 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 3.0033ms
2025-06-20 20:46:04.787 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:46:04.787 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.787 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.788 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:04.788 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:46:04.789 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.789 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.5503ms
2025-06-20 20:46:04.789 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.789 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 1.9174ms
2025-06-20 20:46:04.789 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:46:04.790 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.790 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.791 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:04.791 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: true
2025-06-20 20:46:04.791 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.791 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.1334ms
2025-06-20 20:46:04.791 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.791 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 1.4981ms
2025-06-20 20:46:04.791 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:46:04.792 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.792 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.793 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:04.793 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: true
2025-06-20 20:46:04.793 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.793 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.3247ms
2025-06-20 20:46:04.793 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.793 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 1.6994ms
2025-06-20 20:46:04.794 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:46:04.794 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.794 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.795 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:04.795 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:46:04.795 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.795 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.0556ms
2025-06-20 20:46:04.795 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.795 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 1.3342ms
2025-06-20 20:46:04.795 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:46:04.795 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.795 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.797 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:04.797 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: true
2025-06-20 20:46:04.797 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.797 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.374ms
2025-06-20 20:46:04.797 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.797 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 1.644ms
2025-06-20 20:46:04.798 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:46:04.798 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.798 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.799 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:04.799 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:46:04.799 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.799 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.0024ms
2025-06-20 20:46:04.799 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.799 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 1.3052ms
2025-06-20 20:46:04.799 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:46:04.799 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.799 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.800 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:04.800 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:46:04.800 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.800 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9795ms
2025-06-20 20:46:04.800 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.801 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 1.2236ms
2025-06-20 20:46:04.801 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:46:04.801 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.801 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.802 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:04.802 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: false
2025-06-20 20:46:04.802 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.802 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9898ms
2025-06-20 20:46:04.802 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.802 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 1.2397ms
2025-06-20 20:46:04.803 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:46:04.803 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.803 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.804 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:04.804 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:46:04.804 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.804 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9882ms
2025-06-20 20:46:04.804 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.804 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 1.2319ms
2025-06-20 20:46:04.804 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:46:04.805 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.805 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.806 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:04.806 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:46:04.806 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.806 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.399ms
2025-06-20 20:46:04.806 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.806 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 1.7027ms
2025-06-20 20:46:04.807 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:46:04.807 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.807 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:04.808 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:04.808 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:46:04.808 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:04.808 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9701ms
2025-06-20 20:46:04.808 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:04.808 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 1.2237ms
2025-06-20 20:46:11.961 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-20 20:46:11.961 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:46:11.961 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:11.969 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 20:46:11.969 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 12
2025-06-20 20:46:11.969 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:11.969 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 8.1118ms
2025-06-20 20:46:11.969 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:46:11.970 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 8.4753ms
2025-06-20 20:46:11.975 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:46:11.975 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:46:11.975 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:46:12.003 +04:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:46:12.006 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:46:12.006 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 30.9083ms
2025-06-20 20:46:12.006 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:46:12.006 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 31.1142ms
2025-06-20 20:46:12.007 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:46:12.007 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.007 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:12.011 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:12.011 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:46:12.011 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:12.011 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 3.3602ms
2025-06-20 20:46:12.011 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.011 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 4.3839ms
2025-06-20 20:46:12.011 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:46:12.011 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.011 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:12.013 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:12.013 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:46:12.013 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:12.013 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.3329ms
2025-06-20 20:46:12.013 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.013 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 1.6396ms
2025-06-20 20:46:12.013 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:46:12.014 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.014 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:12.015 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:12.015 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: true
2025-06-20 20:46:12.015 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:12.015 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2754ms
2025-06-20 20:46:12.015 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.015 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 1.554ms
2025-06-20 20:46:12.015 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:46:12.015 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.015 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:12.016 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:12.016 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: true
2025-06-20 20:46:12.016 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:12.016 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.0445ms
2025-06-20 20:46:12.017 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.017 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 1.2828ms
2025-06-20 20:46:12.017 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:46:12.017 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.017 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:12.018 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:12.018 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: false
2025-06-20 20:46:12.018 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:12.018 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9447ms
2025-06-20 20:46:12.018 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.018 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 1.1447ms
2025-06-20 20:46:12.018 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:46:12.019 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.019 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:12.019 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:12.020 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: true
2025-06-20 20:46:12.020 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:12.020 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9573ms
2025-06-20 20:46:12.020 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.020 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 1.1674ms
2025-06-20 20:46:12.020 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:46:12.020 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.020 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:12.022 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:12.022 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:46:12.022 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:12.022 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.4884ms
2025-06-20 20:46:12.022 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.022 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 1.8096ms
2025-06-20 20:46:12.022 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:46:12.022 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.023 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:12.023 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:12.023 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:46:12.023 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:12.023 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9465ms
2025-06-20 20:46:12.023 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.024 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 1.1694ms
2025-06-20 20:46:12.024 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:46:12.024 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.024 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:12.025 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:12.025 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: true
2025-06-20 20:46:12.025 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:12.025 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9865ms
2025-06-20 20:46:12.025 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.025 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 1.1838ms
2025-06-20 20:46:12.025 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:46:12.026 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.026 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:12.026 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:12.026 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:46:12.026 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:12.027 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9256ms
2025-06-20 20:46:12.027 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.027 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 1.1147ms
2025-06-20 20:46:12.027 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:46:12.027 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.027 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:12.028 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:12.028 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:46:12.028 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:12.028 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9192ms
2025-06-20 20:46:12.028 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.028 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 1.131ms
2025-06-20 20:46:12.029 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:46:12.029 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.029 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:12.030 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:12.030 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:46:12.030 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:12.030 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.5278ms
2025-06-20 20:46:12.030 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:12.030 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 1.8803ms
2025-06-20 20:46:13.724 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 20:46:13.724 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:46:13.724 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.731 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 20:46:13.731 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 8
2025-06-20 20:46:13.731 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.731 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 6.7215ms
2025-06-20 20:46:13.731 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 20:46:13.731 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 7.0356ms
2025-06-20 20:46:13.736 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:46:13.736 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:46:13.736 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:46:13.756 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:46:13.758 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:46:13.758 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 22.3846ms
2025-06-20 20:46:13.758 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:46:13.758 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 22.6395ms
2025-06-20 20:46:13.759 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:46:13.759 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.759 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.762 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:13.762 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:46:13.763 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.763 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 3.3472ms
2025-06-20 20:46:13.763 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.763 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 3.7674ms
2025-06-20 20:46:13.763 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:46:13.763 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.763 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.764 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:13.765 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:46:13.765 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.765 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2961ms
2025-06-20 20:46:13.765 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.765 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 1.5252ms
2025-06-20 20:46:13.765 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:46:13.765 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.765 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.766 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:13.766 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: true
2025-06-20 20:46:13.766 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.766 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9841ms
2025-06-20 20:46:13.766 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.766 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 1.2002ms
2025-06-20 20:46:13.767 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:46:13.767 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.767 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.768 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:13.768 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: true
2025-06-20 20:46:13.768 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.768 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9329ms
2025-06-20 20:46:13.768 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.768 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 1.1428ms
2025-06-20 20:46:13.768 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:46:13.768 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.768 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.769 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:13.769 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: true
2025-06-20 20:46:13.769 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.769 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9504ms
2025-06-20 20:46:13.769 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.769 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 1.1592ms
2025-06-20 20:46:13.769 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:46:13.770 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.770 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.771 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:13.771 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: true
2025-06-20 20:46:13.771 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.771 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2415ms
2025-06-20 20:46:13.771 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.771 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 1.465ms
2025-06-20 20:46:13.771 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:46:13.771 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.772 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.773 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:13.773 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:46:13.773 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.773 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.1522ms
2025-06-20 20:46:13.773 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.773 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 1.3938ms
2025-06-20 20:46:13.773 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:46:13.773 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.773 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.774 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:13.774 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:46:13.774 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.774 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.0504ms
2025-06-20 20:46:13.774 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.774 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 1.2451ms
2025-06-20 20:46:13.775 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:46:13.775 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.775 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.776 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:13.776 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: true
2025-06-20 20:46:13.776 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.776 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9384ms
2025-06-20 20:46:13.776 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.776 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 1.1547ms
2025-06-20 20:46:13.776 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:46:13.776 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.776 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.777 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:13.777 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:46:13.777 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.777 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9718ms
2025-06-20 20:46:13.777 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.777 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 1.1705ms
2025-06-20 20:46:13.778 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:46:13.778 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.778 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.779 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:13.779 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:46:13.779 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.779 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.2942ms
2025-06-20 20:46:13.779 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.779 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 1.5128ms
2025-06-20 20:46:13.780 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:46:13.780 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.780 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:13.781 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:13.781 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:46:13.781 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:13.781 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.142ms
2025-06-20 20:46:13.781 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:13.781 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 1.3769ms
2025-06-20 20:46:17.825 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 20:46:17.825 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:46:17.825 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 20:46:17.850 +04:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 20:46:17.852 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 20:46:17.852 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 27.0596ms
2025-06-20 20:46:17.852 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 20:46:17.852 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 27.2983ms
2025-06-20 20:46:17.853 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - null null
2025-06-20 20:46:17.853 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.853 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:17.857 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:17.857 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 1: true
2025-06-20 20:46:17.857 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:17.857 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 3.533ms
2025-06-20 20:46:17.857 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.857 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=1 - 200 null application/json; charset=utf-8 3.8545ms
2025-06-20 20:46:17.857 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - null null
2025-06-20 20:46:17.858 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.858 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:17.859 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:17.859 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 3: true
2025-06-20 20:46:17.859 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:17.859 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.386ms
2025-06-20 20:46:17.859 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.859 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=3 - 200 null application/json; charset=utf-8 1.7199ms
2025-06-20 20:46:17.859 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - null null
2025-06-20 20:46:17.860 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.860 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:17.861 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:17.861 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 6: true
2025-06-20 20:46:17.861 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:17.861 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.366ms
2025-06-20 20:46:17.861 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.861 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=6 - 200 null application/json; charset=utf-8 1.6756ms
2025-06-20 20:46:17.862 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - null null
2025-06-20 20:46:17.862 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.862 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:17.863 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:17.863 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 7: true
2025-06-20 20:46:17.863 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:17.863 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.4274ms
2025-06-20 20:46:17.863 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.863 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=7 - 200 null application/json; charset=utf-8 1.7873ms
2025-06-20 20:46:17.864 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - null null
2025-06-20 20:46:17.864 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.864 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:17.865 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:17.865 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 8: true
2025-06-20 20:46:17.865 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:17.865 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.1796ms
2025-06-20 20:46:17.865 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.865 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=8 - 200 null application/json; charset=utf-8 1.5227ms
2025-06-20 20:46:17.866 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - null null
2025-06-20 20:46:17.866 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.866 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:17.867 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:17.867 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 9: true
2025-06-20 20:46:17.867 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:17.867 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.0511ms
2025-06-20 20:46:17.867 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.867 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=9 - 200 null application/json; charset=utf-8 1.2893ms
2025-06-20 20:46:17.867 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - null null
2025-06-20 20:46:17.867 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.867 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:17.868 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:17.868 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 10: false
2025-06-20 20:46:17.868 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:17.868 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9682ms
2025-06-20 20:46:17.868 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.868 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=10 - 200 null application/json; charset=utf-8 1.2057ms
2025-06-20 20:46:17.869 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - null null
2025-06-20 20:46:17.869 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.869 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:17.870 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:17.870 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 11: false
2025-06-20 20:46:17.870 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:17.870 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.1547ms
2025-06-20 20:46:17.870 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.870 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=11 - 200 null application/json; charset=utf-8 1.4759ms
2025-06-20 20:46:17.870 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - null null
2025-06-20 20:46:17.871 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.871 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:17.871 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:17.871 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 12: true
2025-06-20 20:46:17.872 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:17.872 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9801ms
2025-06-20 20:46:17.872 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.872 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=12 - 200 null application/json; charset=utf-8 1.2456ms
2025-06-20 20:46:17.872 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - null null
2025-06-20 20:46:17.872 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.872 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:17.873 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:17.873 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 13: false
2025-06-20 20:46:17.873 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:17.873 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.8386ms
2025-06-20 20:46:17.873 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.873 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=13 - 200 null application/json; charset=utf-8 1.0447ms
2025-06-20 20:46:17.873 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - null null
2025-06-20 20:46:17.873 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.873 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:17.874 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:17.874 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 14: false
2025-06-20 20:46:17.874 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:17.874 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 0.9335ms
2025-06-20 20:46:17.874 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.874 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=14 - 200 null application/json; charset=utf-8 1.2644ms
2025-06-20 20:46:17.875 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - null null
2025-06-20 20:46:17.875 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.875 +04:00 [INF] Route matched with {action = "IsInWatchlist", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] IsInWatchlist(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 20:46:17.876 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450), @__movieId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Watchlists] AS [w]
        WHERE [w].[UserId] = @__userId_0 AND [w].[MovieId] = @__movieId_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-20 20:46:17.876 +04:00 [INF] Watchlist check for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb and Movie 15: false
2025-06-20 20:46:17.876 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType4`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 20:46:17.876 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI) in 1.0968ms
2025-06-20 20:46:17.876 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.IsInWatchlist (CinelogAPI)'
2025-06-20 20:46:17.876 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/IsInWatchlist?movieId=15 - 200 null application/json; charset=utf-8 1.3815ms
2025-06-20 21:08:20.002 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 21:08:20.132 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 21:08:20.132 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 21:08:20.187 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 21:08:20.187 +04:00 [INF] Hosting environment: Development
2025-06-20 21:08:20.187 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 21:08:20.681 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 21:08:20.795 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 115.6258ms
2025-06-20 21:08:20.810 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 21:08:20.812 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 2.7938ms
2025-06-20 21:08:21.008 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 21:08:21.029 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.1841ms
2025-06-20 21:08:21.344 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 21:08:21.379 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.7537ms
2025-06-20 21:08:31.677 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 21:08:31.685 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 8.1825ms
2025-06-20 21:08:31.702 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 21:08:31.703 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.7867ms
2025-06-20 21:08:31.826 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 21:08:31.843 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:08:31.858 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 21:08:31.901 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 21:08:31.909 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 8.4761ms
2025-06-20 21:08:32.250 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 21:08:32.269 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 19.41ms
2025-06-20 21:08:32.893 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 21:08:33.154 +04:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 21:08:33.367 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:08:33.380 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1520.2879ms
2025-06-20 21:08:33.380 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:08:33.385 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1559.2699ms
2025-06-20 21:08:33.391 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 21:08:33.419 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 27.7381ms
2025-06-20 21:08:33.420 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 21:08:50.154 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 49
2025-06-20 21:08:50.155 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 21:08:50.161 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-20 21:08:50.250 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-20 21:08:50.260 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-20 21:08:50.337 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-20 21:08:50.343 +04:00 [INF] User test7 logged in successfully.
2025-06-20 21:08:50.344 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-20 21:08:50.346 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 184.3386ms
2025-06-20 21:08:50.346 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 21:08:50.346 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 192.6337ms
2025-06-20 21:08:50.355 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 21:08:50.356 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:08:50.356 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 21:08:50.367 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 21:08:50.372 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:08:50.373 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 16.6769ms
2025-06-20 21:08:50.373 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:08:50.373 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 18.4125ms
2025-06-20 21:08:50.374 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 21:08:50.376 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 1.7055ms
2025-06-20 21:08:50.376 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 21:08:52.774 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 21:08:52.775 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:08:52.778 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 21:08:52.878 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 21:08:52.894 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-20 21:08:52.894 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 21:08:52.897 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 118.36ms
2025-06-20 21:08:52.897 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:08:52.897 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 122.522ms
2025-06-20 21:08:52.903 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 21:08:52.903 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:08:52.903 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 21:08:52.906 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 21:08:52.912 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:08:52.912 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 9.6375ms
2025-06-20 21:08:52.913 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:08:52.913 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 10.0748ms
2025-06-20 21:08:52.913 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 21:08:52.914 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.352ms
2025-06-20 21:08:52.914 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 21:08:55.156 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 21:08:55.156 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:08:55.156 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 21:08:55.160 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 21:08:55.161 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 6
2025-06-20 21:08:55.161 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 21:08:55.161 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 4.8591ms
2025-06-20 21:08:55.161 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:08:55.161 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 5.585ms
2025-06-20 21:08:55.166 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 21:08:55.166 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:08:55.166 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 21:08:55.168 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 21:08:55.171 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:08:55.171 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.7751ms
2025-06-20 21:08:55.171 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:08:55.171 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 5.3933ms
2025-06-20 21:08:55.172 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 21:08:55.172 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2968ms
2025-06-20 21:08:55.172 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 21:08:57.300 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 21:08:57.300 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:08:57.300 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 21:08:57.305 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 21:08:57.305 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 6
2025-06-20 21:08:57.305 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 21:08:57.305 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 4.8287ms
2025-06-20 21:08:57.305 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:08:57.305 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 5.4301ms
2025-06-20 21:08:57.310 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 21:08:57.310 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:08:57.310 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 21:08:57.312 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 21:08:57.314 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:08:57.314 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.6438ms
2025-06-20 21:08:57.314 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:08:57.314 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.1777ms
2025-06-20 21:08:57.315 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 21:08:57.315 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3227ms
2025-06-20 21:08:57.315 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 21:09:00.504 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 21:09:00.505 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:09:00.505 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 21:09:00.519 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 21:09:00.520 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 6
2025-06-20 21:09:00.520 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 21:09:00.520 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 15.1151ms
2025-06-20 21:09:00.520 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:09:00.520 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 15.6204ms
2025-06-20 21:09:00.524 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 21:09:00.524 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:09:00.524 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 21:09:00.549 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 21:09:00.551 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:09:00.551 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 26.9338ms
2025-06-20 21:09:00.551 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:09:00.552 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 27.2999ms
2025-06-20 21:09:00.552 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 21:09:00.553 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.486ms
2025-06-20 21:09:00.553 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 21:09:05.538 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 21:09:05.538 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:09:05.538 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 21:09:05.579 +04:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 21:09:05.582 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:09:05.582 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 43.6122ms
2025-06-20 21:09:05.582 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:09:05.582 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 44.351ms
2025-06-20 21:09:05.583 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 21:09:05.584 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5647ms
2025-06-20 21:09:05.584 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 21:09:10.311 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-20 21:09:10.312 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:09:10.312 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 21:09:10.319 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 21:09:10.319 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 15
2025-06-20 21:09:10.319 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 21:09:10.320 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 7.8168ms
2025-06-20 21:09:10.320 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:09:10.320 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 8.449ms
2025-06-20 21:09:10.324 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 21:09:10.324 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:09:10.324 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 21:09:10.326 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 21:09:10.329 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:09:10.329 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.4298ms
2025-06-20 21:09:10.329 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:09:10.329 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.8926ms
2025-06-20 21:09:10.329 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 21:09:10.330 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3549ms
2025-06-20 21:09:10.330 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 21:09:14.411 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-20 21:09:14.412 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 21:09:14.414 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 21:09:14.436 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-20 21:09:14.444 +04:00 [INF] Retrieved 18 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-20 21:09:14.448 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:09:14.451 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 36.8619ms
2025-06-20 21:09:14.451 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 21:09:14.451 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 39.9568ms
2025-06-20 21:12:32.548 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 21:12:32.548 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:12:32.548 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 21:12:32.622 +04:00 [INF] Executed DbCommand (73ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 21:12:32.625 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:12:32.626 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 77.192ms
2025-06-20 21:12:32.626 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:12:32.626 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 78.0276ms
2025-06-20 21:12:32.626 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 21:12:32.627 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3614ms
2025-06-20 21:12:32.627 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 21:12:36.526 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 21:12:36.526 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:12:36.526 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 21:12:36.550 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 21:12:36.551 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:12:36.552 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 25.7304ms
2025-06-20 21:12:36.552 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:12:36.552 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 26.1536ms
2025-06-20 21:12:36.567 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 21:12:36.567 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.4808ms
2025-06-20 21:12:36.567 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 21:12:44.627 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 21:12:44.627 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:12:44.627 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 21:12:44.635 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 21:12:44.635 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-20 21:12:44.635 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 21:12:44.635 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 8.0222ms
2025-06-20 21:12:44.635 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:12:44.635 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 8.6533ms
2025-06-20 21:12:44.644 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 21:12:44.644 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:12:44.644 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 21:12:44.673 +04:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 21:12:44.675 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:12:44.675 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 31.203ms
2025-06-20 21:12:44.675 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:12:44.676 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 31.5739ms
2025-06-20 21:12:44.677 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 21:12:44.677 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3342ms
2025-06-20 21:12:44.677 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 21:12:46.844 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 21:12:46.844 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:12:46.844 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 21:12:46.850 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 21:12:46.850 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-20 21:12:46.850 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 21:12:46.850 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 5.9382ms
2025-06-20 21:12:46.850 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 21:12:46.850 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 6.5003ms
2025-06-20 21:12:46.857 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 21:12:46.857 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:12:46.857 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 21:12:46.881 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 21:12:46.883 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 21:12:46.883 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 25.9288ms
2025-06-20 21:12:46.883 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 21:12:46.883 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 26.3426ms
2025-06-20 21:12:46.884 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 21:12:46.885 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.9488ms
2025-06-20 21:12:46.885 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:26:05.992 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 22:26:06.119 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 22:26:06.119 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 22:26:06.184 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 22:26:06.184 +04:00 [INF] Hosting environment: Development
2025-06-20 22:26:06.184 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 22:26:06.825 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 22:26:06.928 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:26:06.942 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 117.8868ms
2025-06-20 22:26:06.950 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:26:06.957 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 22:26:06.961 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.703ms
2025-06-20 22:26:06.972 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:26:07.147 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 22:26:07.168 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.6942ms
2025-06-20 22:26:07.513 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 22:26:07.540 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 27.0593ms
2025-06-20 22:26:08.149 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 22:26:08.536 +04:00 [INF] Executed DbCommand (80ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:26:08.759 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:26:08.775 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1800.1745ms
2025-06-20 22:26:08.775 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:26:08.779 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1850.4048ms
2025-06-20 22:26:08.785 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:26:08.814 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 28.6005ms
2025-06-20 22:26:08.814 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:26:09.059 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 22:26:09.060 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 22:26:09.060 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 22:26:09.060 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 22:26:09.060 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 22:26:09.060 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 22:26:09.060 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 22:26:09.066 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 22:26:09.066 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-20 22:26:09.066 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-20 22:26:09.066 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-20 22:26:09.066 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-20 22:26:09.066 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-20 22:26:09.066 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-20 22:26:09.067 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 6.7027ms
2025-06-20 22:26:09.067 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 6.706ms
2025-06-20 22:26:09.067 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 7.3302ms
2025-06-20 22:26:09.067 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 6.6602ms
2025-06-20 22:26:09.067 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 6.6772ms
2025-06-20 22:26:09.067 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 6.3428ms
2025-06-20 22:26:09.067 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 6.708ms
2025-06-20 22:26:09.080 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 22:26:09.080 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 22:26:09.080 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 22:26:09.081 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-20 22:26:09.081 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-20 22:26:09.081 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-20 22:26:09.081 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 0.9271ms
2025-06-20 22:26:09.081 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 0.9791ms
2025-06-20 22:26:09.081 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 1.0591ms
2025-06-20 22:26:15.573 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 22:26:15.575 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:26:15.583 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:26:15.753 +04:00 [INF] Executed DbCommand (25ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 22:26:15.769 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 7
2025-06-20 22:26:15.770 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 22:26:15.772 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 189.2665ms
2025-06-20 22:26:15.772 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:26:15.772 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 199.0798ms
2025-06-20 22:26:15.782 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:26:15.783 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:26:15.783 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:26:15.794 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:26:15.800 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:26:15.800 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 17.1187ms
2025-06-20 22:26:15.800 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:26:15.800 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 18.8919ms
2025-06-20 22:26:15.801 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:26:15.802 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.4506ms
2025-06-20 22:26:15.802 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:26:31.221 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-20 22:26:31.222 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:26:31.222 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:26:31.247 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 22:26:31.248 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 15
2025-06-20 22:26:31.248 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 22:26:31.248 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 26.2155ms
2025-06-20 22:26:31.248 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:26:31.248 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 27.1448ms
2025-06-20 22:26:31.254 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:26:31.254 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:26:31.254 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:26:31.283 +04:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:26:31.289 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:26:31.290 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 35.4129ms
2025-06-20 22:26:31.290 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:26:31.290 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 36.0639ms
2025-06-20 22:26:31.290 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:26:31.291 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3917ms
2025-06-20 22:26:31.291 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:26:45.073 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-20 22:26:45.073 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 22:26:45.075 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:26:45.111 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-20 22:26:45.120 +04:00 [INF] Retrieved 22 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-20 22:26:45.125 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:26:45.128 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 52.8265ms
2025-06-20 22:26:45.128 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 22:26:45.128 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 55.5796ms
2025-06-20 22:26:55.803 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 30
2025-06-20 22:26:55.804 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:26:55.804 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:26:55.814 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 22:26:55.814 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 15
2025-06-20 22:26:55.814 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 22:26:55.814 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 10.5006ms
2025-06-20 22:26:55.814 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:26:55.815 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 11.3773ms
2025-06-20 22:26:55.818 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:26:55.818 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:26:55.818 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:26:55.846 +04:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:26:55.849 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:26:55.849 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 30.6987ms
2025-06-20 22:26:55.849 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:26:55.849 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 31.2706ms
2025-06-20 22:26:55.850 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:26:55.851 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5887ms
2025-06-20 22:26:55.851 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:26:59.521 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-20 22:26:59.521 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 22:26:59.521 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:26:59.526 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-20 22:26:59.528 +04:00 [INF] Retrieved 23 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-20 22:26:59.529 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:26:59.529 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 7.4336ms
2025-06-20 22:26:59.529 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 22:26:59.529 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 8.0836ms
2025-06-20 22:27:12.588 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 22:27:12.588 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:27:12.588 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:27:12.596 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 22:27:12.597 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 1
2025-06-20 22:27:12.597 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 22:27:12.597 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 8.637ms
2025-06-20 22:27:12.597 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:27:12.597 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 9.2973ms
2025-06-20 22:27:12.600 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:27:12.600 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:27:12.600 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:27:12.626 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:27:12.629 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:27:12.629 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 28.5159ms
2025-06-20 22:27:12.629 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:27:12.629 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 29.0551ms
2025-06-20 22:27:12.630 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:27:12.631 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.4714ms
2025-06-20 22:27:12.631 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:27:18.843 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-20 22:27:18.843 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 22:27:18.843 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:27:18.849 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-20 22:27:18.851 +04:00 [INF] Retrieved 24 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-20 22:27:18.851 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:27:18.852 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 8.0904ms
2025-06-20 22:27:18.852 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 22:27:18.852 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 8.7975ms
2025-06-20 22:29:36.932 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:29:36.932 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:29:36.932 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:29:36.968 +04:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:29:36.970 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:29:36.970 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 38.0084ms
2025-06-20 22:29:36.970 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:29:36.970 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 38.3734ms
2025-06-20 22:29:36.982 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:29:36.983 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5979ms
2025-06-20 22:29:36.983 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:29:40.805 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 22:29:40.805 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:29:40.805 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:29:40.812 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 22:29:40.813 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 6
2025-06-20 22:29:40.813 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 22:29:40.813 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 8.0503ms
2025-06-20 22:29:40.813 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:29:40.813 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 8.6885ms
2025-06-20 22:29:40.820 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:29:40.820 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:29:40.820 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:29:40.822 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:29:40.824 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:29:40.824 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.0753ms
2025-06-20 22:29:40.824 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:29:40.825 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.4685ms
2025-06-20 22:29:40.826 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:29:40.826 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.4837ms
2025-06-20 22:29:40.826 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:29:47.029 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 22:29:47.029 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:29:47.030 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:29:47.043 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 22:29:47.044 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 6
2025-06-20 22:29:47.044 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 22:29:47.044 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 14.1137ms
2025-06-20 22:29:47.044 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:29:47.044 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 14.8564ms
2025-06-20 22:29:47.048 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:29:47.048 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:29:47.048 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:29:47.074 +04:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:29:47.076 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:29:47.077 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 28.268ms
2025-06-20 22:29:47.077 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:29:47.077 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 28.5853ms
2025-06-20 22:29:47.078 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:29:47.078 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.303ms
2025-06-20 22:29:47.078 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:30:04.380 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 22:30:04.380 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:30:04.380 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:30:04.383 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 22:30:04.383 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 6
2025-06-20 22:30:04.383 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 22:30:04.383 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 3.2278ms
2025-06-20 22:30:04.383 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:30:04.384 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 3.7303ms
2025-06-20 22:30:04.388 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:30:04.388 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:30:04.388 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:30:04.390 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:30:04.393 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:30:04.393 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.5711ms
2025-06-20 22:30:04.393 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:30:04.393 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.9128ms
2025-06-20 22:30:04.394 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:30:04.394 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5722ms
2025-06-20 22:30:04.394 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:30:12.829 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:30:12.829 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:30:12.829 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:30:12.831 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:30:12.833 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:30:12.833 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.9096ms
2025-06-20 22:30:12.833 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:30:12.833 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.4573ms
2025-06-20 22:30:12.834 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:30:12.834 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5124ms
2025-06-20 22:30:12.834 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:30:15.739 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 22:30:15.740 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:30:15.740 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:30:15.742 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 22:30:15.742 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 6
2025-06-20 22:30:15.742 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 22:30:15.742 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.5653ms
2025-06-20 22:30:15.742 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:30:15.742 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 3.0606ms
2025-06-20 22:30:15.745 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:30:15.746 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:30:15.746 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:30:15.747 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:30:15.749 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:30:15.749 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.4041ms
2025-06-20 22:30:15.749 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:30:15.749 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.8592ms
2025-06-20 22:30:15.751 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:30:15.751 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.3064ms
2025-06-20 22:30:15.751 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:33:12.427 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 22:33:12.427 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:33:12.427 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:33:12.440 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 22:33:12.441 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 6
2025-06-20 22:33:12.441 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 22:33:12.441 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 13.6862ms
2025-06-20 22:33:12.441 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:33:12.441 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 14.209ms
2025-06-20 22:33:12.445 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:33:12.445 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:33:12.445 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:33:12.473 +04:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:33:12.475 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:33:12.475 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 30.5888ms
2025-06-20 22:33:12.476 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:33:12.476 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 30.8665ms
2025-06-20 22:33:12.476 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:33:12.477 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2779ms
2025-06-20 22:33:12.477 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:33:16.562 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 22:33:16.563 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:33:16.563 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:33:16.565 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 22:33:16.565 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 3
2025-06-20 22:33:16.565 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 22:33:16.565 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 2.6933ms
2025-06-20 22:33:16.565 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:33:16.565 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 3.2116ms
2025-06-20 22:33:16.569 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:33:16.569 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:33:16.569 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:33:16.570 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:33:16.573 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:33:16.573 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.0203ms
2025-06-20 22:33:16.573 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:33:16.573 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.3413ms
2025-06-20 22:33:16.574 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:33:16.574 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2334ms
2025-06-20 22:33:16.574 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:33:41.220 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 49
2025-06-20 22:33:41.220 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 22:33:41.223 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-20 22:33:41.254 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-20 22:33:41.265 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-20 22:33:41.345 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-20 22:33:41.351 +04:00 [INF] User test7 logged in successfully.
2025-06-20 22:33:41.351 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-20 22:33:41.352 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 128.7119ms
2025-06-20 22:33:41.352 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 22:33:41.352 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 132.8051ms
2025-06-20 22:33:41.358 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:33:41.358 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:33:41.358 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:33:41.360 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:33:41.362 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:33:41.363 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.1933ms
2025-06-20 22:33:41.363 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:33:41.363 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.4848ms
2025-06-20 22:33:41.363 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:33:41.364 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2812ms
2025-06-20 22:33:41.364 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:33:44.132 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 22:33:44.132 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:33:44.132 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 22:33:44.135 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 22:33:44.136 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 7
2025-06-20 22:33:44.136 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 22:33:44.136 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 3.3058ms
2025-06-20 22:33:44.136 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 22:33:44.136 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 3.9611ms
2025-06-20 22:33:44.139 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:33:44.140 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:33:44.140 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:33:44.141 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:33:44.143 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:33:44.143 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 3.4845ms
2025-06-20 22:33:44.143 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:33:44.143 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 3.8182ms
2025-06-20 22:33:44.144 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:33:44.144 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.2262ms
2025-06-20 22:33:44.144 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 22:33:46.637 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 22:33:46.637 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:33:46.637 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 22:33:46.640 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 22:33:46.642 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 22:33:46.642 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 4.4094ms
2025-06-20 22:33:46.642 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 22:33:46.642 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 4.8776ms
2025-06-20 22:33:46.642 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 22:33:46.643 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.251ms
2025-06-20 22:33:46.643 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 23:08:58.168 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 23:08:58.319 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 23:08:58.320 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 23:08:58.390 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 23:08:58.390 +04:00 [INF] Hosting environment: Development
2025-06-20 23:08:58.391 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 23:08:59.106 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 23:08:59.144 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:08:59.157 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 23:09:00.168 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 23:09:00.473 +04:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 23:09:00.688 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 23:09:00.704 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1543.8856ms
2025-06-20 23:09:00.704 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:09:00.710 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1604.4142ms
2025-06-20 23:09:00.717 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 23:09:00.746 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 29.3654ms
2025-06-20 23:09:00.747 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 23:09:07.421 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - application/json; charset=utf-8 29
2025-06-20 23:09:07.424 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 23:09:07.430 +04:00 [INF] Route matched with {action = "Add", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Add(Service.DTOs.Watchlist.WatchlistCreateDto) on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 23:09:07.588 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Watchlists] ([AppUserId], [CreatedDate], [IsDeleted], [MovieId], [SeriesId], [UpdatedDate], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-06-20 23:09:07.605 +04:00 [INF] Watchlist created by user f0888b3c-1028-4912-84f1-2cd6e69ca3eb for Movie 1
2025-06-20 23:09:07.606 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-20 23:09:07.608 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI) in 178.2347ms
2025-06-20 23:09:07.608 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.Add (CinelogAPI)'
2025-06-20 23:09:07.608 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Watchlist/Add - 200 null application/json; charset=utf-8 187.7899ms
2025-06-20 23:09:07.616 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 23:09:07.618 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:09:07.618 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 23:09:07.630 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 23:09:07.634 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 23:09:07.635 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 17.026ms
2025-06-20 23:09:07.635 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:09:07.635 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 19.014ms
2025-06-20 23:09:07.636 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 23:09:07.637 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.6404ms
2025-06-20 23:09:07.637 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 23:09:56.373 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 49
2025-06-20 23:09:56.373 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 23:09:56.377 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-20 23:09:56.414 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-20 23:09:56.423 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-20 23:09:56.500 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-20 23:09:56.507 +04:00 [INF] User test7 logged in successfully.
2025-06-20 23:09:56.507 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-20 23:09:56.508 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 130.7578ms
2025-06-20 23:09:56.508 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 23:09:56.509 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 135.5715ms
2025-06-20 23:09:56.516 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 23:09:56.516 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:09:56.516 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 23:09:56.545 +04:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 23:09:56.551 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 23:09:56.551 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 34.9469ms
2025-06-20 23:09:56.551 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:09:56.551 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 35.5ms
2025-06-20 23:09:56.552 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 23:09:56.553 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.4793ms
2025-06-20 23:09:56.553 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 23:09:56.588 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - null null
2025-06-20 23:09:56.588 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - null null
2025-06-20 23:09:56.594 +04:00 [INF] The file /images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg was not modified
2025-06-20 23:09:56.594 +04:00 [INF] The file /images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg was not modified
2025-06-20 23:09:56.595 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ba6ca70d-3dc4-44eb-a73d-ac4d92b421bf-PulpFiction.jpg - 304 null image/jpeg 6.5634ms
2025-06-20 23:09:56.595 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/dc17ec31-b5e5-440d-b466-2ddaa9e8d57c-PulpFiction.jpg - 304 null image/jpeg 6.5658ms
2025-06-20 23:09:56.606 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - null null
2025-06-20 23:09:56.607 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - null null
2025-06-20 23:09:56.607 +04:00 [INF] The file /images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg was not modified
2025-06-20 23:09:56.607 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - null null
2025-06-20 23:09:56.607 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - null null
2025-06-20 23:09:56.607 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/5df330f1-a19e-4366-a021-e0c4e69df870-PulpFiction.jpg - 304 null image/jpeg 1.1223ms
2025-06-20 23:09:56.608 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - null null
2025-06-20 23:09:56.608 +04:00 [INF] The file /images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg was not modified
2025-06-20 23:09:56.608 +04:00 [INF] The file /images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg was not modified
2025-06-20 23:09:56.608 +04:00 [INF] The file /images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg was not modified
2025-06-20 23:09:56.608 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/04ad7e43-9e7d-4c43-ae6f-c7856392acbd-PulpFiction.jpg - 304 null image/jpeg 0.4802ms
2025-06-20 23:09:56.608 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/ca80948b-18e7-40b5-bd23-fcc0b3e8d6aa-PulpFiction.jpg - 304 null image/jpeg 0.8437ms
2025-06-20 23:09:56.608 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9e59765b-805d-48a8-9a33-2851663ef5c2-PulpFiction.jpg - 304 null image/jpeg 0.7956ms
2025-06-20 23:09:56.608 +04:00 [INF] The file /images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg was not modified
2025-06-20 23:09:56.608 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - null null
2025-06-20 23:09:56.608 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - null null
2025-06-20 23:09:56.608 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/90b76a51-9990-4baf-ad48-7ce3ed341832-PulpFiction.jpg - 304 null image/jpeg 0.6305ms
2025-06-20 23:09:56.608 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - null null
2025-06-20 23:09:56.609 +04:00 [INF] The file /images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg was not modified
2025-06-20 23:09:56.609 +04:00 [INF] The file /images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg was not modified
2025-06-20 23:09:56.609 +04:00 [INF] The file /images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg was not modified
2025-06-20 23:09:56.609 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/3c60b793-5cb9-4b74-95c9-a3c4de167c62-PulpFiction.jpg - 304 null image/jpeg 0.6696ms
2025-06-20 23:09:56.609 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/65bbc3de-4156-4d1a-a81b-985c4458efd1-PulpFiction.jpg - 304 null image/jpeg 0.6934ms
2025-06-20 23:09:56.609 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/2b101570-30f3-441e-90f8-5ae1658386e2-PulpFiction.jpg - 304 null image/jpeg 0.5406ms
2025-06-20 23:10:59.108 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 23:10:59.315 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 23:10:59.315 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 23:10:59.406 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 23:10:59.407 +04:00 [INF] Hosting environment: Development
2025-06-20 23:10:59.407 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 23:10:59.702 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 23:10:59.886 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 191.6555ms
2025-06-20 23:11:00.332 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 23:11:00.332 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 23:11:00.345 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 12.5646ms
2025-06-20 23:11:00.380 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 48.0158ms
2025-06-20 23:11:00.393 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 23:11:00.418 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:11:00.436 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 23:11:00.722 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 23:11:00.756 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.5323ms
2025-06-20 23:11:01.819 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 23:11:02.185 +04:00 [INF] Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 23:11:02.443 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 23:11:02.461 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 2022.2949ms
2025-06-20 23:11:02.461 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:11:02.468 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 2075.9661ms
2025-06-20 23:11:02.479 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 23:11:02.525 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 45.9862ms
2025-06-20 23:11:02.526 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 23:11:21.944 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 50
2025-06-20 23:11:21.946 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 23:11:21.954 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-20 23:11:22.067 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-20 23:11:22.077 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-20 23:11:22.078 +04:00 [WRN] Login failed: User not found for testt7
2025-06-20 23:11:22.079 +04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-20 23:11:22.080 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 126.6847ms
2025-06-20 23:11:22.081 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 23:11:22.081 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 400 null application/json; charset=utf-8 137.3499ms
2025-06-20 23:11:33.800 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/account/login - application/json; charset=utf-8 49
2025-06-20 23:11:33.802 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 23:11:33.802 +04:00 [INF] Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Service.DTOs.Login.LoginDto) on controller CinelogAPI.Controllers.UI.AccountController (CinelogAPI).
2025-06-20 23:11:33.830 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-06-20 23:11:33.833 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-06-20 23:11:33.916 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-06-20 23:11:33.923 +04:00 [INF] User test7 logged in successfully.
2025-06-20 23:11:33.923 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.LoginResponse'.
2025-06-20 23:11:33.923 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI) in 120.79ms
2025-06-20 23:11:33.923 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.AccountController.Login (CinelogAPI)'
2025-06-20 23:11:33.924 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/account/login - 200 null application/json; charset=utf-8 124.0694ms
2025-06-20 23:11:33.941 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 23:11:33.943 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:11:33.943 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 23:11:33.974 +04:00 [INF] Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 23:11:33.983 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 23:11:33.984 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 40.4721ms
2025-06-20 23:11:33.984 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:11:33.984 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 43.3944ms
2025-06-20 23:11:33.991 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 23:11:33.994 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 2.5526ms
2025-06-20 23:11:33.994 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 23:12:47.324 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 23:12:47.325 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:12:47.325 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 23:12:47.366 +04:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 23:12:47.373 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 23:12:47.374 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 48.8262ms
2025-06-20 23:12:47.374 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:12:47.374 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 49.5769ms
2025-06-20 23:12:47.380 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 23:12:47.380 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 0.5139ms
2025-06-20 23:12:47.380 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 23:14:37.965 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-20 23:14:38.164 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-20 23:14:38.165 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-20 23:14:38.240 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-20 23:14:38.241 +04:00 [INF] Hosting environment: Development
2025-06-20 23:14:38.241 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-20 23:14:38.736 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-20 23:14:38.903 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 173.179ms
2025-06-20 23:14:38.915 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-20 23:14:38.922 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 6.2914ms
2025-06-20 23:14:39.143 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-20 23:14:39.193 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 49.3131ms
2025-06-20 23:14:39.375 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - null null
2025-06-20 23:14:39.397 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:14:39.418 +04:00 [INF] Route matched with {action = "GetAll", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.MovieController (CinelogAPI).
2025-06-20 23:14:39.558 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-20 23:14:39.600 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 41.9854ms
2025-06-20 23:14:40.681 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-20 23:14:41.029 +04:00 [INF] Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t0].[Bio], [t0].[BirthDate], [t0].[CreatedDate], [t0].[FullName], [t0].[IsDeleted], [t0].[PhotoUrl], [t0].[UpdatedDate], [t1].[MovieId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[Bio], [t1].[BirthDate], [t1].[CreatedDate], [t1].[FullName], [t1].[ImageUrl], [t1].[IsDeleted], [t1].[UpdatedDate], [t2].[Id], [t2].[Content], [t2].[CreatedDate], [t2].[IsDeleted], [t2].[MovieId], [t2].[SeriesId], [t2].[UpdatedDate], [t2].[UserId], [t2].[Id0], [t2].[AccessFailedCount], [t2].[Age], [t2].[ConcurrencyStamp], [t2].[Email], [t2].[EmailConfirmed], [t2].[FullName], [t2].[LockoutEnabled], [t2].[LockoutEnd], [t2].[NormalizedEmail], [t2].[NormalizedUserName], [t2].[PasswordHash], [t2].[PhoneNumber], [t2].[PhoneNumberConfirmed], [t2].[SecurityStamp], [t2].[TwoFactorEnabled], [t2].[UserName], [r].[Id], [r].[AppUserId], [r].[CreatedDate], [r].[IsDeleted], [r].[MovieId], [r].[Score], [r].[SeriesId], [r].[UpdatedDate], [r].[UserId]
FROM [Movies] AS [m]
LEFT JOIN (
    SELECT [m0].[MovieId], [m0].[GenreId], [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [MovieGenres] AS [m0]
    INNER JOIN [Genres] AS [g] ON [m0].[GenreId] = [g].[Id]
) AS [t] ON [m].[Id] = [t].[MovieId]
LEFT JOIN (
    SELECT [m1].[MovieId], [m1].[DirectorId], [d].[Id], [d].[Bio], [d].[BirthDate], [d].[CreatedDate], [d].[FullName], [d].[IsDeleted], [d].[PhotoUrl], [d].[UpdatedDate]
    FROM [MovieDirectors] AS [m1]
    INNER JOIN [Directors] AS [d] ON [m1].[DirectorId] = [d].[Id]
) AS [t0] ON [m].[Id] = [t0].[MovieId]
LEFT JOIN (
    SELECT [m2].[MovieId], [m2].[ActorId], [m2].[CharacterName], [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [MovieActors] AS [m2]
    INNER JOIN [Actors] AS [a] ON [m2].[ActorId] = [a].[Id]
) AS [t1] ON [m].[Id] = [t1].[MovieId]
LEFT JOIN (
    SELECT [c].[Id], [c].[Content], [c].[CreatedDate], [c].[IsDeleted], [c].[MovieId], [c].[SeriesId], [c].[UpdatedDate], [c].[UserId], [a0].[Id] AS [Id0], [a0].[AccessFailedCount], [a0].[Age], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[FullName], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[SecurityStamp], [a0].[TwoFactorEnabled], [a0].[UserName]
    FROM [Comments] AS [c]
    INNER JOIN [AspNetUsers] AS [a0] ON [c].[UserId] = [a0].[Id]
) AS [t2] ON [m].[Id] = [t2].[MovieId]
LEFT JOIN [Ratings] AS [r] ON [m].[Id] = [r].[MovieId]
ORDER BY [m].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[MovieId], [t0].[DirectorId], [t0].[Id], [t1].[MovieId], [t1].[ActorId], [t1].[Id], [t2].[Id], [t2].[Id0]
2025-06-20 23:14:41.259 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Movie.MovieDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 23:14:41.274 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI) in 1853.6854ms
2025-06-20 23:14:41.275 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.MovieController.GetAll (CinelogAPI)'
2025-06-20 23:14:41.280 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Movie/GetAll - 200 null application/json; charset=utf-8 1906.7845ms
2025-06-20 23:14:41.295 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - null null
2025-06-20 23:14:41.334 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetUserMovieIds - 404 0 null 38.9818ms
2025-06-20 23:14:41.335 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/Watchlist/GetUserMovieIds, Response status code: 404
2025-06-20 23:15:10.983 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - null null
2025-06-20 23:15:10.988 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 23:15:10.991 +04:00 [INF] Route matched with {action = "GetAllByUser", controller = "Watchlist"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllByUser() on controller CinelogAPI.Controllers.UI.WatchlistController (CinelogAPI).
2025-06-20 23:15:11.096 +04:00 [INF] Executed DbCommand (29ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AppUserId], [w].[CreatedDate], [w].[IsDeleted], [w].[MovieId], [w].[SeriesId], [w].[UpdatedDate], [w].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[Age], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FullName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [s].[Id], [s].[CreatedDate], [s].[Description], [s].[IsDeleted], [s].[PosterUrl], [s].[ReleaseDate], [s].[Title], [s].[UpdatedDate], [m].[Id], [m].[CreatedDate], [m].[Description], [m].[Duration], [m].[IsDeleted], [m].[PosterUrl], [m].[ReleaseDate], [m].[Title], [m].[UpdatedDate]
FROM [Watchlists] AS [w]
INNER JOIN [AspNetUsers] AS [a] ON [w].[UserId] = [a].[Id]
LEFT JOIN [Series] AS [s] ON [w].[SeriesId] = [s].[Id]
LEFT JOIN [Movies] AS [m] ON [w].[MovieId] = [m].[Id]
WHERE [w].[UserId] = @__userId_0
2025-06-20 23:15:11.120 +04:00 [INF] Retrieved 32 watchlists for user f0888b3c-1028-4912-84f1-2cd6e69ca3eb
2025-06-20 23:15:11.126 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Watchlist.WatchlistDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-20 23:15:11.131 +04:00 [INF] Executed action CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI) in 139.7536ms
2025-06-20 23:15:11.131 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.UI.WatchlistController.GetAllByUser (CinelogAPI)'
2025-06-20 23:15:11.131 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Watchlist/GetAllByUser - 200 null application/json; charset=utf-8 148.4769ms
