2025-06-17 00:07:15.831 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:07:15.836 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:07:15.837 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:07:15.943 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:07:15.947 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:07:15.947 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:07:15.948 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 111.169ms
2025-06-17 00:07:15.948 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:07:15.948 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 117.1778ms
2025-06-17 00:12:50.716 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 00:12:50.844 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 00:12:50.844 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 00:12:50.898 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 00:12:50.898 +04:00 [INF] Hosting environment: Development
2025-06-17 00:12:50.898 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 00:12:51.424 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 00:12:51.553 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 130.9468ms
2025-06-17 00:12:51.562 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 00:12:51.562 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 00:12:51.566 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.8312ms
2025-06-17 00:12:51.586 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 23.9855ms
2025-06-17 00:12:51.640 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 00:12:51.676 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 36.2617ms
2025-06-17 00:13:01.684 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:13:01.700 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:01.716 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:02.581 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:13:02.582 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:13:02.691 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 00:13:02.927 +04:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:03.077 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:03.082 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:03.092 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1374.3842ms
2025-06-17 00:13:03.092 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:03.098 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1413.8676ms
2025-06-17 00:13:06.045 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:13:06.048 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:06.049 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:06.091 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:13:06.091 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:13:06.104 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 00:13:06.122 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:06.125 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:06.125 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:06.126 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 77.1355ms
2025-06-17 00:13:06.126 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:06.126 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 81.4543ms
2025-06-17 00:13:06.810 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-17 00:13:06.812 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:06.812 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:06.825 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:06.827 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:06.827 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:06.827 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 14.8231ms
2025-06-17 00:13:06.827 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:06.827 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 17.2183ms
2025-06-17 00:13:07.474 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-17 00:13:07.475 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:07.475 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:07.478 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:07.479 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:07.479 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:07.480 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.9566ms
2025-06-17 00:13:07.480 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:07.480 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 5.872ms
2025-06-17 00:13:08.290 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - null null
2025-06-17 00:13:08.290 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:08.290 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:08.293 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:08.294 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:08.294 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:08.295 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.1834ms
2025-06-17 00:13:08.295 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:08.295 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - 200 null application/json; charset=utf-8 4.8286ms
2025-06-17 00:13:09.914 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-17 00:13:09.914 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:09.914 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:09.917 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:09.918 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:09.918 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:09.919 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.379ms
2025-06-17 00:13:09.919 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:09.919 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 4.9629ms
2025-06-17 00:13:10.498 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-17 00:13:10.499 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:10.499 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:10.501 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:10.502 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:10.503 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:10.503 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.1893ms
2025-06-17 00:13:10.503 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:10.503 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 4.8691ms
2025-06-17 00:13:11.059 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:13:11.059 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:11.059 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:11.061 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:11.063 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:11.063 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:11.063 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.3617ms
2025-06-17 00:13:11.063 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:11.064 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 4.967ms
2025-06-17 00:13:12.473 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-17 00:13:12.474 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:12.474 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:12.476 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:12.478 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:12.478 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:12.478 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.4229ms
2025-06-17 00:13:12.478 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:12.478 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 4.9847ms
2025-06-17 00:13:13.090 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-17 00:13:13.090 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:13.090 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:13.092 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:13.093 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:13.094 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:13.094 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.8458ms
2025-06-17 00:13:13.094 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:13.094 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 4.3878ms
2025-06-17 00:13:13.585 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - null null
2025-06-17 00:13:13.585 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:13.585 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:13.587 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:13.589 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:13.589 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:13.589 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.7105ms
2025-06-17 00:13:13.589 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:13.589 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - 200 null application/json; charset=utf-8 4.2858ms
2025-06-17 00:13:15.397 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:13:15.397 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:15.397 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:15.401 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:15.403 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:15.404 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:15.404 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 6.8029ms
2025-06-17 00:13:15.404 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:15.404 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 7.6242ms
2025-06-17 00:13:16.089 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-17 00:13:16.089 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:16.089 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:16.092 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:16.092 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:16.093 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:16.093 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.3122ms
2025-06-17 00:13:16.093 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:16.093 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 3.7734ms
2025-06-17 00:13:16.586 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-17 00:13:16.586 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:16.586 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:16.588 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:16.589 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:16.590 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:16.590 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.6686ms
2025-06-17 00:13:16.590 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:16.590 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 4.1906ms
2025-06-17 00:13:17.002 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - null null
2025-06-17 00:13:17.003 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:17.003 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:17.005 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:17.006 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:17.006 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:17.006 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.5052ms
2025-06-17 00:13:17.006 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:17.007 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - 200 null application/json; charset=utf-8 4.0555ms
2025-06-17 00:13:17.473 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-17 00:13:17.474 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:17.474 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:17.477 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:17.477 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:17.478 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:17.478 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.8346ms
2025-06-17 00:13:17.478 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:17.478 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 4.645ms
2025-06-17 00:13:17.865 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:13:17.865 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:17.865 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:17.868 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:17.869 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:17.869 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:17.869 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.5854ms
2025-06-17 00:13:17.869 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:17.869 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 4.2115ms
2025-06-17 00:13:18.481 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:13:18.482 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:18.482 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:18.484 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:13:18.485 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:13:18.485 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:18.485 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.7682ms
2025-06-17 00:13:18.485 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:13:18.485 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.1469ms
2025-06-17 00:13:20.938 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=g - null null
2025-06-17 00:13:20.939 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-17 00:13:20.943 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:20.964 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 00:13:20.981 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-17 00:13:20.982 +04:00 [INF] Found 1 genres for search text: 'g'
2025-06-17 00:13:20.987 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:20.988 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 44.0465ms
2025-06-17 00:13:20.988 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-17 00:13:20.988 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=g - 200 null application/json; charset=utf-8 49.3195ms
2025-06-17 00:13:26.971 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=d - null null
2025-06-17 00:13:26.971 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-17 00:13:26.971 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:26.974 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-17 00:13:26.974 +04:00 [INF] Found 4 genres for search text: 'd'
2025-06-17 00:13:26.974 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:26.974 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 3.0137ms
2025-06-17 00:13:26.974 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-17 00:13:26.974 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=d - 200 null application/json; charset=utf-8 3.6168ms
2025-06-17 00:13:35.285 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=a - null null
2025-06-17 00:13:35.286 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-17 00:13:35.286 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:35.287 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-17 00:13:35.288 +04:00 [INF] Found 9 genres for search text: 'a'
2025-06-17 00:13:35.288 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:35.288 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 2.4202ms
2025-06-17 00:13:35.288 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-17 00:13:35.288 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=a - 200 null application/json; charset=utf-8 2.8919ms
2025-06-17 00:13:40.519 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=act - null null
2025-06-17 00:13:40.519 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-17 00:13:40.519 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:13:40.520 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-17 00:13:40.521 +04:00 [INF] Found 2 genres for search text: 'act'
2025-06-17 00:13:40.521 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:13:40.521 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 2.1ms
2025-06-17 00:13:40.521 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-17 00:13:40.521 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=act - 200 null application/json; charset=utf-8 2.4515ms
2025-06-17 00:18:20.498 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:18:20.498 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:18:20.498 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:18:20.518 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:18:20.520 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:18:20.520 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:18:20.520 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 22.2033ms
2025-06-17 00:18:20.520 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:18:20.520 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 22.5907ms
2025-06-17 00:18:27.141 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=g - null null
2025-06-17 00:18:27.141 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-17 00:18:27.141 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:18:27.151 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-17 00:18:27.152 +04:00 [INF] Found 1 genres for search text: 'g'
2025-06-17 00:18:27.152 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:18:27.152 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 11.1039ms
2025-06-17 00:18:27.152 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-17 00:18:27.152 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=g - 200 null application/json; charset=utf-8 11.4815ms
2025-06-17 00:18:30.115 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:18:30.115 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:18:30.115 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:18:30.117 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:18:30.118 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:18:30.118 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:18:30.119 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.2745ms
2025-06-17 00:18:30.119 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:18:30.119 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.7175ms
2025-06-17 00:19:26.864 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:19:26.864 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:19:26.864 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:19:26.884 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:19:26.886 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:19:26.886 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:19:26.886 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 21.7358ms
2025-06-17 00:19:26.886 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:19:26.886 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 22.0934ms
2025-06-17 00:19:57.608 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 00:19:57.725 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 00:19:57.725 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 00:19:57.783 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 00:19:57.783 +04:00 [INF] Hosting environment: Development
2025-06-17 00:19:57.783 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 00:19:58.007 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 00:19:58.146 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 139.2295ms
2025-06-17 00:19:58.150 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 00:19:58.150 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 00:19:58.155 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.6462ms
2025-06-17 00:19:58.172 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.8892ms
2025-06-17 00:19:58.237 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 00:19:58.263 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 25.2996ms
2025-06-17 00:20:05.465 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:20:05.479 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:05.496 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:20:06.363 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:20:06.364 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:20:06.481 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 00:20:06.716 +04:00 [INF] Executed DbCommand (47ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:20:06.865 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:20:06.870 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:20:06.881 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1383.1174ms
2025-06-17 00:20:06.882 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:06.887 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1422.6183ms
2025-06-17 00:20:09.611 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:20:09.615 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:09.615 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:20:09.656 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:20:09.656 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:20:09.668 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 00:20:09.682 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:20:09.685 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:20:09.686 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:20:09.686 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 71.0863ms
2025-06-17 00:20:09.686 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:09.687 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 75.4552ms
2025-06-17 00:20:10.393 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-17 00:20:10.395 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:10.395 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:20:10.409 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:20:10.410 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:20:10.410 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:20:10.410 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 15.0161ms
2025-06-17 00:20:10.410 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:10.411 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 17.4065ms
2025-06-17 00:20:11.081 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-17 00:20:11.081 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:11.081 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:20:11.084 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:20:11.085 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:20:11.085 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:20:11.086 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.2394ms
2025-06-17 00:20:11.086 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:11.086 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 4.9698ms
2025-06-17 00:20:11.592 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - null null
2025-06-17 00:20:11.592 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:11.592 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:20:11.595 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:20:11.596 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:20:11.597 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:20:11.597 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.3553ms
2025-06-17 00:20:11.597 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:11.597 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - 200 null application/json; charset=utf-8 4.9743ms
2025-06-17 00:20:13.400 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-17 00:20:13.401 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:13.401 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:20:13.403 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:20:13.405 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:20:13.405 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:20:13.405 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.4267ms
2025-06-17 00:20:13.405 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:13.406 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 5.1604ms
2025-06-17 00:20:14.152 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:20:14.153 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:14.153 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:20:14.155 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:20:14.158 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:20:14.158 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:20:14.158 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 5.3357ms
2025-06-17 00:20:14.158 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:14.158 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 6.1091ms
2025-06-17 00:20:14.585 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:20:14.585 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:14.585 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:20:14.588 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:20:14.590 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:20:14.590 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:20:14.590 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.7475ms
2025-06-17 00:20:14.590 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:14.590 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 5.4387ms
2025-06-17 00:20:15.112 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-17 00:20:15.112 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:15.112 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:20:15.115 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:20:15.116 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:20:15.117 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:20:15.117 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.5502ms
2025-06-17 00:20:15.117 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:15.117 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 5.0794ms
2025-06-17 00:20:15.537 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-17 00:20:15.537 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:15.537 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:20:15.539 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:20:15.540 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:20:15.540 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:20:15.541 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.484ms
2025-06-17 00:20:15.541 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:15.541 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 4.3642ms
2025-06-17 00:20:15.976 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - null null
2025-06-17 00:20:15.976 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:15.976 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:20:15.978 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:20:15.979 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:20:15.980 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:20:15.980 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.3165ms
2025-06-17 00:20:15.980 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:15.980 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - 200 null application/json; charset=utf-8 4.8022ms
2025-06-17 00:20:17.128 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:20:17.129 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:17.129 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:20:17.131 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:20:17.132 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:20:17.133 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:20:17.133 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.9675ms
2025-06-17 00:20:17.133 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:20:17.133 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.7521ms
2025-06-17 00:21:43.859 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 00:21:43.987 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 00:21:43.987 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 00:21:44.042 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 00:21:44.043 +04:00 [INF] Hosting environment: Development
2025-06-17 00:21:44.043 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 00:21:44.549 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 00:21:44.661 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 112.8851ms
2025-06-17 00:21:44.677 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 00:21:44.680 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 00:21:44.680 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 2.9868ms
2025-06-17 00:21:44.697 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 17.205ms
2025-06-17 00:21:44.760 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 00:21:44.790 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 30.5647ms
2025-06-17 00:21:59.349 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:21:59.363 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:21:59.380 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:00.207 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:22:00.208 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:22:00.319 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 00:22:00.551 +04:00 [INF] Executed DbCommand (43ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:00.706 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:00.711 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:00.721 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1339.4655ms
2025-06-17 00:22:00.721 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:00.725 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1376.0081ms
2025-06-17 00:22:02.611 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:22:02.614 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:02.615 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:02.655 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:22:02.655 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:22:02.667 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 00:22:02.682 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:02.684 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:02.685 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:02.686 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 70.7175ms
2025-06-17 00:22:02.686 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:02.686 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 75.1026ms
2025-06-17 00:22:03.303 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-17 00:22:03.304 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:03.304 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:03.318 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:03.319 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:03.319 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:03.320 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 15.1416ms
2025-06-17 00:22:03.320 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:03.320 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 17.1091ms
2025-06-17 00:22:03.863 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-17 00:22:03.864 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:03.864 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:03.867 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:03.869 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:03.869 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:03.869 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 5.2311ms
2025-06-17 00:22:03.869 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:03.870 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 6.5169ms
2025-06-17 00:22:04.494 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - null null
2025-06-17 00:22:04.494 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:04.495 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:04.497 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:04.498 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:04.499 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:04.499 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.4344ms
2025-06-17 00:22:04.499 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:04.499 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - 200 null application/json; charset=utf-8 5.0225ms
2025-06-17 00:22:05.959 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-17 00:22:05.959 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:05.959 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:05.962 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:05.964 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:05.964 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:05.965 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 5.3597ms
2025-06-17 00:22:05.965 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:05.965 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 6.2283ms
2025-06-17 00:22:06.471 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-17 00:22:06.471 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:06.471 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:06.473 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:06.475 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:06.475 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:06.475 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.3451ms
2025-06-17 00:22:06.475 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:06.476 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 4.9527ms
2025-06-17 00:22:06.918 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:22:06.919 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:06.919 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:06.921 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:06.923 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:06.923 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:06.923 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.2664ms
2025-06-17 00:22:06.923 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:06.923 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 4.7261ms
2025-06-17 00:22:07.374 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:22:07.374 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:07.374 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:07.377 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:07.379 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:07.380 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:07.380 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 5.3186ms
2025-06-17 00:22:07.380 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:07.380 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.8211ms
2025-06-17 00:22:08.984 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:22:08.984 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:08.984 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:08.986 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:08.988 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:08.988 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:08.988 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.8158ms
2025-06-17 00:22:08.988 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:08.988 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 4.3299ms
2025-06-17 00:22:09.415 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - null null
2025-06-17 00:22:09.415 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:09.415 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:09.418 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:09.419 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:09.419 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:09.419 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.7753ms
2025-06-17 00:22:09.419 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:09.420 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=3 - 200 null application/json; charset=utf-8 4.4799ms
2025-06-17 00:22:09.886 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - null null
2025-06-17 00:22:09.886 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:09.886 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:09.889 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:09.890 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:09.890 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:09.890 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.9898ms
2025-06-17 00:22:09.891 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:09.891 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=4 - 200 null application/json; charset=utf-8 4.5146ms
2025-06-17 00:22:11.102 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - null null
2025-06-17 00:22:11.102 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:11.102 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:22:11.104 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:22:11.105 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:22:11.105 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:22:11.105 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.0469ms
2025-06-17 00:22:11.105 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:22:11.105 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=5 - 200 null application/json; charset=utf-8 3.4934ms
2025-06-17 00:28:15.636 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 00:28:15.774 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 00:28:15.775 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 00:28:15.832 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 00:28:15.832 +04:00 [INF] Hosting environment: Development
2025-06-17 00:28:15.832 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 00:28:16.342 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 00:28:16.452 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 110.2306ms
2025-06-17 00:28:16.482 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 00:28:16.484 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 00:28:16.487 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.432ms
2025-06-17 00:28:16.506 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.1924ms
2025-06-17 00:28:16.567 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 00:28:16.590 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 23.4358ms
2025-06-17 00:28:25.720 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:28:25.734 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:28:25.754 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:28:26.599 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:28:26.599 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:28:26.712 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 00:28:26.949 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:28:27.106 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:28:27.113 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:28:27.125 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1368.0841ms
2025-06-17 00:28:27.125 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:28:27.130 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1410.7643ms
2025-06-17 00:28:31.338 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:28:31.342 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:28:31.343 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:28:31.386 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:28:31.387 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:28:31.398 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 00:28:31.412 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:28:31.414 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:28:31.415 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:28:31.415 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 72.4125ms
2025-06-17 00:28:31.415 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:28:31.415 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 77.1755ms
2025-06-17 00:28:58.290 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAllPaginated?page=3&take=10 - null null
2025-06-17 00:28:58.291 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:28:58.291 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:28:58.305 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:28:58.306 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:28:58.307 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:28:58.307 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 15.4265ms
2025-06-17 00:28:58.307 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:28:58.307 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAllPaginated?page=3&take=10 - 200 null application/json; charset=utf-8 17.4823ms
2025-06-17 00:30:58.787 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:30:58.787 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:30:58.787 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:30:58.804 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:30:58.806 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:30:58.806 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:30:58.806 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 18.9379ms
2025-06-17 00:30:58.806 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:30:58.806 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 19.5237ms
2025-06-17 00:31:07.641 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:31:07.641 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:31:07.641 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:31:07.643 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:31:07.644 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:31:07.645 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:31:07.646 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.2816ms
2025-06-17 00:31:07.646 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:31:07.646 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 4.8718ms
2025-06-17 00:31:19.260 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 00:31:19.376 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 00:31:19.376 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 00:31:19.433 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 00:31:19.434 +04:00 [INF] Hosting environment: Development
2025-06-17 00:31:19.434 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 00:31:19.730 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 00:31:19.863 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 134.1448ms
2025-06-17 00:31:19.885 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 00:31:19.885 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 00:31:19.894 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 8.5771ms
2025-06-17 00:31:19.916 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.7552ms
2025-06-17 00:31:19.968 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 00:31:19.990 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 21.6432ms
2025-06-17 00:32:14.160 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:32:14.174 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:32:14.189 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:32:15.031 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:32:15.031 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:32:15.160 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 00:32:15.422 +04:00 [INF] Executed DbCommand (59ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:32:15.576 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:32:15.581 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:32:15.593 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1401.5856ms
2025-06-17 00:32:15.593 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:32:15.597 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1437.0251ms
2025-06-17 00:32:17.663 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:32:17.667 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:32:17.667 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:32:17.711 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:32:17.711 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 00:32:17.723 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 00:32:17.737 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:32:17.740 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:32:17.740 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:32:17.741 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 73.3589ms
2025-06-17 00:32:17.741 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:32:17.741 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 77.6706ms
2025-06-17 00:32:18.852 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:32:18.854 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:32:18.854 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:32:18.869 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:32:18.871 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:32:18.871 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:32:18.871 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 17.0028ms
2025-06-17 00:32:18.871 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:32:18.872 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 19.5128ms
2025-06-17 00:34:16.526 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:34:16.526 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:34:16.527 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:34:16.548 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:34:16.550 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:34:16.550 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:34:16.551 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 24.1035ms
2025-06-17 00:34:16.551 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:34:16.551 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 24.8866ms
2025-06-17 00:34:17.897 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:34:17.897 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:34:17.897 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:34:17.910 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:34:17.912 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:34:17.913 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:34:17.913 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 16.4705ms
2025-06-17 00:34:17.913 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:34:17.914 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 17.0736ms
2025-06-17 00:35:52.430 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:35:52.431 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:35:52.431 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:35:52.450 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:35:52.452 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:35:52.453 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:35:52.453 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 22.3696ms
2025-06-17 00:35:52.453 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:35:52.454 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 23.2053ms
2025-06-17 00:35:56.756 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:35:56.757 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:35:56.757 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:35:56.769 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:35:56.770 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:35:56.770 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:35:56.771 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 13.7451ms
2025-06-17 00:35:56.771 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:35:56.771 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 14.5294ms
2025-06-17 00:35:57.736 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:35:57.736 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:35:57.737 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:35:57.739 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:35:57.740 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:35:57.740 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:35:57.740 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.6011ms
2025-06-17 00:35:57.740 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:35:57.741 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.3584ms
2025-06-17 00:42:57.768 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:42:57.769 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:42:57.769 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:42:57.842 +04:00 [INF] Executed DbCommand (26ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:42:57.844 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:42:57.844 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:42:57.844 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 74.8987ms
2025-06-17 00:42:57.844 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:42:57.844 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 75.527ms
2025-06-17 00:43:09.119 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/genre/11 - null null
2025-06-17 00:43:09.119 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/genre/11 - 404 0 null 0.4557ms
2025-06-17 00:43:09.120 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: DELETE https://localhost:7209/api/genre/11, Response status code: 404
2025-06-17 00:43:09.129 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:43:09.129 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:43:09.129 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:43:09.131 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:43:09.132 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:43:09.132 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:43:09.132 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.3615ms
2025-06-17 00:43:09.132 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:43:09.133 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.822ms
2025-06-17 00:43:13.029 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:43:13.030 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:43:13.030 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:43:13.032 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:43:13.033 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:43:13.033 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:43:13.033 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.4075ms
2025-06-17 00:43:13.033 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:43:13.033 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.8546ms
2025-06-17 00:43:15.572 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:43:15.573 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:43:15.573 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:43:15.575 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:43:15.576 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:43:15.576 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:43:15.576 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.2109ms
2025-06-17 00:43:15.576 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:43:15.576 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.6657ms
2025-06-17 00:43:21.660 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/genre/11 - null null
2025-06-17 00:43:21.660 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/genre/11 - 404 0 null 0.2251ms
2025-06-17 00:43:21.660 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: DELETE https://localhost:7209/api/genre/11, Response status code: 404
2025-06-17 00:43:21.667 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:43:21.667 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:43:21.667 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:43:21.670 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:43:21.671 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:43:21.671 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:43:21.671 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.9724ms
2025-06-17 00:43:21.672 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:43:21.672 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.6698ms
2025-06-17 00:43:23.569 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:43:23.569 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:43:23.569 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:43:23.581 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:43:23.582 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:43:23.582 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:43:23.582 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 13.1557ms
2025-06-17 00:43:23.582 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:43:23.582 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 13.5779ms
2025-06-17 00:43:24.418 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:43:24.418 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:43:24.418 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:43:24.420 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:43:24.421 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:43:24.421 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:43:24.422 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.7137ms
2025-06-17 00:43:24.422 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:43:24.422 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.3373ms
2025-06-17 00:44:47.450 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:44:47.450 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:44:47.450 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:44:47.470 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:44:47.472 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:44:47.472 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:44:47.472 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 21.9886ms
2025-06-17 00:44:47.472 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:44:47.472 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 22.5355ms
2025-06-17 00:45:54.473 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/genre/4 - null null
2025-06-17 00:45:54.474 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/genre/4 - 404 0 null 0.5044ms
2025-06-17 00:45:54.474 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: DELETE https://localhost:7209/api/genre/4, Response status code: 404
2025-06-17 00:45:54.484 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:45:54.485 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:45:54.485 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:45:54.506 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:45:54.507 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:45:54.508 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:45:54.508 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 23.0541ms
2025-06-17 00:45:54.508 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:45:54.508 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 23.5154ms
2025-06-17 00:45:58.018 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:45:58.018 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:45:58.019 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:45:58.021 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:45:58.022 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:45:58.022 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:45:58.022 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.2407ms
2025-06-17 00:45:58.022 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:45:58.022 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.8206ms
2025-06-17 00:45:59.151 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:45:59.151 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:45:59.151 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:45:59.153 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:45:59.154 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:45:59.154 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:45:59.154 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.2378ms
2025-06-17 00:45:59.154 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:45:59.154 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.6533ms
2025-06-17 00:45:59.966 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:45:59.966 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:45:59.966 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:45:59.968 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:45:59.969 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:45:59.969 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:45:59.969 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.3561ms
2025-06-17 00:45:59.969 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:45:59.969 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.7341ms
2025-06-17 00:46:00.150 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:46:00.150 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:00.150 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:46:00.152 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:46:00.153 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:46:00.153 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:46:00.154 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.2559ms
2025-06-17 00:46:00.154 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:00.154 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.7426ms
2025-06-17 00:46:00.326 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:46:00.326 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:00.326 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:46:00.329 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:46:00.330 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:46:00.330 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:46:00.330 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.653ms
2025-06-17 00:46:00.330 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:00.330 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.0682ms
2025-06-17 00:46:00.490 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:46:00.490 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:00.490 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:46:00.493 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:46:00.494 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:46:00.494 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:46:00.494 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.9752ms
2025-06-17 00:46:00.494 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:00.494 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.5344ms
2025-06-17 00:46:00.658 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:46:00.658 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:00.659 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:46:00.661 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:46:00.662 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:46:00.662 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:46:00.662 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.3685ms
2025-06-17 00:46:00.662 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:00.662 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.9205ms
2025-06-17 00:46:00.834 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:46:00.834 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:00.834 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:46:00.836 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:46:00.836 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:46:00.837 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:46:00.837 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.6013ms
2025-06-17 00:46:00.837 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:00.837 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 2.9397ms
2025-06-17 00:46:00.991 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:46:00.991 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:00.991 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:46:00.994 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:46:00.995 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:46:00.996 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:46:00.996 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.8231ms
2025-06-17 00:46:00.996 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:00.996 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.3121ms
2025-06-17 00:46:01.166 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:46:01.166 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:01.166 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:46:01.168 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:46:01.169 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:46:01.169 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:46:01.169 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.9842ms
2025-06-17 00:46:01.169 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:01.169 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.455ms
2025-06-17 00:46:01.342 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:46:01.343 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:01.343 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:46:01.345 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:46:01.346 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:46:01.346 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:46:01.346 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.9755ms
2025-06-17 00:46:01.346 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:01.346 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.5708ms
2025-06-17 00:46:01.519 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:46:01.519 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:01.519 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:46:01.521 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:46:01.522 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:46:01.522 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:46:01.522 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.0498ms
2025-06-17 00:46:01.522 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:01.523 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.4746ms
2025-06-17 00:46:29.505 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/genre/4 - null null
2025-06-17 00:46:29.505 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/genre/4 - 404 0 null 0.3051ms
2025-06-17 00:46:29.505 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: DELETE https://localhost:7209/api/genre/4, Response status code: 404
2025-06-17 00:46:29.513 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:46:29.513 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:29.513 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:46:29.516 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:46:29.517 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:46:29.518 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:46:29.518 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.6028ms
2025-06-17 00:46:29.518 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:29.518 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.0456ms
2025-06-17 00:46:56.517 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:46:56.517 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:56.518 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:46:56.539 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:46:56.541 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:46:56.541 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:46:56.541 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 23.8684ms
2025-06-17 00:46:56.541 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:46:56.542 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 24.2549ms
2025-06-17 00:47:04.699 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:47:04.699 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:04.699 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:47:04.701 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:47:04.702 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:47:04.702 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:47:04.702 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.7265ms
2025-06-17 00:47:04.702 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:04.702 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.0994ms
2025-06-17 00:47:07.175 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/genre/delete/4 - null null
2025-06-17 00:47:07.175 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/genre/delete/4 - 404 0 null 0.1854ms
2025-06-17 00:47:07.176 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: DELETE https://localhost:7209/api/genre/delete/4, Response status code: 404
2025-06-17 00:47:07.185 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:47:07.185 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:07.185 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:47:07.186 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:47:07.187 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:47:07.187 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:47:07.187 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.1346ms
2025-06-17 00:47:07.187 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:07.187 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 2.3723ms
2025-06-17 00:47:08.749 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:47:08.749 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:08.749 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:47:08.751 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:47:08.752 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:47:08.752 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:47:08.752 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.6768ms
2025-06-17 00:47:08.752 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:08.752 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 2.9817ms
2025-06-17 00:47:09.606 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:47:09.606 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:09.606 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:47:09.607 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:47:09.608 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:47:09.609 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:47:09.609 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.682ms
2025-06-17 00:47:09.609 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:09.609 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 2.9655ms
2025-06-17 00:47:10.014 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:47:10.014 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:10.014 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:47:10.016 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:47:10.017 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:47:10.017 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:47:10.017 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.62ms
2025-06-17 00:47:10.017 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:10.017 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 2.9406ms
2025-06-17 00:47:10.213 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:47:10.213 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:10.213 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:47:10.215 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:47:10.216 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:47:10.216 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:47:10.216 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.9797ms
2025-06-17 00:47:10.216 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:10.216 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.2626ms
2025-06-17 00:47:10.404 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:47:10.405 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:10.405 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:47:10.407 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:47:10.412 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:47:10.412 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:47:10.413 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 7.896ms
2025-06-17 00:47:10.413 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:47:10.413 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 8.2474ms
2025-06-17 00:48:35.433 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:48:35.434 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:48:35.434 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:48:35.459 +04:00 [INF] Executed DbCommand (25ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:48:35.461 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:48:35.461 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:48:35.461 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 27.4307ms
2025-06-17 00:48:35.461 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:48:35.461 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 27.756ms
2025-06-17 00:48:57.029 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:48:57.029 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:48:57.029 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:48:57.030 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:48:57.031 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:48:57.031 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:48:57.031 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.3864ms
2025-06-17 00:48:57.031 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:48:57.031 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 2.6656ms
2025-06-17 00:51:24.549 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:51:24.549 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:51:24.549 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:51:24.568 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:51:24.569 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:51:24.570 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:51:24.570 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 20.8663ms
2025-06-17 00:51:24.570 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:51:24.570 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 21.1544ms
2025-06-17 00:51:31.862 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=4 - null null
2025-06-17 00:51:31.862 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 00:51:31.868 +04:00 [INF] Route matched with {action = "Delete", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:51:31.886 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 00:51:31.900 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:51:31.993 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [MovieGenres]
OUTPUT 1
WHERE [GenreId] = @p0 AND [MovieId] = @p1;
DELETE FROM [Genres]
OUTPUT 1
WHERE [Id] = @p2;
2025-06-17 00:51:32.011 +04:00 [INF] Genre with Id 4 and name 'Actionne2' successfully deleted
2025-06-17 00:51:32.013 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-17 00:51:32.013 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI) in 144.863ms
2025-06-17 00:51:32.013 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 00:51:32.013 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=4 - 200 0 null 151.4303ms
2025-06-17 00:51:32.019 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:51:32.019 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:51:32.019 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:51:32.021 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:51:32.022 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:51:32.022 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:51:32.022 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.4888ms
2025-06-17 00:51:32.022 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:51:32.022 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 2.7353ms
2025-06-17 00:51:33.906 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:51:33.906 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:51:33.906 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:51:33.907 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:51:33.908 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:51:33.908 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:51:33.908 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.2684ms
2025-06-17 00:51:33.908 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:51:33.908 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 2.5468ms
2025-06-17 00:51:52.381 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:51:52.381 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:51:52.381 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:51:52.395 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:51:52.395 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:51:52.395 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:51:52.396 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 14.4145ms
2025-06-17 00:51:52.396 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:51:52.396 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 14.8475ms
2025-06-17 00:51:57.557 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=18 - null null
2025-06-17 00:51:57.557 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 00:51:57.557 +04:00 [INF] Route matched with {action = "Delete", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:51:57.559 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:51:57.566 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Genres]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-17 00:51:57.566 +04:00 [INF] Genre with Id 18 and name 'Halva' successfully deleted
2025-06-17 00:51:57.566 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-17 00:51:57.566 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI) in 9.233ms
2025-06-17 00:51:57.566 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 00:51:57.566 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=18 - 200 0 null 9.5501ms
2025-06-17 00:51:57.571 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:51:57.571 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:51:57.571 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:51:57.573 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:51:57.574 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:51:57.574 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:51:57.574 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.2609ms
2025-06-17 00:51:57.574 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:51:57.574 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.5911ms
2025-06-17 00:52:00.339 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:52:00.339 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:52:00.339 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:52:00.341 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:52:00.342 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:52:00.342 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:52:00.342 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.7834ms
2025-06-17 00:52:00.342 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:52:00.342 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 3.1467ms
2025-06-17 00:52:02.395 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:52:02.395 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:52:02.395 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:52:02.397 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:52:02.398 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:52:02.398 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:52:02.398 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.299ms
2025-06-17 00:52:02.398 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:52:02.398 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.714ms
2025-06-17 00:53:19.597 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:53:19.597 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:53:19.597 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:53:19.620 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:53:19.622 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:53:19.622 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:53:19.622 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 24.651ms
2025-06-17 00:53:19.622 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:53:19.622 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 25.1536ms
2025-06-17 00:53:21.265 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:53:21.266 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:53:21.266 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:53:21.279 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:53:21.280 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:53:21.280 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:53:21.280 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 13.9937ms
2025-06-17 00:53:21.280 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:53:21.280 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 14.4333ms
2025-06-17 00:53:23.737 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:53:23.737 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:53:23.737 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:53:23.756 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:53:23.758 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:53:23.758 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:53:23.758 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 21.0373ms
2025-06-17 00:53:23.758 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:53:23.758 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 21.3317ms
2025-06-17 00:53:59.441 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:53:59.441 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:53:59.441 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:53:59.462 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:53:59.463 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:53:59.463 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:53:59.463 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 22.1644ms
2025-06-17 00:53:59.463 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:53:59.463 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 22.4667ms
2025-06-17 00:54:07.137 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=17 - null null
2025-06-17 00:54:07.137 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 00:54:07.137 +04:00 [INF] Route matched with {action = "Delete", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:54:07.146 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:54:07.150 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Genres]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-17 00:54:07.150 +04:00 [INF] Genre with Id 17 and name 'Bulud' successfully deleted
2025-06-17 00:54:07.150 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-17 00:54:07.150 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI) in 13.1921ms
2025-06-17 00:54:07.150 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 00:54:07.151 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=17 - 200 0 null 13.5239ms
2025-06-17 00:54:07.156 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:54:07.157 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:54:07.157 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:54:07.168 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:54:07.169 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:54:07.169 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:54:07.169 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 12.1886ms
2025-06-17 00:54:07.169 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:54:07.169 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 12.4653ms
2025-06-17 00:59:32.471 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Genre/Create - application/json 23
2025-06-17 00:59:32.471 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-17 00:59:32.474 +04:00 [INF] Route matched with {action = "Create", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Genre.GenreCreateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:59:32.515 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Genres] ([CreatedDate], [IsDeleted], [Name], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-06-17 00:59:32.527 +04:00 [INF] Genre 'Drama' successfully created
2025-06-17 00:59:32.527 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreCreateDto'.
2025-06-17 00:59:32.528 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI) in 53.9891ms
2025-06-17 00:59:32.528 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-17 00:59:32.528 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Genre/Create - 200 null application/json; charset=utf-8 57.1307ms
2025-06-17 00:59:38.853 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:59:38.853 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:59:38.853 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:59:38.870 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:59:38.871 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:59:38.871 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:59:38.871 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 18.0862ms
2025-06-17 00:59:38.871 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:59:38.871 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 18.5126ms
2025-06-17 00:59:43.678 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:59:43.678 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:59:43.678 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:59:43.681 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:59:43.681 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:59:43.682 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:59:43.682 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.1498ms
2025-06-17 00:59:43.682 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:59:43.682 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 3.538ms
2025-06-17 00:59:45.741 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:59:45.742 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:59:45.742 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:59:45.743 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:59:45.744 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:59:45.744 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:59:45.744 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.3506ms
2025-06-17 00:59:45.744 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:59:45.744 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 2.6349ms
2025-06-17 00:59:47.071 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 00:59:47.072 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:59:47.072 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:59:47.087 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:59:47.087 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:59:47.087 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:59:47.088 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 15.9695ms
2025-06-17 00:59:47.088 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:59:47.088 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 16.249ms
2025-06-17 00:59:48.782 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 00:59:48.782 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:59:48.782 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:59:48.785 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 00:59:48.786 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 00:59:48.786 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 00:59:48.786 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.1406ms
2025-06-17 00:59:48.786 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 00:59:48.786 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 4.5756ms
2025-06-17 00:59:58.353 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/Genre/Create - application/json 26
2025-06-17 00:59:58.353 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-17 00:59:58.353 +04:00 [INF] Route matched with {action = "Create", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Genre.GenreCreateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 00:59:58.371 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Genres] ([CreatedDate], [IsDeleted], [Name], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-06-17 00:59:58.371 +04:00 [INF] Genre 'dkdkdkdk' successfully created
2025-06-17 00:59:58.371 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreCreateDto'.
2025-06-17 00:59:58.371 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI) in 17.5478ms
2025-06-17 00:59:58.371 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-17 00:59:58.371 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/Genre/Create - 200 null application/json; charset=utf-8 17.994ms
2025-06-17 01:00:02.209 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 01:00:02.210 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:00:02.210 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:00:02.230 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:00:02.231 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:00:02.231 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:00:02.232 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 21.8678ms
2025-06-17 01:00:02.232 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:00:02.232 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 22.1502ms
2025-06-17 01:00:04.637 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 01:00:04.637 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:00:04.637 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:00:04.651 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:00:04.651 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:00:04.651 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:00:04.652 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 14.3045ms
2025-06-17 01:00:04.652 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:00:04.652 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 14.5293ms
2025-06-17 01:00:06.541 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 01:00:06.542 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:00:06.542 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:00:06.544 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:00:06.545 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:00:06.545 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:00:06.545 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.1567ms
2025-06-17 01:00:06.545 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:00:06.545 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 3.5165ms
2025-06-17 01:06:56.767 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 01:06:56.767 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:06:56.767 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:06:56.833 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:06:56.835 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:06:56.835 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:06:56.835 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 67.8652ms
2025-06-17 01:06:56.835 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:06:56.835 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 68.1364ms
2025-06-17 01:07:09.775 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:07:09.775 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:07:09.778 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:07:09.797 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:07:09.798 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:07:09.798 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:07:09.801 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 22.7669ms
2025-06-17 01:07:09.801 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:07:09.801 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 25.8658ms
2025-06-17 01:11:11.976 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:11:11.976 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:11.976 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:11:11.984 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:11:11.984 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:11:11.984 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:11:11.985 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 8.7496ms
2025-06-17 01:11:11.985 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:11.985 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 9.033ms
2025-06-17 01:11:23.323 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:11:23.323 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:23.323 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:11:23.324 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:11:23.324 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:11:23.324 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:11:23.324 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.5898ms
2025-06-17 01:11:23.324 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:23.324 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 1.8185ms
2025-06-17 01:11:25.022 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 01:11:25.022 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:11:25.022 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:11:25.037 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:11:25.038 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:11:25.038 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:11:25.038 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 16.0624ms
2025-06-17 01:11:25.038 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:11:25.039 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 16.3343ms
2025-06-17 01:11:31.003 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:11:31.003 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:31.003 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:11:31.005 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:11:31.005 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:11:31.005 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:11:31.005 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.9764ms
2025-06-17 01:11:31.005 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:31.005 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 2.3723ms
2025-06-17 01:11:39.546 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:11:39.546 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:39.546 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:11:39.548 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:11:39.548 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:11:39.548 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:11:39.548 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.2853ms
2025-06-17 01:11:39.548 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:39.548 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 1.4925ms
2025-06-17 01:11:39.745 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:11:39.745 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:39.745 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:11:39.746 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:11:39.746 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:11:39.746 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:11:39.746 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.3542ms
2025-06-17 01:11:39.746 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:39.746 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 1.5941ms
2025-06-17 01:11:40.210 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:11:40.210 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:40.210 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:11:40.211 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:11:40.211 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:11:40.211 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:11:40.211 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.2484ms
2025-06-17 01:11:40.211 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:40.211 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 1.4631ms
2025-06-17 01:11:40.660 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:11:40.660 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:40.660 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:11:40.661 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:11:40.661 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:11:40.662 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:11:40.662 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.276ms
2025-06-17 01:11:40.662 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:40.662 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 1.4913ms
2025-06-17 01:11:41.027 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:11:41.027 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:41.027 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:11:41.028 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:11:41.028 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:11:41.028 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:11:41.028 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.5066ms
2025-06-17 01:11:41.028 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:41.028 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 1.7268ms
2025-06-17 01:11:41.243 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:11:41.244 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:41.244 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:11:41.245 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:11:41.245 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:11:41.245 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:11:41.245 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.4701ms
2025-06-17 01:11:41.245 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:41.245 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 1.7096ms
2025-06-17 01:11:41.436 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:11:41.436 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:41.436 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:11:41.438 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:11:41.438 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:11:41.439 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:11:41.439 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 2.8023ms
2025-06-17 01:11:41.439 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:11:41.439 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 3.0926ms
2025-06-17 01:12:38.634 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Action - null null
2025-06-17 01:12:38.634 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:12:38.634 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:12:38.643 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:12:38.643 +04:00 [INF] Genre existence check for name 'Action': true
2025-06-17 01:12:38.643 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:12:38.643 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 9.1904ms
2025-06-17 01:12:38.644 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:12:38.644 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Action - 200 null application/json; charset=utf-8 9.4553ms
2025-06-17 01:16:54.902 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Action - null null
2025-06-17 01:16:54.903 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:16:54.903 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:16:54.910 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:16:54.911 +04:00 [INF] Genre existence check for name 'Action': true
2025-06-17 01:16:54.911 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:16:54.912 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 8.5935ms
2025-06-17 01:16:54.912 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:16:54.912 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Action - 200 null application/json; charset=utf-8 9.4462ms
2025-06-17 01:16:58.005 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 01:16:58.005 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:16:58.005 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:16:58.026 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:16:58.028 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:16:58.028 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:16:58.028 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 22.8552ms
2025-06-17 01:16:58.028 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:16:58.028 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 23.1023ms
2025-06-17 01:17:02.827 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:17:02.827 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:17:02.827 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:17:02.829 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:17:02.829 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:17:02.829 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:17:02.829 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.9108ms
2025-06-17 01:17:02.829 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:17:02.829 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 2.1475ms
2025-06-17 01:54:13.245 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:54:13.245 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:54:13.245 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:54:13.302 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:54:13.302 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:54:13.302 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:54:13.302 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 57.2858ms
2025-06-17 01:54:13.302 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:54:13.302 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 57.7456ms
2025-06-17 01:54:17.355 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=adad - null null
2025-06-17 01:54:17.355 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:54:17.355 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:54:17.357 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:54:17.357 +04:00 [INF] Genre existence check for name 'adad': false
2025-06-17 01:54:17.357 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:54:17.357 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.7264ms
2025-06-17 01:54:17.357 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:54:17.357 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=adad - 200 null application/json; charset=utf-8 2.0568ms
2025-06-17 01:54:17.360 +04:00 [INF] Request starting HTTP/1.1 POST https://localhost:7209/api/genre/create - application/json; charset=utf-8 15
2025-06-17 01:54:17.360 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-17 01:54:17.360 +04:00 [INF] Route matched with {action = "Create", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Service.DTOs.Genre.GenreCreateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:54:17.364 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Genres] ([CreatedDate], [IsDeleted], [Name], [UpdatedDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-06-17 01:54:17.365 +04:00 [INF] Genre 'adad' successfully created
2025-06-17 01:54:17.365 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreCreateDto'.
2025-06-17 01:54:17.365 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI) in 4.6196ms
2025-06-17 01:54:17.365 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Create (CinelogAPI)'
2025-06-17 01:54:17.365 +04:00 [INF] Request finished HTTP/1.1 POST https://localhost:7209/api/genre/create - 200 null application/json; charset=utf-8 4.9314ms
2025-06-17 01:54:17.372 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 01:54:17.372 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:54:17.372 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:54:17.390 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:54:17.391 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:54:17.391 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:54:17.392 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 19.5638ms
2025-06-17 01:54:17.392 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:54:17.392 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 19.8616ms
2025-06-17 01:54:19.169 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 01:54:19.169 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:54:19.169 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:54:19.182 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:54:19.182 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:54:19.182 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:54:19.182 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 13.0608ms
2025-06-17 01:54:19.182 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:54:19.182 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 13.2949ms
2025-06-17 01:54:25.430 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=21 - null null
2025-06-17 01:54:25.430 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 01:54:25.430 +04:00 [INF] Route matched with {action = "Delete", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:54:25.438 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:54:25.443 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Genres]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-17 01:54:25.443 +04:00 [INF] Genre with Id 21 and name 'adad' successfully deleted
2025-06-17 01:54:25.443 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-17 01:54:25.444 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI) in 13.218ms
2025-06-17 01:54:25.444 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 01:54:25.444 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=21 - 200 0 null 13.5012ms
2025-06-17 01:54:25.449 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 01:54:25.449 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:54:25.449 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:54:25.450 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:54:25.451 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:54:25.451 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:54:25.451 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.1759ms
2025-06-17 01:54:25.451 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:54:25.451 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 2.3978ms
2025-06-17 01:55:52.281 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 01:55:52.281 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:55:52.281 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:55:52.299 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:55:52.300 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:55:52.301 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:55:52.301 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 19.7917ms
2025-06-17 01:55:52.301 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:55:52.301 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 20.0141ms
2025-06-17 01:56:02.424 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:56:02.424 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:56:02.424 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:56:02.433 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:56:02.433 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:56:02.433 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:56:02.433 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 8.9476ms
2025-06-17 01:56:02.433 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:56:02.433 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 9.2088ms
2025-06-17 01:56:08.294 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:56:08.294 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:56:08.294 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:56:08.297 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:56:08.298 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:56:08.298 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:56:08.298 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 3.4901ms
2025-06-17 01:56:08.298 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:56:08.298 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 3.7592ms
2025-06-17 01:56:09.867 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:56:09.867 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:56:09.868 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:56:09.869 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:56:09.869 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:56:09.869 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:56:09.869 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.4711ms
2025-06-17 01:56:09.869 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:56:09.869 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 1.6941ms
2025-06-17 01:56:10.425 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:56:10.425 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:56:10.425 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:56:10.427 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:56:10.427 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:56:10.427 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:56:10.427 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.5456ms
2025-06-17 01:56:10.427 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:56:10.427 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 1.85ms
2025-06-17 01:56:20.196 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:56:20.196 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:56:20.196 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:56:20.198 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:56:20.198 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:56:20.198 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:56:20.198 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.865ms
2025-06-17 01:56:20.198 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:56:20.198 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 2.2135ms
2025-06-17 01:56:25.164 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:56:25.164 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:56:25.164 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:56:25.165 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:56:25.165 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:56:25.166 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:56:25.166 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1.6401ms
2025-06-17 01:56:25.166 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:56:25.166 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 1.909ms
2025-06-17 01:56:27.728 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 01:56:27.728 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:56:27.728 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:56:27.744 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:56:27.746 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:56:27.746 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:56:27.746 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 18.3495ms
2025-06-17 01:56:27.746 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:56:27.746 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 18.5483ms
2025-06-17 01:56:59.127 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 01:56:59.128 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:56:59.128 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:56:59.129 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:56:59.129 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:56:59.130 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:56:59.130 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.0764ms
2025-06-17 01:56:59.130 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:56:59.130 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 2.3089ms
2025-06-17 01:57:25.586 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 01:57:25.722 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 01:57:25.722 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 01:57:25.786 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 01:57:25.786 +04:00 [INF] Hosting environment: Development
2025-06-17 01:57:25.786 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 01:57:26.325 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 01:57:26.447 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 122.3523ms
2025-06-17 01:57:26.467 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 01:57:26.467 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 01:57:26.473 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 5.7253ms
2025-06-17 01:57:26.494 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 27.3936ms
2025-06-17 01:57:26.547 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 01:57:26.580 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 33.2991ms
2025-06-17 01:57:43.113 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 01:57:43.128 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:57:43.144 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:57:44.284 +04:00 [INF] Executed DbCommand (33ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 01:57:44.300 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 01:57:44.304 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 01:57:44.313 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 1166.3853ms
2025-06-17 01:57:44.313 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 01:57:44.318 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 1204.4193ms
2025-06-17 01:57:58.726 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 01:57:58.730 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:57:58.736 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:57:58.799 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 01:57:58.799 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 01:57:58.861 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 01:57:58.882 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:57:59.048 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:57:59.050 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:57:59.058 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 321.8843ms
2025-06-17 01:57:59.058 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:57:59.058 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 332.3258ms
2025-06-17 01:58:00.771 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 01:58:00.773 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:58:00.773 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:58:00.786 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 01:58:00.786 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 01:58:00.798 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 01:58:00.812 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:58:00.814 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:58:00.814 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:58:00.814 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 41.1928ms
2025-06-17 01:58:00.814 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:58:00.815 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 43.4673ms
2025-06-17 01:58:03.980 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=20 - null null
2025-06-17 01:58:03.980 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 01:58:03.983 +04:00 [INF] Route matched with {action = "Delete", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:58:03.998 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 01:58:04.009 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:58:04.069 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Genres]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-17 01:58:04.079 +04:00 [INF] Genre with Id 20 and name 'dkdkdkdk' successfully deleted
2025-06-17 01:58:04.081 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-17 01:58:04.081 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI) in 97.5937ms
2025-06-17 01:58:04.081 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 01:58:04.081 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=20 - 200 0 null 101.2588ms
2025-06-17 01:58:04.086 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 01:58:04.087 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:58:04.087 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:58:04.090 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:58:04.091 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:58:04.091 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:58:04.091 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.6883ms
2025-06-17 01:58:04.092 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:58:04.092 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.2104ms
2025-06-17 01:58:05.542 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 01:58:05.543 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:58:05.543 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:58:05.545 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:58:05.546 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:58:05.546 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:58:05.547 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.6169ms
2025-06-17 01:58:05.547 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:58:05.547 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 4.3617ms
2025-06-17 01:58:07.592 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=19 - null null
2025-06-17 01:58:07.592 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 01:58:07.593 +04:00 [INF] Route matched with {action = "Delete", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:58:07.595 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:58:07.597 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Genres]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-17 01:58:07.598 +04:00 [INF] Genre with Id 19 and name 'Drama' successfully deleted
2025-06-17 01:58:07.598 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-17 01:58:07.598 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI) in 5.5684ms
2025-06-17 01:58:07.598 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 01:58:07.598 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=19 - 200 0 null 6.3482ms
2025-06-17 01:58:07.603 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 01:58:07.604 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:58:07.604 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:58:07.605 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:58:07.606 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:58:07.607 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:58:07.607 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.1021ms
2025-06-17 01:58:07.607 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:58:07.607 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.5127ms
2025-06-17 01:58:08.983 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - null null
2025-06-17 01:58:08.983 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:58:08.983 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:58:08.985 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:58:08.986 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:58:08.986 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:58:08.987 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.5003ms
2025-06-17 01:58:08.987 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:58:08.987 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=2 - 200 null application/json; charset=utf-8 4.2036ms
2025-06-17 01:58:11.728 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=16 - null null
2025-06-17 01:58:11.728 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 01:58:11.728 +04:00 [INF] Route matched with {action = "Delete", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:58:11.746 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:58:11.751 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Genres]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-17 01:58:11.751 +04:00 [INF] Genre with Id 16 and name 'cama' successfully deleted
2025-06-17 01:58:11.752 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-17 01:58:11.752 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI) in 24.1682ms
2025-06-17 01:58:11.752 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 01:58:11.753 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=16 - 200 0 null 24.6627ms
2025-06-17 01:58:11.757 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 01:58:11.757 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:58:11.757 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 01:58:11.770 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 01:58:11.772 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 01:58:11.772 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 01:58:11.772 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 15.5388ms
2025-06-17 01:58:11.773 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 01:58:11.773 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 16.0746ms
2025-06-17 02:01:18.844 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 02:01:18.844 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:01:18.844 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 02:01:18.862 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 02:01:18.864 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 02:01:18.864 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 02:01:18.864 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 19.8632ms
2025-06-17 02:01:18.864 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:01:18.864 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 20.275ms
2025-06-17 02:01:31.402 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 02:01:31.402 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:01:31.402 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 02:01:31.438 +04:00 [INF] Executed DbCommand (34ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 02:01:31.444 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 02:01:31.444 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 02:01:31.445 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 42.1365ms
2025-06-17 02:01:31.445 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:01:31.445 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 42.6681ms
2025-06-17 02:01:36.542 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 02:01:36.542 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:01:36.542 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 02:01:36.568 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 02:01:36.570 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 02:01:36.571 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 02:01:36.571 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 28.1752ms
2025-06-17 02:01:36.571 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:01:36.571 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 28.6429ms
2025-06-17 02:06:33.788 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7209/api/Genre/Update/90 - application/json 22
2025-06-17 02:06:33.788 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 02:06:33.796 +04:00 [INF] Route matched with {action = "Update", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, Service.DTOs.Genre.GenreUpdateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 02:06:33.819 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 02:06:33.819 +04:00 [WRN] Genre not found with Id: 90
2025-06-17 02:06:33.820 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI) in 24.058ms
2025-06-17 02:06:33.820 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 02:06:33.820 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Genre with Id 90 not found.
   at Service.Services.GenreService.UpdateAsync(Int32 id, GenreUpdateDto genre) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\GenreService.cs:line 166
   at CinelogAPI.Controllers.Admin.GenreController.Update(Int32 id, GenreUpdateDto request) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\Admin\GenreController.cs:line 59
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-17 02:06:33.848 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Genre with Id 90 not found.
   at Service.Services.GenreService.UpdateAsync(Int32 id, GenreUpdateDto genre) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\GenreService.cs:line 166
   at CinelogAPI.Controllers.Admin.GenreController.Update(Int32 id, GenreUpdateDto request) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\Admin\GenreController.cs:line 59
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-17 02:06:33.856 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7209/api/Genre/Update/90 - 404 null application/json; charset=utf-8 67.3094ms
2025-06-17 02:46:30.706 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=0 - null null
2025-06-17 02:46:30.706 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=0 - 404 0 null 0.9632ms
2025-06-17 02:46:30.707 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:47:33.908 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 02:47:33.908 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:47:33.908 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 02:47:33.986 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 02:47:33.988 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 02:47:33.988 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 02:47:33.989 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 80.1267ms
2025-06-17 02:47:33.989 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:47:33.989 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 81.0622ms
2025-06-17 02:47:35.614 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 02:47:35.615 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 0.3538ms
2025-06-17 02:47:35.615 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:47:39.877 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 02:47:39.877 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 0.4402ms
2025-06-17 02:47:39.877 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:49:18.121 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 02:49:18.121 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 0.4976ms
2025-06-17 02:49:18.122 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:49:19.651 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 02:49:19.652 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 0.3108ms
2025-06-17 02:49:19.652 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:49:23.974 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=6 - null null
2025-06-17 02:49:23.974 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=6 - 404 0 null 0.2716ms
2025-06-17 02:49:23.974 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:49:25.330 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=6 - null null
2025-06-17 02:49:25.331 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=6 - 404 0 null 0.2688ms
2025-06-17 02:49:25.331 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:49:46.783 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-17 02:49:46.783 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-17 02:49:46.785 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 02:49:46.800 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 02:49:46.832 +04:00 [INF] Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-17 02:49:46.837 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 02:49:46.838 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 52.2074ms
2025-06-17 02:49:46.838 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-17 02:49:46.838 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 55.1814ms
2025-06-17 02:50:04.917 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/Genre/Update/5 - application/json 24
2025-06-17 02:50:04.917 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 02:50:04.917 +04:00 [INF] Route matched with {action = "Update", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, Service.DTOs.Genre.GenreUpdateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 02:50:04.944 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 02:50:04.944 +04:00 [INF] Updating genre with Id: 5 from 'Horror' to 'string'
2025-06-17 02:50:04.953 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Genres] SET [CreatedDate] = @p0, [IsDeleted] = @p1, [Name] = @p2, [UpdatedDate] = @p3
OUTPUT 1
WHERE [Id] = @p4;
2025-06-17 02:50:04.954 +04:00 [INF] Genre with Id 5 successfully updated
2025-06-17 02:50:04.955 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreUpdateDto'.
2025-06-17 02:50:04.955 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI) in 38.0502ms
2025-06-17 02:50:04.955 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 02:50:04.955 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/Genre/Update/5 - 200 null application/json; charset=utf-8 38.4374ms
2025-06-17 02:50:09.917 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - null null
2025-06-17 02:50:09.918 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-17 02:50:09.918 +04:00 [INF] Route matched with {action = "GetAll", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 02:50:09.940 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-17 02:50:09.940 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 02:50:09.941 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI) in 22.9165ms
2025-06-17 02:50:09.941 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAll (CinelogAPI)'
2025-06-17 02:50:09.941 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetAll - 200 null application/json; charset=utf-8 23.4741ms
2025-06-17 02:50:54.628 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 02:50:54.766 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 02:50:54.766 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 02:50:54.826 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 02:50:54.826 +04:00 [INF] Hosting environment: Development
2025-06-17 02:50:54.826 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 02:50:55.280 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 02:50:55.419 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 139.9548ms
2025-06-17 02:50:55.435 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 02:50:55.439 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.1105ms
2025-06-17 02:50:55.440 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 02:50:55.465 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 24.339ms
2025-06-17 02:50:55.546 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 02:50:55.582 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 35.654ms
2025-06-17 02:51:17.371 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 02:51:17.388 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 17.4248ms
2025-06-17 02:51:17.390 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:53:13.946 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 02:53:14.069 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 02:53:14.070 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 02:53:14.140 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 02:53:14.141 +04:00 [INF] Hosting environment: Development
2025-06-17 02:53:14.141 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 02:53:14.443 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 02:53:14.562 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 120.0213ms
2025-06-17 02:53:14.574 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 02:53:14.574 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 02:53:14.578 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.6047ms
2025-06-17 02:53:14.596 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.8068ms
2025-06-17 02:53:14.641 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 02:53:14.668 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 26.6891ms
2025-06-17 02:53:25.359 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 02:53:25.374 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:53:25.391 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 02:53:26.292 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 02:53:26.292 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 02:53:26.412 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 02:53:26.656 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 02:53:26.817 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 02:53:26.823 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 02:53:26.837 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1443.4351ms
2025-06-17 02:53:26.837 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:53:26.841 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1482.573ms
2025-06-17 02:53:28.513 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 02:53:28.518 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 4.3429ms
2025-06-17 02:53:28.518 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:53:32.169 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 02:53:32.171 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 2.0864ms
2025-06-17 02:53:32.172 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:54:52.753 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 02:54:52.753 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 0.2997ms
2025-06-17 02:54:52.754 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:54:55.650 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 02:54:55.650 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 0.3516ms
2025-06-17 02:54:55.650 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:55:12.424 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 02:55:12.549 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 02:55:12.549 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 02:55:12.605 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 02:55:12.606 +04:00 [INF] Hosting environment: Development
2025-06-17 02:55:12.606 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 02:55:22.839 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 02:55:22.971 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 02:55:22.972 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 02:55:23.031 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 02:55:23.031 +04:00 [INF] Hosting environment: Development
2025-06-17 02:55:23.031 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 02:55:23.530 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 02:55:23.655 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 125.4339ms
2025-06-17 02:55:23.911 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 02:55:23.915 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.1099ms
2025-06-17 02:55:23.926 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 02:55:23.951 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 24.727ms
2025-06-17 02:55:24.324 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 02:55:24.358 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.032ms
2025-06-17 02:55:30.697 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 02:55:30.712 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:55:30.737 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 02:55:31.629 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 02:55:31.630 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 02:55:31.746 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 02:55:31.986 +04:00 [INF] Executed DbCommand (48ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 02:55:32.151 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 02:55:32.157 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 02:55:32.167 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1428.4007ms
2025-06-17 02:55:32.168 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:55:32.172 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1475.5657ms
2025-06-17 02:57:34.347 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 02:57:34.352 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 5.1989ms
2025-06-17 02:57:34.353 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:59:10.852 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 02:59:10.855 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 2.6956ms
2025-06-17 02:59:10.855 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 02:59:18.898 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 02:59:18.899 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:59:18.899 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 02:59:18.973 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 02:59:18.977 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 02:59:18.978 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 02:59:18.978 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 78.937ms
2025-06-17 02:59:18.979 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 02:59:18.979 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 81.3185ms
2025-06-17 03:00:27.329 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 03:00:27.336 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 7.1846ms
2025-06-17 03:00:27.417 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 03:00:27.418 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.646ms
2025-06-17 03:00:27.418 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 03:00:27.427 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 8.9929ms
2025-06-17 03:00:27.719 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 03:00:27.742 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 22.4817ms
2025-06-17 03:00:41.849 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 03:00:41.986 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 03:00:41.986 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 03:00:42.047 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 03:00:42.047 +04:00 [INF] Hosting environment: Development
2025-06-17 03:00:42.048 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 03:00:42.543 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 03:00:42.662 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 120.0245ms
2025-06-17 03:00:42.677 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 03:00:42.681 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.1074ms
2025-06-17 03:00:42.878 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 03:00:42.907 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 29.2328ms
2025-06-17 03:00:43.281 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 03:00:43.346 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 64.914ms
2025-06-17 03:00:49.794 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:00:49.809 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:00:49.827 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:00:50.837 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 03:00:50.838 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 03:00:50.982 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 03:00:51.260 +04:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:00:51.415 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:00:51.422 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:00:51.434 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1605.027ms
2025-06-17 03:00:51.434 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:00:51.439 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1644.9332ms
2025-06-17 03:00:53.014 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 03:00:53.018 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 3.832ms
2025-06-17 03:00:53.019 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 03:00:55.417 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 03:00:55.420 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 2.0892ms
2025-06-17 03:00:55.420 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 03:08:29.878 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 03:08:30.016 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 03:08:30.016 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 03:08:30.084 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 03:08:30.085 +04:00 [INF] Hosting environment: Development
2025-06-17 03:08:30.085 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 03:08:39.577 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:08:39.622 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:08:39.640 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:08:40.576 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 03:08:40.577 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 03:08:40.709 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 03:08:40.982 +04:00 [INF] Executed DbCommand (49ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:08:41.141 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:08:41.147 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:08:41.161 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1518.7064ms
2025-06-17 03:08:41.161 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:08:41.167 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1591.2511ms
2025-06-17 03:08:43.293 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 03:08:43.297 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 4.0079ms
2025-06-17 03:08:43.298 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 03:11:22.679 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 03:11:22.681 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 2.8394ms
2025-06-17 03:11:22.682 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 03:12:43.712 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 03:12:43.942 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 03:12:43.943 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 03:12:44.048 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 03:12:44.049 +04:00 [INF] Hosting environment: Development
2025-06-17 03:12:44.049 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 03:12:44.379 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 03:12:44.685 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 313.2815ms
2025-06-17 03:12:44.795 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 03:12:44.805 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 9.818ms
2025-06-17 03:12:45.045 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 03:12:45.088 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.0578ms
2025-06-17 03:12:45.455 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 03:12:45.499 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 44.2091ms
2025-06-17 03:12:52.000 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:12:52.025 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:12:52.047 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:12:53.091 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 03:12:53.092 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 03:12:53.235 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 03:12:53.625 +04:00 [INF] Executed DbCommand (65ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:12:53.811 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:12:53.819 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:12:53.832 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1782.2494ms
2025-06-17 03:12:53.832 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:12:53.837 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1837.8523ms
2025-06-17 03:13:08.036 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - null null
2025-06-17 03:13:08.040 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid?id=5 - 404 0 null 4.1819ms
2025-06-17 03:13:08.040 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/api/genre/getbyid, Response status code: 404
2025-06-17 03:14:04.720 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 03:14:04.851 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 03:14:04.852 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 03:14:04.911 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 03:14:04.912 +04:00 [INF] Hosting environment: Development
2025-06-17 03:14:04.912 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 03:14:05.346 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 03:14:05.465 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 120.1181ms
2025-06-17 03:14:05.482 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 03:14:05.486 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.8575ms
2025-06-17 03:14:05.674 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 03:14:05.701 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 26.3549ms
2025-06-17 03:14:06.050 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 03:14:06.099 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 49.6052ms
2025-06-17 03:14:13.724 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetById/2 - null null
2025-06-17 03:14:13.738 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:14:13.756 +04:00 [INF] Route matched with {action = "GetById", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:14:14.856 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 03:14:15.112 +04:00 [INF] Executed DbCommand (44ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:14:15.128 +04:00 [WRN] Genre not found with Id: 2
2025-06-17 03:14:15.132 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI) in 1374.183ms
2025-06-17 03:14:15.133 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:14:15.134 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: Genre with Id 2 not found.
   at Service.Services.GenreService.GetByIdAsync(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\GenreService.cs:line 115
   at CinelogAPI.Controllers.Admin.GenreController.GetById(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\Admin\GenreController.cs:line 38
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-17 03:14:15.164 +04:00 [ERR] Exception occurred
System.Collections.Generic.KeyNotFoundException: Genre with Id 2 not found.
   at Service.Services.GenreService.GetByIdAsync(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\Service\Services\GenreService.cs:line 115
   at CinelogAPI.Controllers.Admin.GenreController.GetById(Int32 id) in C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\Controllers\Admin\GenreController.cs:line 38
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-17 03:14:15.176 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetById/2 - 404 null application/json; charset=utf-8 1451.7627ms
2025-06-17 03:14:20.854 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/Genre/GetById/5 - null null
2025-06-17 03:14:20.859 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:14:20.859 +04:00 [INF] Route matched with {action = "GetById", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:14:20.933 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:14:21.004 +04:00 [INF] Genre with Id 5 and name 'string' successfully retrieved
2025-06-17 03:14:21.029 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreDto'.
2025-06-17 03:14:21.036 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI) in 176.6703ms
2025-06-17 03:14:21.036 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:14:21.037 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/Genre/GetById/5 - 200 null application/json; charset=utf-8 182.6998ms
2025-06-17 03:16:01.267 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:16:01.269 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:16:01.272 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:16:01.290 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 03:16:01.291 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 03:16:01.302 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 03:16:01.325 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:16:01.417 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:16:01.419 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:16:01.422 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 149.9018ms
2025-06-17 03:16:01.423 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:16:01.423 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 155.4493ms
2025-06-17 03:16:03.132 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/5 - null null
2025-06-17 03:16:03.132 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:16:03.132 +04:00 [INF] Route matched with {action = "GetById", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:16:03.141 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:16:03.142 +04:00 [INF] Genre with Id 5 and name 'string' successfully retrieved
2025-06-17 03:16:03.143 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreDto'.
2025-06-17 03:16:03.143 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI) in 10.4515ms
2025-06-17 03:16:03.143 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:16:03.143 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/5 - 200 null application/json; charset=utf-8 11.4923ms
2025-06-17 03:16:16.503 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/genre/update/5 - application/json; charset=utf-8 24
2025-06-17 03:16:16.503 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 03:16:16.506 +04:00 [INF] Route matched with {action = "Update", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, Service.DTOs.Genre.GenreUpdateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:16:16.539 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:16:16.540 +04:00 [INF] Updating genre with Id: 5 from 'string' to 'Horror'
2025-06-17 03:16:16.604 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Genres] SET [CreatedDate] = @p0, [IsDeleted] = @p1, [Name] = @p2, [UpdatedDate] = @p3
OUTPUT 1
WHERE [Id] = @p4;
2025-06-17 03:16:16.612 +04:00 [INF] Genre with Id 5 successfully updated
2025-06-17 03:16:16.612 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreUpdateDto'.
2025-06-17 03:16:16.613 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI) in 106.7345ms
2025-06-17 03:16:16.613 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 03:16:16.613 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/genre/update/5 - 200 null application/json; charset=utf-8 109.9559ms
2025-06-17 03:16:16.619 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:16:16.620 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:16:16.620 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:16:16.639 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:16:16.643 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:16:16.644 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:16:16.644 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 24.0147ms
2025-06-17 03:16:16.644 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:16:16.644 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 24.7776ms
2025-06-17 03:16:27.128 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/11 - null null
2025-06-17 03:16:27.128 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:16:27.128 +04:00 [INF] Route matched with {action = "GetById", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:16:27.142 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:16:27.143 +04:00 [INF] Genre with Id 11 and name 'genre' successfully retrieved
2025-06-17 03:16:27.143 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreDto'.
2025-06-17 03:16:27.144 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI) in 15.0357ms
2025-06-17 03:16:27.144 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:16:27.144 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/11 - 200 null application/json; charset=utf-8 15.7597ms
2025-06-17 03:16:34.230 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/genre/update/11 - application/json; charset=utf-8 23
2025-06-17 03:16:34.230 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 03:16:34.230 +04:00 [INF] Route matched with {action = "Update", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, Service.DTOs.Genre.GenreUpdateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:16:34.233 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:16:34.233 +04:00 [INF] Updating genre with Id: 11 from 'genre' to 'NAme'
2025-06-17 03:16:34.237 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Genres] SET [CreatedDate] = @p0, [IsDeleted] = @p1, [Name] = @p2, [UpdatedDate] = @p3
OUTPUT 1
WHERE [Id] = @p4;
2025-06-17 03:16:34.237 +04:00 [INF] Genre with Id 11 successfully updated
2025-06-17 03:16:34.237 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreUpdateDto'.
2025-06-17 03:16:34.237 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI) in 7.1362ms
2025-06-17 03:16:34.237 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 03:16:34.238 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/genre/update/11 - 200 null application/json; charset=utf-8 7.5395ms
2025-06-17 03:16:34.242 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:16:34.242 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:16:34.242 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:16:34.255 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:16:34.257 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:16:34.257 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:16:34.257 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 15.1382ms
2025-06-17 03:16:34.257 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:16:34.257 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 15.5598ms
2025-06-17 03:16:57.132 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=na - null null
2025-06-17 03:16:57.132 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-17 03:16:57.136 +04:00 [INF] Route matched with {action = "Search", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:16:57.156 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 03:16:57.174 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate], [t].[MovieId], [t].[GenreId], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Genres] AS [g]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [g].[Id] = [t].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [g].[Id] = [t0].[GenreId]
WHERE LOWER(LTRIM(RTRIM([g].[Name]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [g].[Id], [t].[MovieId], [t].[GenreId], [t].[Id], [t0].[SeriesId], [t0].[GenreId]
2025-06-17 03:16:57.175 +04:00 [INF] Found 1 genres for search text: 'na'
2025-06-17 03:16:57.179 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:16:57.180 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI) in 43.4066ms
2025-06-17 03:16:57.180 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Search (CinelogAPI)'
2025-06-17 03:16:57.180 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/search?searchText=na - 200 null application/json; charset=utf-8 48.1987ms
2025-06-17 03:17:04.998 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/11 - null null
2025-06-17 03:17:04.999 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:17:04.999 +04:00 [INF] Route matched with {action = "GetById", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:17:05.001 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:17:05.001 +04:00 [INF] Genre with Id 11 and name 'NAme' successfully retrieved
2025-06-17 03:17:05.001 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreDto'.
2025-06-17 03:17:05.002 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI) in 2.9437ms
2025-06-17 03:17:05.002 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:17:05.002 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/11 - 200 null application/json; charset=utf-8 3.5181ms
2025-06-17 03:17:13.012 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/genre/update/11 - application/json; charset=utf-8 24
2025-06-17 03:17:13.012 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 03:17:13.012 +04:00 [INF] Route matched with {action = "Update", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, Service.DTOs.Genre.GenreUpdateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:17:13.014 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:17:13.014 +04:00 [INF] Updating genre with Id: 11 from 'NAme' to 'Drama'
2025-06-17 03:17:13.015 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Genres] SET [CreatedDate] = @p0, [IsDeleted] = @p1, [Name] = @p2, [UpdatedDate] = @p3
OUTPUT 1
WHERE [Id] = @p4;
2025-06-17 03:17:13.016 +04:00 [INF] Genre with Id 11 successfully updated
2025-06-17 03:17:13.016 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreUpdateDto'.
2025-06-17 03:17:13.016 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI) in 3.6486ms
2025-06-17 03:17:13.016 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 03:17:13.016 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/genre/update/11 - 200 null application/json; charset=utf-8 4.0716ms
2025-06-17 03:17:13.022 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:17:13.022 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:17:13.022 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:17:13.025 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:17:13.027 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:17:13.027 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:17:13.027 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 4.8388ms
2025-06-17 03:17:13.027 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:17:13.027 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.3383ms
2025-06-17 03:17:17.190 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/11 - null null
2025-06-17 03:17:17.190 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:17:17.190 +04:00 [INF] Route matched with {action = "GetById", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:17:17.193 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:17:17.193 +04:00 [INF] Genre with Id 11 and name 'Drama' successfully retrieved
2025-06-17 03:17:17.193 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreDto'.
2025-06-17 03:17:17.193 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI) in 2.8406ms
2025-06-17 03:17:17.193 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:17:17.194 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/11 - 200 null application/json; charset=utf-8 3.4434ms
2025-06-17 03:17:24.711 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/genre/update/11 - application/json; charset=utf-8 23
2025-06-17 03:17:24.711 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 03:17:24.712 +04:00 [INF] Route matched with {action = "Update", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, Service.DTOs.Genre.GenreUpdateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:17:24.730 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:17:24.731 +04:00 [INF] Updating genre with Id: 11 from 'Drama' to 'NAme'
2025-06-17 03:17:24.735 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Genres] SET [CreatedDate] = @p0, [IsDeleted] = @p1, [Name] = @p2, [UpdatedDate] = @p3
OUTPUT 1
WHERE [Id] = @p4;
2025-06-17 03:17:24.735 +04:00 [INF] Genre with Id 11 successfully updated
2025-06-17 03:17:24.735 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreUpdateDto'.
2025-06-17 03:17:24.735 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI) in 23.7031ms
2025-06-17 03:17:24.735 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 03:17:24.735 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/genre/update/11 - 200 null application/json; charset=utf-8 24.1225ms
2025-06-17 03:17:24.740 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:17:24.741 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:17:24.741 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:17:24.755 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:17:24.757 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:17:24.757 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:17:24.757 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 16.236ms
2025-06-17 03:17:24.757 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:17:24.757 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 16.6428ms
2025-06-17 03:19:07.334 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:19:07.334 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:19:07.334 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:19:07.361 +04:00 [INF] Executed DbCommand (26ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:19:07.363 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:19:07.363 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:19:07.363 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 29.0065ms
2025-06-17 03:19:07.363 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:19:07.363 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 29.6668ms
2025-06-17 03:19:13.094 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/i5 - null null
2025-06-17 03:19:13.094 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:19:13.094 +04:00 [INF] Route matched with {action = "GetById", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:19:13.099 +04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-06-17 03:19:13.110 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI) in 15.9332ms
2025-06-17 03:19:13.110 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:19:13.110 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/i5 - 400 null application/problem+json; charset=utf-8 16.4403ms
2025-06-17 03:19:20.354 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/i5 - null null
2025-06-17 03:19:20.354 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:19:20.354 +04:00 [INF] Route matched with {action = "GetById", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:19:20.355 +04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-06-17 03:19:20.356 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI) in 1.2659ms
2025-06-17 03:19:20.356 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:19:20.356 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/i5 - 400 null application/problem+json; charset=utf-8 2.1111ms
2025-06-17 03:19:22.320 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/i5 - null null
2025-06-17 03:19:22.320 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:19:22.320 +04:00 [INF] Route matched with {action = "GetById", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:19:22.321 +04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-06-17 03:19:22.321 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI) in 1.1474ms
2025-06-17 03:19:22.322 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:19:22.322 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/i5 - 400 null application/problem+json; charset=utf-8 1.7017ms
2025-06-17 03:20:10.243 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 03:20:10.392 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 03:20:10.393 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 03:20:10.458 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 03:20:10.459 +04:00 [INF] Hosting environment: Development
2025-06-17 03:20:10.459 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 03:20:11.085 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 03:20:11.212 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 128.3149ms
2025-06-17 03:20:11.224 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 03:20:11.224 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 03:20:11.228 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.6588ms
2025-06-17 03:20:11.247 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 23.1394ms
2025-06-17 03:20:11.302 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 03:20:11.339 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 37.3115ms
2025-06-17 03:20:18.478 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:20:18.494 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:20:18.511 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:20:19.425 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 03:20:19.425 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 03:20:19.544 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 03:20:19.752 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:20:19.920 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:20:19.926 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:20:19.937 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1423.3294ms
2025-06-17 03:20:19.937 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:20:19.941 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1463.444ms
2025-06-17 03:20:21.888 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/5 - null null
2025-06-17 03:20:21.891 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:20:21.894 +04:00 [INF] Route matched with {action = "GetById", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:20:21.951 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 03:20:21.964 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:20:21.966 +04:00 [INF] Genre with Id 5 and name 'Horror' successfully retrieved
2025-06-17 03:20:21.969 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreDto'.
2025-06-17 03:20:21.970 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI) in 74.9514ms
2025-06-17 03:20:21.970 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:20:21.970 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/5 - 200 null application/json; charset=utf-8 81.9413ms
2025-06-17 03:20:32.727 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - null null
2025-06-17 03:20:32.729 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 03:20:32.732 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:20:32.764 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 03:20:32.765 +04:00 [INF] Genre existence check for name 'Drama': true
2025-06-17 03:20:32.765 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 03:20:32.768 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 35.6416ms
2025-06-17 03:20:32.768 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 03:20:32.768 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Drama - 200 null application/json; charset=utf-8 40.9836ms
2025-06-17 03:20:35.546 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:20:35.547 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:20:35.547 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:20:35.552 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:20:35.554 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:20:35.555 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:20:35.555 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 8.2085ms
2025-06-17 03:20:35.555 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:20:35.555 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 9.112ms
2025-06-17 03:20:38.195 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/5 - null null
2025-06-17 03:20:38.196 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:20:38.196 +04:00 [INF] Route matched with {action = "GetById", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:20:38.215 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:20:38.215 +04:00 [INF] Genre with Id 5 and name 'Horror' successfully retrieved
2025-06-17 03:20:38.215 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreDto'.
2025-06-17 03:20:38.215 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI) in 19.4078ms
2025-06-17 03:20:38.215 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:20:38.216 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/5 - 200 null application/json; charset=utf-8 20.2299ms
2025-06-17 03:20:40.112 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Horror - null null
2025-06-17 03:20:40.112 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 03:20:40.113 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:20:40.122 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 03:20:40.122 +04:00 [INF] Genre existence check for name 'Horror': true
2025-06-17 03:20:40.122 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 03:20:40.122 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 9.7954ms
2025-06-17 03:20:40.123 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 03:20:40.123 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Horror - 200 null application/json; charset=utf-8 10.6406ms
2025-06-17 03:20:51.712 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Juilo - null null
2025-06-17 03:20:51.712 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 03:20:51.712 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:20:51.723 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 03:20:51.723 +04:00 [INF] Genre existence check for name 'Juilo': false
2025-06-17 03:20:51.723 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 03:20:51.723 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 10.8596ms
2025-06-17 03:20:51.723 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 03:20:51.724 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Juilo - 200 null application/json; charset=utf-8 11.4524ms
2025-06-17 03:20:51.727 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/genre/update/5 - application/json; charset=utf-8 23
2025-06-17 03:20:51.727 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 03:20:51.730 +04:00 [INF] Route matched with {action = "Update", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, Service.DTOs.Genre.GenreUpdateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:20:51.748 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:20:51.748 +04:00 [INF] Updating genre with Id: 5 from 'Horror' to 'Juilo'
2025-06-17 03:20:51.810 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Genres] SET [CreatedDate] = @p0, [IsDeleted] = @p1, [Name] = @p2, [UpdatedDate] = @p3
OUTPUT 1
WHERE [Id] = @p4;
2025-06-17 03:20:51.817 +04:00 [INF] Genre with Id 5 successfully updated
2025-06-17 03:20:51.817 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreUpdateDto'.
2025-06-17 03:20:51.818 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI) in 87.3748ms
2025-06-17 03:20:51.818 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 03:20:51.818 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/genre/update/5 - 200 null application/json; charset=utf-8 90.6071ms
2025-06-17 03:20:51.823 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:20:51.823 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:20:51.823 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:20:51.835 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:20:51.837 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:20:51.837 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:20:51.838 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 14.6383ms
2025-06-17 03:20:51.838 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:20:51.839 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 16.0073ms
2025-06-17 03:20:54.506 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/5 - null null
2025-06-17 03:20:54.506 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:20:54.506 +04:00 [INF] Route matched with {action = "GetById", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetById(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:20:54.508 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:20:54.508 +04:00 [INF] Genre with Id 5 and name 'Juilo' successfully retrieved
2025-06-17 03:20:54.508 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreDto'.
2025-06-17 03:20:54.508 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI) in 2.4885ms
2025-06-17 03:20:54.509 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetById (CinelogAPI)'
2025-06-17 03:20:54.509 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getbyid/5 - 200 null application/json; charset=utf-8 3.0168ms
2025-06-17 03:21:02.477 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Horror - null null
2025-06-17 03:21:02.478 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 03:21:02.478 +04:00 [INF] Route matched with {action = "ExistsByName", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ExistsByName(System.String) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:21:02.480 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genres] AS [g]
        WHERE LOWER([g].[Name]) = @__ToLower_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-06-17 03:21:02.480 +04:00 [INF] Genre existence check for name 'Horror': false
2025-06-17 03:21:02.480 +04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-06-17 03:21:02.480 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI) in 2.6356ms
2025-06-17 03:21:02.480 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.ExistsByName (CinelogAPI)'
2025-06-17 03:21:02.480 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/existsbyname?name=Horror - 200 null application/json; charset=utf-8 3.1109ms
2025-06-17 03:21:02.481 +04:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7209/api/genre/update/5 - application/json; charset=utf-8 24
2025-06-17 03:21:02.482 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 03:21:02.482 +04:00 [INF] Route matched with {action = "Update", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, Service.DTOs.Genre.GenreUpdateDto) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:21:02.484 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:21:02.484 +04:00 [INF] Updating genre with Id: 5 from 'Juilo' to 'Horror'
2025-06-17 03:21:02.487 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Boolean), @p2='?' (Size = 100), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Genres] SET [CreatedDate] = @p0, [IsDeleted] = @p1, [Name] = @p2, [UpdatedDate] = @p3
OUTPUT 1
WHERE [Id] = @p4;
2025-06-17 03:21:02.487 +04:00 [INF] Genre with Id 5 successfully updated
2025-06-17 03:21:02.487 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.DTOs.Genre.GenreUpdateDto'.
2025-06-17 03:21:02.488 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI) in 5.8493ms
2025-06-17 03:21:02.488 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Update (CinelogAPI)'
2025-06-17 03:21:02.488 +04:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7209/api/genre/update/5 - 200 null application/json; charset=utf-8 6.4867ms
2025-06-17 03:21:02.493 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:21:02.493 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:02.493 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:21:02.497 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:21:02.500 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:21:02.501 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:21:02.501 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 7.4722ms
2025-06-17 03:21:02.501 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:02.501 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 8.0539ms
2025-06-17 03:21:08.231 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=11 - null null
2025-06-17 03:21:08.231 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 03:21:08.234 +04:00 [INF] Route matched with {action = "Delete", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:21:08.237 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:21:08.255 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Genres]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-17 03:21:08.257 +04:00 [INF] Genre with Id 11 and name 'NAme' successfully deleted
2025-06-17 03:21:08.259 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-17 03:21:08.259 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI) in 25.3627ms
2025-06-17 03:21:08.259 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 03:21:08.259 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=11 - 200 0 null 28.1803ms
2025-06-17 03:21:08.264 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:21:08.264 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:08.264 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:21:08.266 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:21:08.267 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:21:08.267 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:21:08.268 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.3785ms
2025-06-17 03:21:08.268 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:08.268 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.7154ms
2025-06-17 03:21:11.530 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=13 - null null
2025-06-17 03:21:11.531 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 03:21:11.531 +04:00 [INF] Route matched with {action = "Delete", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:21:11.532 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:21:11.534 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Genres]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-17 03:21:11.534 +04:00 [INF] Genre with Id 13 and name 'Drama' successfully deleted
2025-06-17 03:21:11.535 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-17 03:21:11.535 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI) in 3.9259ms
2025-06-17 03:21:11.535 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 03:21:11.535 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=13 - 200 0 null 4.776ms
2025-06-17 03:21:11.539 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:21:11.540 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:11.540 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:21:11.541 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:21:11.542 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:21:11.542 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:21:11.543 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 2.8177ms
2025-06-17 03:21:11.543 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:11.543 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.2071ms
2025-06-17 03:21:15.995 +04:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=15 - null null
2025-06-17 03:21:15.995 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 03:21:15.995 +04:00 [INF] Route matched with {action = "Delete", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:21:15.997 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT TOP(1) [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    WHERE [g].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:21:15.998 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Genres]
OUTPUT 1
WHERE [Id] = @p0;
2025-06-17 03:21:15.999 +04:00 [INF] Genre with Id 15 and name 'vasxcasas' successfully deleted
2025-06-17 03:21:15.999 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-06-17 03:21:15.999 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI) in 3.2678ms
2025-06-17 03:21:15.999 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.Delete (CinelogAPI)'
2025-06-17 03:21:15.999 +04:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7209/api/Genre/Delete?id=15 - 200 0 null 3.802ms
2025-06-17 03:21:16.005 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:21:16.005 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:16.005 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:21:16.006 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:21:16.008 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:21:16.009 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:21:16.009 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.7829ms
2025-06-17 03:21:16.009 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:16.009 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.164ms
2025-06-17 03:21:24.985 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:21:24.985 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:24.985 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:21:24.988 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:21:24.989 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:21:24.989 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:21:24.989 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.4409ms
2025-06-17 03:21:24.989 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:24.989 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.9289ms
2025-06-17 03:21:25.737 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:21:25.737 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:25.737 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:21:25.739 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:21:25.741 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:21:25.741 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:21:25.741 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.4138ms
2025-06-17 03:21:25.741 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:25.741 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.0351ms
2025-06-17 03:21:26.521 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:21:26.521 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:26.522 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:21:26.524 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:21:26.525 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:21:26.525 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:21:26.525 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 3.435ms
2025-06-17 03:21:26.525 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:21:26.525 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.854ms
2025-06-17 03:22:06.322 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 03:22:06.322 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:22:06.322 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 03:22:06.342 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 03:22:06.345 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 03:22:06.345 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 03:22:06.345 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 23.2434ms
2025-06-17 03:22:06.345 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 03:22:06.345 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 23.5912ms
2025-06-17 17:34:22.134 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 17:34:22.282 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 17:34:22.283 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 17:34:22.360 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 17:34:22.361 +04:00 [INF] Hosting environment: Development
2025-06-17 17:34:22.361 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 17:34:22.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 17:34:22.702 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 144.1005ms
2025-06-17 17:34:22.719 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 17:34:22.724 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.788ms
2025-06-17 17:34:22.920 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 17:34:22.943 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 23.4128ms
2025-06-17 17:34:23.356 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 17:34:23.389 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 33.2068ms
2025-06-17 17:34:44.787 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:34:44.807 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:34:44.823 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:34:45.768 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 17:34:45.768 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 17:34:45.895 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 17:34:46.200 +04:00 [INF] Executed DbCommand (58ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:34:46.359 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:34:46.365 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:34:46.379 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 1552.1083ms
2025-06-17 17:34:46.379 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:34:46.383 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1596.1838ms
2025-06-17 17:40:22.909 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:40:22.913 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:22.914 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:40:22.989 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:40:22.992 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:40:22.993 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:40:22.994 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 79.9012ms
2025-06-17 17:40:22.994 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:22.994 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 84.9573ms
2025-06-17 17:40:35.845 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 17:40:35.847 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:35.847 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:40:35.862 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 17:40:35.862 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 17:40:35.877 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 17:40:35.892 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:40:35.894 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:40:35.894 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:40:35.894 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 46.913ms
2025-06-17 17:40:35.894 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:35.895 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 49.8449ms
2025-06-17 17:40:38.272 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:40:38.272 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:38.272 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:40:38.274 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:40:38.276 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:40:38.276 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:40:38.276 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 4.0323ms
2025-06-17 17:40:38.276 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:38.276 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.6876ms
2025-06-17 17:40:39.279 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 17:40:39.280 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:39.280 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:40:39.282 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:40:39.283 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:40:39.283 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:40:39.284 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.7818ms
2025-06-17 17:40:39.284 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:39.284 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 4.6927ms
2025-06-17 17:40:40.725 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:40:40.726 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:40.726 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:40:40.729 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:40:40.730 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:40:40.731 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:40:40.731 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 5.1274ms
2025-06-17 17:40:40.731 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:40.731 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.6787ms
2025-06-17 17:40:49.646 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 17:40:49.647 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:49.647 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:40:49.649 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:40:49.650 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:40:49.650 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:40:49.650 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.5929ms
2025-06-17 17:40:49.650 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:49.651 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 4.2444ms
2025-06-17 17:40:50.550 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:40:50.550 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:50.550 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:40:50.552 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:40:50.554 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:40:50.554 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:40:50.554 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 4.0027ms
2025-06-17 17:40:50.554 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:40:50.554 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.5378ms
2025-06-17 17:49:56.973 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:49:56.974 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:49:56.974 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:49:57.052 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:49:57.054 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:49:57.055 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:49:57.055 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 80.6788ms
2025-06-17 17:49:57.055 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:49:57.055 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 81.5904ms
2025-06-17 17:50:04.551 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:50:04.551 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:50:04.551 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:50:04.553 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:50:04.554 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:50:04.554 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:50:04.554 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.143ms
2025-06-17 17:50:04.554 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:50:04.554 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.5837ms
2025-06-17 17:50:37.693 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:50:37.694 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:50:37.694 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:50:37.695 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:50:37.697 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:50:37.697 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:50:37.697 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.5114ms
2025-06-17 17:50:37.697 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:50:37.697 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.993ms
2025-06-17 17:50:53.536 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:50:53.537 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:50:53.537 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:50:53.558 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:50:53.559 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:50:53.560 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:50:53.560 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 23.0595ms
2025-06-17 17:50:53.560 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:50:53.560 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 23.6361ms
2025-06-17 17:50:55.221 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 17:50:55.222 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:50:55.222 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:50:55.242 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:50:55.243 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:50:55.243 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:50:55.243 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 21.3441ms
2025-06-17 17:50:55.243 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:50:55.243 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 21.8665ms
2025-06-17 17:50:56.710 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:50:56.710 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:50:56.710 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:50:56.724 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:50:56.725 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:50:56.725 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:50:56.726 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 15.4532ms
2025-06-17 17:50:56.726 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:50:56.726 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 15.9032ms
2025-06-17 17:55:09.043 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:55:09.043 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:55:09.043 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:55:09.066 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:55:09.068 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:55:09.068 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:55:09.068 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 25.0547ms
2025-06-17 17:55:09.068 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:55:09.069 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 25.6379ms
2025-06-17 17:55:09.241 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - null null
2025-06-17 17:55:09.241 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - null null
2025-06-17 17:55:09.242 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - 404 0 null 0.3647ms
2025-06-17 17:55:09.242 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - 404 0 null 0.3681ms
2025-06-17 17:55:09.242 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot%20(15).png, Response status code: 404
2025-06-17 17:55:09.242 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot%202025-05-24%20004522.png, Response status code: 404
2025-06-17 17:55:09.247 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - null null
2025-06-17 17:55:09.248 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - 404 0 null 0.2688ms
2025-06-17 17:55:09.248 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James%20Gandolfini.jpg, Response status code: 404
2025-06-17 17:55:18.152 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:55:18.152 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:55:18.152 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:55:18.173 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:55:18.175 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:55:18.175 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:55:18.175 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 23.2563ms
2025-06-17 17:55:18.175 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:55:18.176 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 23.8824ms
2025-06-17 17:55:18.194 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - null null
2025-06-17 17:55:18.195 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - 404 0 null 0.2166ms
2025-06-17 17:55:18.195 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot%20(15).png, Response status code: 404
2025-06-17 17:55:18.197 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - null null
2025-06-17 17:55:18.198 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - 404 0 null 0.3339ms
2025-06-17 17:55:18.198 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot%202025-05-24%20004522.png, Response status code: 404
2025-06-17 17:55:18.229 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - null null
2025-06-17 17:55:18.229 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - 404 0 null 0.2681ms
2025-06-17 17:55:18.229 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James%20Gandolfini.jpg, Response status code: 404
2025-06-17 17:55:42.406 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 17:55:42.406 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:55:42.406 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:55:42.428 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:55:42.429 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:55:42.429 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:55:42.429 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 23.266ms
2025-06-17 17:55:42.429 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:55:42.430 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 23.806ms
2025-06-17 17:55:42.451 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict Cumberbatch.jpg - null null
2025-06-17 17:55:42.451 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict Cumberbatch.jpg - 404 0 null 0.2701ms
2025-06-17 17:55:42.451 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict%20Cumberbatch.jpg, Response status code: 404
2025-06-17 17:55:44.205 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:55:44.205 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:55:44.205 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:55:44.221 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:55:44.221 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:55:44.222 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:55:44.222 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 16.7158ms
2025-06-17 17:55:44.222 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:55:44.222 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 17.1012ms
2025-06-17 17:55:44.244 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - null null
2025-06-17 17:55:44.244 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - 404 0 null 0.2531ms
2025-06-17 17:55:44.244 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot%20(15).png, Response status code: 404
2025-06-17 17:55:44.245 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - null null
2025-06-17 17:55:44.246 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - 404 0 null 0.3204ms
2025-06-17 17:55:44.246 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot%202025-05-24%20004522.png, Response status code: 404
2025-06-17 17:55:44.279 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - null null
2025-06-17 17:55:44.280 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - 404 0 null 0.5492ms
2025-06-17 17:55:44.280 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James%20Gandolfini.jpg, Response status code: 404
2025-06-17 17:55:46.246 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 17:55:46.246 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:55:46.246 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:55:46.248 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:55:46.249 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:55:46.249 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:55:46.249 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.0737ms
2025-06-17 17:55:46.249 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:55:46.249 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 3.4557ms
2025-06-17 17:55:46.270 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict Cumberbatch.jpg - null null
2025-06-17 17:55:46.271 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict Cumberbatch.jpg - 404 0 null 0.2992ms
2025-06-17 17:55:46.271 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict%20Cumberbatch.jpg, Response status code: 404
2025-06-17 17:55:47.473 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:55:47.474 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:55:47.474 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:55:47.476 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:55:47.477 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:55:47.477 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:55:47.477 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.6764ms
2025-06-17 17:55:47.477 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:55:47.477 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 4.0759ms
2025-06-17 17:55:47.496 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - null null
2025-06-17 17:55:47.496 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - 404 0 null 0.2524ms
2025-06-17 17:55:47.496 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot%20(15).png, Response status code: 404
2025-06-17 17:55:47.497 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - null null
2025-06-17 17:55:47.498 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - 404 0 null 0.2789ms
2025-06-17 17:55:47.498 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot%202025-05-24%20004522.png, Response status code: 404
2025-06-17 17:55:47.527 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - null null
2025-06-17 17:55:47.527 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - 404 0 null 0.18ms
2025-06-17 17:55:47.527 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James%20Gandolfini.jpg, Response status code: 404
2025-06-17 17:55:51.319 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - null null
2025-06-17 17:55:51.319 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - 404 0 null 0.277ms
2025-06-17 17:55:51.320 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot%202025-05-24%20004522.png, Response status code: 404
2025-06-17 17:56:45.880 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:56:45.880 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:56:45.880 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:56:45.909 +04:00 [INF] Executed DbCommand (27ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:56:45.910 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:56:45.910 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:56:45.910 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 29.9647ms
2025-06-17 17:56:45.910 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:56:45.910 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 30.3531ms
2025-06-17 17:56:46.072 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - null null
2025-06-17 17:56:46.072 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - 404 0 null 0.3557ms
2025-06-17 17:56:46.072 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot%20(15).png, Response status code: 404
2025-06-17 17:56:46.073 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - null null
2025-06-17 17:56:46.073 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - 404 0 null 0.2305ms
2025-06-17 17:56:46.073 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot%202025-05-24%20004522.png, Response status code: 404
2025-06-17 17:56:46.084 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - null null
2025-06-17 17:56:46.084 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - 404 0 null 0.2928ms
2025-06-17 17:56:46.084 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James%20Gandolfini.jpg, Response status code: 404
2025-06-17 17:57:15.023 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 17:57:15.153 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 17:57:15.153 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 17:57:15.209 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 17:57:15.209 +04:00 [INF] Hosting environment: Development
2025-06-17 17:57:15.209 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 17:57:46.052 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 17:57:46.179 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 128.0971ms
2025-06-17 17:57:46.196 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 17:57:46.202 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 6.1303ms
2025-06-17 17:57:46.404 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 17:57:46.430 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 25.9285ms
2025-06-17 17:57:46.810 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 17:57:46.852 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 42.3815ms
2025-06-17 17:58:00.477 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 17:58:00.493 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:58:00.508 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 17:58:01.287 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 17:58:01.288 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 17:58:01.394 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 17:58:01.634 +04:00 [INF] Executed DbCommand (47ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 17:58:01.786 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 17:58:01.791 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 17:58:01.802 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 1292.1671ms
2025-06-17 17:58:01.802 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 17:58:01.806 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1329.2525ms
2025-06-17 17:58:01.869 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - null null
2025-06-17 17:58:01.869 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - null null
2025-06-17 17:58:01.869 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - null null
2025-06-17 17:58:01.871 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - 404 0 null 1.9658ms
2025-06-17 17:58:01.871 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - 404 0 null 1.9629ms
2025-06-17 17:58:01.871 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - 404 0 null 1.9672ms
2025-06-17 17:58:01.872 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot%202025-05-24%20004522.png, Response status code: 404
2025-06-17 17:58:01.872 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot%20(15).png, Response status code: 404
2025-06-17 17:58:01.872 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James%20Gandolfini.jpg, Response status code: 404
2025-06-17 18:06:46.240 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 18:06:46.354 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 18:06:46.354 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 18:06:46.409 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 18:06:46.410 +04:00 [INF] Hosting environment: Development
2025-06-17 18:06:46.410 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 18:06:46.667 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 18:06:46.792 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 125.4531ms
2025-06-17 18:06:46.881 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 18:06:46.881 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 18:06:46.884 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 2.6489ms
2025-06-17 18:06:46.900 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 18.5889ms
2025-06-17 18:06:47.167 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 18:06:47.196 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 28.9895ms
2025-06-17 18:08:35.931 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 18:08:35.945 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:35.960 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:08:36.819 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 18:08:36.820 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 18:08:36.937 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 18:08:37.195 +04:00 [INF] Executed DbCommand (50ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:08:37.349 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:08:37.354 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:08:37.365 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 1401.9248ms
2025-06-17 18:08:37.365 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:37.369 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1438.4058ms
2025-06-17 18:08:37.692 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - null null
2025-06-17 18:08:37.692 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - null null
2025-06-17 18:08:37.728 +04:00 [INF] Sending file. Request path: '/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png'
2025-06-17 18:08:37.728 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/4fd8337b-3d82-4bae-879d-567280e34d7e-Screenshot 2025-05-24 004522.png - 200 375866 image/png 35.6664ms
2025-06-17 18:08:37.737 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - null null
2025-06-17 18:08:37.743 +04:00 [INF] Sending file. Request path: '/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png'
2025-06-17 18:08:37.744 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/17662afb-0172-4dce-b4b9-a91f77b59e5a-Screenshot (15).png - 200 2322656 image/png 51.2319ms
2025-06-17 18:08:37.755 +04:00 [INF] Sending file. Request path: '/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg'
2025-06-17 18:08:37.755 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/9af5e4ff-c77f-46f7-9aae-88cabc6cb11f-James Gandolfini.jpg - 200 601009 image/jpeg 17.7327ms
2025-06-17 18:08:44.412 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 18:08:44.415 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:44.415 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:08:44.454 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 18:08:44.455 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 18:08:44.466 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 18:08:44.481 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:08:44.483 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:08:44.484 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:08:44.484 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 69.1444ms
2025-06-17 18:08:44.484 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:44.485 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 72.1119ms
2025-06-17 18:08:44.508 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/images/a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict Cumberbatch.jpg - null null
2025-06-17 18:08:44.527 +04:00 [INF] Sending file. Request path: '/images/a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict Cumberbatch.jpg'. Physical path: 'C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI\wwwroot\images\a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict Cumberbatch.jpg'
2025-06-17 18:08:44.527 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/images/a3e6be4a-4470-4d11-9fb1-53fb0cde6b1b-Benedict Cumberbatch.jpg - 200 1209190 image/jpeg 18.9484ms
2025-06-17 18:08:46.637 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 18:08:46.638 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:46.638 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:08:46.652 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:08:46.653 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:08:46.653 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:08:46.654 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 15.7465ms
2025-06-17 18:08:46.654 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:46.654 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 16.3401ms
2025-06-17 18:08:49.020 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 18:08:49.020 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:49.021 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:08:49.022 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:08:49.023 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:08:49.024 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:08:49.024 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.0956ms
2025-06-17 18:08:49.024 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:49.024 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 3.5821ms
2025-06-17 18:08:50.030 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 18:08:50.030 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:50.030 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:08:50.032 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:08:50.034 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:08:50.034 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:08:50.035 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 4.5032ms
2025-06-17 18:08:50.035 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:50.035 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.0683ms
2025-06-17 18:08:56.294 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 18:08:56.294 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:56.294 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:08:56.296 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:08:56.297 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:08:56.297 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:08:56.297 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.2151ms
2025-06-17 18:08:56.297 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:56.297 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 3.7049ms
2025-06-17 18:08:58.572 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 18:08:58.572 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:58.572 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:08:58.574 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:08:58.576 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:08:58.577 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:08:58.577 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 5.0587ms
2025-06-17 18:08:58.577 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:08:58.577 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 5.6253ms
2025-06-17 18:10:29.125 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 18:10:29.126 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:10:29.126 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:10:29.147 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:10:29.149 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:10:29.149 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:10:29.149 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 23.6521ms
2025-06-17 18:10:29.149 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:10:29.149 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 24.0717ms
2025-06-17 18:10:30.292 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 18:10:30.292 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:10:30.292 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:10:30.305 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:10:30.306 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:10:30.306 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:10:30.307 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 14.6723ms
2025-06-17 18:10:30.307 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:10:30.307 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 15.0831ms
2025-06-17 18:10:31.902 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 18:10:31.902 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:10:31.902 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:10:31.904 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:10:31.905 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:10:31.905 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:10:31.905 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 2.9069ms
2025-06-17 18:10:31.905 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:10:31.905 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 3.3703ms
2025-06-17 18:10:34.696 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 18:10:34.697 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:10:34.700 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 18:10:34.706 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 18:10:34.706 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 18:10:34.720 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 18:10:34.739 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 18:10:34.763 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 18:10:34.763 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:10:34.765 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 64.9171ms
2025-06-17 18:10:34.765 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:10:34.765 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 68.7518ms
2025-06-17 18:12:50.399 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 18:12:50.400 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:12:50.400 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 18:12:50.443 +04:00 [INF] Executed DbCommand (41ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 18:12:50.449 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 18:12:50.450 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:12:50.450 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 49.3021ms
2025-06-17 18:12:50.450 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:12:50.450 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 50.7453ms
2025-06-17 18:13:02.718 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 18:13:02.719 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:13:02.719 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:13:02.741 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:13:02.742 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:13:02.743 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:13:02.743 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 24.1552ms
2025-06-17 18:13:02.743 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:13:02.743 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 24.5792ms
2025-06-17 18:13:07.390 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 18:13:07.390 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:13:07.391 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:13:07.404 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:13:07.405 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:13:07.405 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:13:07.405 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 14.7978ms
2025-06-17 18:13:07.405 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:13:07.406 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 15.3282ms
2025-06-17 18:13:08.707 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 18:13:08.708 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:13:08.708 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:13:08.710 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:13:08.711 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:13:08.711 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:13:08.711 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.5341ms
2025-06-17 18:13:08.711 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:13:08.711 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.9907ms
2025-06-17 18:15:05.665 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 18:15:05.665 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:15:05.665 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:15:05.686 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:15:05.688 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:15:05.688 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:15:05.688 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 22.9337ms
2025-06-17 18:15:05.688 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:15:05.688 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 23.4987ms
2025-06-17 18:15:12.791 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 18:15:12.791 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:15:12.791 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:15:12.809 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:15:12.811 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:15:12.811 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:15:12.811 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 19.4579ms
2025-06-17 18:15:12.811 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:15:12.811 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 20.0639ms
2025-06-17 18:15:16.133 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 18:15:16.133 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:15:16.133 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:15:16.146 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:15:16.147 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:15:16.147 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:15:16.147 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 14.0377ms
2025-06-17 18:15:16.147 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:15:16.147 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 14.3564ms
2025-06-17 18:25:21.863 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 18:25:21.864 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:25:21.864 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:25:21.932 +04:00 [INF] Executed DbCommand (26ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:25:21.933 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:25:21.934 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:25:21.934 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 69.69ms
2025-06-17 18:25:21.934 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:25:21.934 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 70.2894ms
2025-06-17 18:25:37.369 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/search?searchText=m - null null
2025-06-17 18:25:37.369 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI)'
2025-06-17 18:25:37.371 +04:00 [INF] Route matched with {action = "Search", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:25:37.394 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 18:25:37.410 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ToLower_0_contains='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
WHERE LOWER(LTRIM(RTRIM([a].[FullName]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-17 18:25:37.416 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:25:37.416 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI) in 44.2867ms
2025-06-17 18:25:37.416 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI)'
2025-06-17 18:25:37.416 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/search?searchText=m - 200 null application/json; charset=utf-8 47.29ms
2025-06-17 18:25:48.821 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/search?searchText=JA - null null
2025-06-17 18:25:48.821 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI)'
2025-06-17 18:25:48.821 +04:00 [INF] Route matched with {action = "Search", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:25:48.823 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0_contains='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
WHERE LOWER(LTRIM(RTRIM([a].[FullName]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-17 18:25:48.824 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:25:48.824 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI) in 2.6153ms
2025-06-17 18:25:48.824 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI)'
2025-06-17 18:25:48.824 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/search?searchText=JA - 200 null application/json; charset=utf-8 2.9698ms
2025-06-17 18:32:44.790 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/search?searchText=JA - null null
2025-06-17 18:32:44.790 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI)'
2025-06-17 18:32:44.790 +04:00 [INF] Route matched with {action = "Search", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:32:44.860 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__ToLower_0_contains='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
WHERE LOWER(LTRIM(RTRIM([a].[FullName]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-17 18:32:44.860 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:32:44.860 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI) in 70.3792ms
2025-06-17 18:32:44.860 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI)'
2025-06-17 18:32:44.860 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/search?searchText=JA - 200 null application/json; charset=utf-8 70.8029ms
2025-06-17 18:32:54.472 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 18:32:54.473 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/search?searchText=JA - null null
2025-06-17 18:32:54.473 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI)'
2025-06-17 18:32:54.473 +04:00 [INF] Route matched with {action = "Search", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:32:54.475 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0_contains='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
WHERE LOWER(LTRIM(RTRIM([a].[FullName]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-17 18:32:54.475 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:32:54.475 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI) in 2.2199ms
2025-06-17 18:32:54.475 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI)'
2025-06-17 18:32:54.476 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/search?searchText=JA - 200 null application/json; charset=utf-8 2.6773ms
2025-06-17 18:32:54.480 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 8.3712ms
2025-06-17 18:32:54.593 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 18:32:54.593 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 0.4601ms
2025-06-17 18:32:54.595 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 18:32:54.604 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 9.7206ms
2025-06-17 18:32:54.968 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 18:32:54.996 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 27.4699ms
2025-06-17 18:33:17.379 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 18:33:17.503 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 18:33:17.503 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 18:33:17.563 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 18:33:17.563 +04:00 [INF] Hosting environment: Development
2025-06-17 18:33:17.563 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 18:33:17.955 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 18:33:18.079 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 126.5463ms
2025-06-17 18:33:18.325 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 18:33:18.327 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 18:33:18.328 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.3266ms
2025-06-17 18:33:18.353 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 26.7695ms
2025-06-17 18:33:18.749 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 18:33:18.788 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 38.2905ms
2025-06-17 18:33:33.293 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 18:33:33.308 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:33:33.325 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 18:33:34.194 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 18:33:34.195 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 18:33:34.314 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 18:33:34.556 +04:00 [INF] Executed DbCommand (46ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 18:33:34.720 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 18:33:34.725 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:33:34.737 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 1408.9497ms
2025-06-17 18:33:34.737 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:33:34.742 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 1448.3617ms
2025-06-17 18:33:41.800 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 18:33:41.803 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:33:41.806 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 18:33:41.851 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 18:33:41.851 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 18:33:41.867 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 18:33:41.886 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 18:33:41.920 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 18:33:41.920 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:33:41.923 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 116.019ms
2025-06-17 18:33:41.923 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:33:41.923 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 122.6578ms
2025-06-17 18:34:19.193 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 18:34:19.197 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:34:19.198 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 18:34:19.234 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 18:34:19.239 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 18:34:19.239 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:34:19.239 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 41.8353ms
2025-06-17 18:34:19.240 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:34:19.240 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 46.512ms
2025-06-17 18:34:54.691 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - null null
2025-06-17 18:34:54.691 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:34:54.691 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Genre"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.GenreController (CinelogAPI).
2025-06-17 18:34:54.725 +04:00 [INF] Executed DbCommand (29ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedDate], [t].[IsDeleted], [t].[Name], [t].[UpdatedDate], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[GenreId], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [g].[Id], [g].[CreatedDate], [g].[IsDeleted], [g].[Name], [g].[UpdatedDate]
    FROM [Genres] AS [g]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[GenreId], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieGenres] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[GenreId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[GenreId], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesGenres] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[GenreId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[GenreId], [t0].[Id], [t1].[SeriesId], [t1].[GenreId]
2025-06-17 18:34:54.728 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Genres] AS [g]
2025-06-17 18:34:54.728 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Genre.GenreDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 18:34:54.729 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI) in 37.358ms
2025-06-17 18:34:54.729 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.GenreController.GetAllPaginated (CinelogAPI)'
2025-06-17 18:34:54.729 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/genre/getallpaginated?page=1 - 200 null application/json; charset=utf-8 38.1459ms
2025-06-17 22:22:26.452 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 22:22:26.454 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 22:22:26.455 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 22:22:26.529 +04:00 [INF] Executed DbCommand (27ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 22:22:26.532 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 22:22:26.532 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 22:22:26.532 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 77.2811ms
2025-06-17 22:22:26.532 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 22:22:26.532 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 79.9741ms
2025-06-17 22:22:29.665 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 22:22:29.665 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 22:22:29.665 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 22:22:29.671 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 22:22:29.671 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 22:22:29.683 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 22:22:29.699 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 22:22:29.700 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 22:22:29.700 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 22:22:29.700 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 34.8154ms
2025-06-17 22:22:29.700 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 22:22:29.700 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 35.4533ms
2025-06-17 22:59:49.073 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 22:59:49.215 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 22:59:49.216 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 22:59:49.272 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 22:59:49.273 +04:00 [INF] Hosting environment: Development
2025-06-17 22:59:49.273 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 22:59:49.569 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 22:59:49.665 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 22:59:49.679 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 22:59:49.687 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 120.2953ms
2025-06-17 22:59:49.704 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 22:59:49.705 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 22:59:49.710 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 4.8814ms
2025-06-17 22:59:49.912 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 22:59:49.936 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 24.16ms
2025-06-17 22:59:50.284 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 22:59:50.328 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 44.6844ms
2025-06-17 22:59:50.672 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 22:59:50.673 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 22:59:50.784 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 22:59:51.081 +04:00 [INF] Executed DbCommand (61ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 22:59:51.178 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 22:59:51.185 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 22:59:51.198 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 1490.9951ms
2025-06-17 22:59:51.198 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 22:59:51.204 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 1539.0371ms
2025-06-17 23:06:57.021 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 23:06:57.177 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 23:06:57.177 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 23:06:57.233 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 23:06:57.234 +04:00 [INF] Hosting environment: Development
2025-06-17 23:06:57.234 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 23:06:57.663 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 23:06:57.747 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 23:06:57.761 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:06:57.772 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 110.9797ms
2025-06-17 23:06:57.784 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:06:57.873 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 23:06:57.873 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 23:06:57.877 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.7673ms
2025-06-17 23:06:57.901 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 27.5639ms
2025-06-17 23:06:58.238 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 23:06:58.266 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 27.9435ms
2025-06-17 23:06:58.719 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 23:06:58.720 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 23:06:58.828 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 23:06:59.068 +04:00 [INF] Executed DbCommand (48ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:06:59.164 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:06:59.169 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:06:59.180 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 1394.159ms
2025-06-17 23:06:59.180 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:06:59.185 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 1437.7224ms
2025-06-17 23:07:04.104 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 23:07:04.108 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:04.109 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:07:04.150 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 23:07:04.151 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-06-17 23:07:04.164 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 23:07:04.182 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:07:04.249 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:07:04.250 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:07:04.251 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 142.2806ms
2025-06-17 23:07:04.251 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:04.251 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 147.3112ms
2025-06-17 23:07:09.096 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - null null
2025-06-17 23:07:09.097 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:09.097 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:07:09.112 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:07:09.113 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:07:09.113 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:07:09.113 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 15.8882ms
2025-06-17 23:07:09.113 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:09.114 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=2 - 200 null application/json; charset=utf-8 17.8975ms
2025-06-17 23:07:10.871 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 23:07:10.872 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:10.872 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:07:10.875 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:07:10.877 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:07:10.877 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:07:10.878 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 5.5809ms
2025-06-17 23:07:10.878 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:10.878 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 6.4259ms
2025-06-17 23:07:15.176 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 23:07:15.176 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:15.177 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:07:15.179 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:07:15.181 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:07:15.182 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:07:15.182 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 5.4011ms
2025-06-17 23:07:15.182 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:15.182 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 6.0546ms
2025-06-17 23:07:21.334 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 23:07:21.335 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:21.335 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:07:21.338 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:07:21.340 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:07:21.340 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:07:21.340 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 5.0651ms
2025-06-17 23:07:21.340 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:21.340 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 6.1007ms
2025-06-17 23:07:26.984 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 23:07:26.985 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:26.985 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:07:26.987 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:07:26.990 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:07:26.990 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:07:26.990 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 5.6061ms
2025-06-17 23:07:26.991 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:26.991 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 6.2753ms
2025-06-17 23:07:33.400 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 23:07:33.400 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:33.400 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:07:33.402 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:07:33.403 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:07:33.403 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:07:33.404 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 3.2266ms
2025-06-17 23:07:33.404 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:33.404 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 3.8038ms
2025-06-17 23:07:36.115 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 23:07:36.116 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:36.116 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:07:36.148 +04:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:07:36.152 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:07:36.152 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:07:36.152 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 36.3931ms
2025-06-17 23:07:36.152 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:36.152 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 36.9333ms
2025-06-17 23:07:38.908 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 23:07:38.908 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:38.908 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:07:38.931 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:07:38.933 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:07:38.933 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:07:38.933 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 24.9339ms
2025-06-17 23:07:38.933 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:38.933 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 25.4289ms
2025-06-17 23:07:41.809 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 23:07:41.809 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:41.809 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:07:41.838 +04:00 [INF] Executed DbCommand (27ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:07:41.840 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:07:41.840 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:07:41.840 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 31.1232ms
2025-06-17 23:07:41.840 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:07:41.841 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 31.6512ms
2025-06-17 23:09:50.144 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 23:09:50.156 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 11.9436ms
2025-06-17 23:09:50.177 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 23:09:50.178 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 23:09:50.180 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 1.2041ms
2025-06-17 23:09:50.189 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 11.6869ms
2025-06-17 23:09:50.446 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 23:09:50.467 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 20.9474ms
2025-06-17 23:09:50.804 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 23:09:50.804 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:09:50.804 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:09:50.824 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:09:50.826 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:09:50.826 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:09:50.826 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 22.0053ms
2025-06-17 23:09:50.826 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:09:50.826 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 22.3502ms
2025-06-17 23:10:02.470 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=asc - null null
2025-06-17 23:10:02.471 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-17 23:10:02.476 +04:00 [INF] Route matched with {action = "SortByCreatedDate", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SortByCreatedDate(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:10:02.495 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 23:10:02.511 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
ORDER BY [a].[CreatedDate], [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-17 23:10:02.516 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:10:02.516 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI) in 40.2396ms
2025-06-17 23:10:02.516 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-17 23:10:02.516 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=asc - 200 null application/json; charset=utf-8 45.8381ms
2025-06-17 23:10:05.268 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=desc - null null
2025-06-17 23:10:05.268 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-17 23:10:05.268 +04:00 [INF] Route matched with {action = "SortByCreatedDate", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SortByCreatedDate(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:10:05.280 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 23:10:05.291 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
ORDER BY [a].[CreatedDate] DESC, [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-17 23:10:05.292 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:10:05.292 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI) in 23.6672ms
2025-06-17 23:10:05.292 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-17 23:10:05.292 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=desc - 200 null application/json; charset=utf-8 24.0594ms
2025-06-17 23:10:11.268 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=asc - null null
2025-06-17 23:10:11.268 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-17 23:10:11.268 +04:00 [INF] Route matched with {action = "SortByCreatedDate", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SortByCreatedDate(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:10:11.270 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
ORDER BY [a].[CreatedDate], [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-17 23:10:11.270 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:10:11.270 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI) in 1.9281ms
2025-06-17 23:10:11.270 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-17 23:10:11.270 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=asc - 200 null application/json; charset=utf-8 2.3202ms
2025-06-17 23:10:17.626 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - null null
2025-06-17 23:10:17.627 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:10:17.627 +04:00 [INF] Route matched with {action = "GetAllPaginated", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPaginated(Int32) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:10:17.643 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Bio], [t].[BirthDate], [t].[CreatedDate], [t].[FullName], [t].[ImageUrl], [t].[IsDeleted], [t].[UpdatedDate], [t0].[MovieId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[Duration], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate], [t1].[SeriesId], [t1].[ActorId], [t1].[CharacterName], [t1].[Id], [t1].[CreatedDate], [t1].[Description], [t1].[IsDeleted], [t1].[PosterUrl], [t1].[ReleaseDate], [t1].[Title], [t1].[UpdatedDate]
FROM (
    SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate]
    FROM [Actors] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t1] ON [t].[Id] = [t1].[ActorId]
ORDER BY [t].[Id], [t0].[MovieId], [t0].[ActorId], [t0].[Id], [t1].[SeriesId], [t1].[ActorId]
2025-06-17 23:10:17.645 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Actors] AS [a]
2025-06-17 23:10:17.645 +04:00 [INF] Executing OkObjectResult, writing value of type 'Service.Helpers.Responses.PaginateResponse`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:10:17.645 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI) in 18.4253ms
2025-06-17 23:10:17.645 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.GetAllPaginated (CinelogAPI)'
2025-06-17 23:10:17.646 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/getallpaginated?page=1 - 200 null application/json; charset=utf-8 19.2485ms
2025-06-17 23:10:23.333 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/search?searchText=a - null null
2025-06-17 23:10:23.333 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI)'
2025-06-17 23:10:23.336 +04:00 [INF] Route matched with {action = "Search", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:10:23.356 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 23:10:23.373 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ToLower_0_contains='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
WHERE LOWER(LTRIM(RTRIM([a].[FullName]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-17 23:10:23.373 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:10:23.374 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI) in 37.418ms
2025-06-17 23:10:23.374 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI)'
2025-06-17 23:10:23.374 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/search?searchText=a - 200 null application/json; charset=utf-8 40.9855ms
2025-06-17 23:10:31.284 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/search?searchText=Jam - null null
2025-06-17 23:10:31.284 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI)'
2025-06-17 23:10:31.284 +04:00 [INF] Route matched with {action = "Search", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Search(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:10:31.286 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0_contains='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
WHERE LOWER(LTRIM(RTRIM([a].[FullName]))) LIKE @__ToLower_0_contains ESCAPE N'\'
ORDER BY [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-17 23:10:31.287 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:10:31.287 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI) in 2.8917ms
2025-06-17 23:10:31.287 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.Search (CinelogAPI)'
2025-06-17 23:10:31.287 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/search?searchText=Jam - 200 null application/json; charset=utf-8 3.355ms
2025-06-17 23:10:35.090 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=desc - null null
2025-06-17 23:10:35.090 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-17 23:10:35.090 +04:00 [INF] Route matched with {action = "SortByCreatedDate", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SortByCreatedDate(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:10:35.092 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
ORDER BY [a].[CreatedDate] DESC, [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-17 23:10:35.093 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:10:35.093 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI) in 3.0307ms
2025-06-17 23:10:35.093 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-17 23:10:35.093 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=desc - 200 null application/json; charset=utf-8 3.4276ms
2025-06-17 23:10:38.207 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=asc - null null
2025-06-17 23:10:38.208 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-17 23:10:38.208 +04:00 [INF] Route matched with {action = "SortByCreatedDate", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SortByCreatedDate(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:10:38.210 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
ORDER BY [a].[CreatedDate], [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-17 23:10:38.210 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:10:38.210 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI) in 2.5906ms
2025-06-17 23:10:38.210 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-17 23:10:38.210 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=asc - 200 null application/json; charset=utf-8 3.0689ms
2025-06-17 23:57:42.826 +04:00 [INF] User profile is available. Using 'C:\Users\Turan\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-17 23:57:42.973 +04:00 [INF] Now listening on: https://localhost:7209
2025-06-17 23:57:42.974 +04:00 [INF] Now listening on: http://localhost:5151
2025-06-17 23:57:43.042 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-17 23:57:43.042 +04:00 [INF] Hosting environment: Development
2025-06-17 23:57:43.042 +04:00 [INF] Content root path: C:\Users\Turan\source\repos\CinelogAPI\CinelogAPI
2025-06-17 23:57:43.494 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/index.html - null null
2025-06-17 23:57:43.544 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=asc - null null
2025-06-17 23:57:43.577 +04:00 [INF] Executing endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-17 23:57:43.594 +04:00 [INF] Route matched with {action = "SortByCreatedDate", controller = "Actor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SortByCreatedDate(System.String) on controller CinelogAPI.Controllers.Admin.ActorController (CinelogAPI).
2025-06-17 23:57:43.614 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/index.html - 200 null text/html;charset=utf-8 120.7712ms
2025-06-17 23:57:43.634 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - null null
2025-06-17 23:57:43.638 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 3.9695ms
2025-06-17 23:57:43.831 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/_vs/browserLink - null null
2025-06-17 23:57:43.850 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/_vs/browserLink - 200 null text/javascript; charset=UTF-8 19.2838ms
2025-06-17 23:57:44.182 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - null null
2025-06-17 23:57:44.221 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7209/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 38.8385ms
2025-06-17 23:57:44.688 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-17 23:57:44.955 +04:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Bio], [a].[BirthDate], [a].[CreatedDate], [a].[FullName], [a].[ImageUrl], [a].[IsDeleted], [a].[UpdatedDate], [t].[MovieId], [t].[ActorId], [t].[CharacterName], [t].[Id], [t].[CreatedDate], [t].[Description], [t].[Duration], [t].[IsDeleted], [t].[PosterUrl], [t].[ReleaseDate], [t].[Title], [t].[UpdatedDate], [t0].[SeriesId], [t0].[ActorId], [t0].[CharacterName], [t0].[Id], [t0].[CreatedDate], [t0].[Description], [t0].[IsDeleted], [t0].[PosterUrl], [t0].[ReleaseDate], [t0].[Title], [t0].[UpdatedDate]
FROM [Actors] AS [a]
LEFT JOIN (
    SELECT [m].[MovieId], [m].[ActorId], [m].[CharacterName], [m0].[Id], [m0].[CreatedDate], [m0].[Description], [m0].[Duration], [m0].[IsDeleted], [m0].[PosterUrl], [m0].[ReleaseDate], [m0].[Title], [m0].[UpdatedDate]
    FROM [MovieActors] AS [m]
    INNER JOIN [Movies] AS [m0] ON [m].[MovieId] = [m0].[Id]
) AS [t] ON [a].[Id] = [t].[ActorId]
LEFT JOIN (
    SELECT [s].[SeriesId], [s].[ActorId], [s].[CharacterName], [s0].[Id], [s0].[CreatedDate], [s0].[Description], [s0].[IsDeleted], [s0].[PosterUrl], [s0].[ReleaseDate], [s0].[Title], [s0].[UpdatedDate]
    FROM [SeriesActors] AS [s]
    INNER JOIN [Series] AS [s0] ON [s].[SeriesId] = [s0].[Id]
) AS [t0] ON [a].[Id] = [t0].[ActorId]
ORDER BY [a].[CreatedDate], [a].[Id], [t].[MovieId], [t].[ActorId], [t].[Id], [t0].[SeriesId], [t0].[ActorId]
2025-06-17 23:57:45.103 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Service.DTOs.Actor.ActorDto, Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-17 23:57:45.112 +04:00 [INF] Executed action CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI) in 1516.4305ms
2025-06-17 23:57:45.113 +04:00 [INF] Executed endpoint 'CinelogAPI.Controllers.Admin.ActorController.SortByCreatedDate (CinelogAPI)'
2025-06-17 23:57:45.116 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7209/api/actor/sortbycreateddate?order=asc - 200 null application/json; charset=utf-8 1572.3883ms
